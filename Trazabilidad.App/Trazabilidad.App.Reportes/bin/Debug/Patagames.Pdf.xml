<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Patagames.Pdf</name>
    </assembly>
    <members>
        <member name="T:Patagames.Pdf.Enums.ActionTypes">
            <summary>
            A type of action associated with bookmark
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.ActionTypes.Unsupported">
            <summary>
            Unsupported action type
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.ActionTypes.CurrentDoc">
            <summary>
            Go to a destination within current document.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.ActionTypes.ExternalDoc">
            <summary>
            Go to a destination within another document
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.ActionTypes.Uri">
            <summary>
            Universal Resource Identifier, including web pages and other Internet based resources
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.ActionTypes.Application">
            <summary>
            Launch an application or open a file
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.BitmapFormats">
            <summary>
            Bitmap formats
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.CharacterSetTypes">
            <summary>
            Character sets for the font
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.CharacterSetTypes.FXFONT_ANSI_CHARSET">
            <summary>
            ANSI character set
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.CharacterSetTypes.FXFONT_DEFAULT_CHARSET">
            <summary>
            Default character set
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.CharacterSetTypes.FXFONT_SYMBOL_CHARSET">
            <summary>
            Symbol character set
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.CharacterSetTypes.FXFONT_SHIFTJIS_CHARSET">
            <summary>
            Shiftjis character set
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.CharacterSetTypes.FXFONT_HANGEUL_CHARSET">
            <summary>
            Hangeul character set
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.CharacterSetTypes.FXFONT_GB2312_CHARSET">
            <summary>
            GB-2312 Character set
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.CharacterSetTypes.FXFONT_CHINESEBIG5_CHARSET">
            <summary>
            Chines big5 character set
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.ColorTypes">
            <summary>
            the colorspace in which the color is defined
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.ColorTypes.COLORTYPE_TRANSPARENT">
            <summary>
            No color; transparent 
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.ColorTypes.COLORTYPE_GRAY">
            <summary>
            DeviceGray
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.ColorTypes.COLORTYPE_RGB">
            <summary>
            DeviceRGB
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.ColorTypes.COLORTYPE_CMYK">
            <summary>
            DeviceCMYK
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.DocumentActionTypes">
            <summary>
            Additional actions type of document.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.DocumentActionTypes.BeforeClose">
            <summary>
            WC, before closing document, JavaScript action.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.DocumentActionTypes.BeforeSave">
            <summary>
            WS, before saving document, JavaScript action.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.DocumentActionTypes.AfterSave">
            <summary>
            DS, after saving document, JavaScript action.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.DocumentActionTypes.BeforePrint">
            <summary>
            WP, before printing document, JavaScript action.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.DocumentActionTypes.AfterPrint">
            <summary>
            DP, after printing document, JavaScript action. 
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.BeepTypes">
            <summary>
            The sound type.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.BeepTypes.Error">
            <summary>
            Error sound
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.BeepTypes.Warning">
            <summary>
            Warning sound
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.BeepTypes.Question">
            <summary>
            Question sound
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.BeepTypes.Status">
            <summary>
            Status sound
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.BeepTypes.Default">
            <summary>
            Default sound
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.ButtonTypes">
            <summary>
            The type of button group
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.ButtonTypes.Ok">
            <summary>
            Ok button
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.ButtonTypes.OkCancel">
            <summary>
            Ok and Cancel buttons
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.ButtonTypes.YesNo">
            <summary>
            Yes and No buttons
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.ButtonTypes.YesNoCancel">
            <summary>
            Yes, No and Cancel buttons
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.CursorTypes">
            <summary>
            Flags for Cursor type
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.CursorTypes.Arrow">
            <summary>
            Arrow cursor
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.CursorTypes.NESW">
            <summary>
            North east south west cursor
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.CursorTypes.NWSE">
            <summary>
            North west south east cursor
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.CursorTypes.VBeam">
            <summary>
            Vertical beam cursor
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.CursorTypes.HBeam">
            <summary>
            Horizontal beam cursor
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.CursorTypes.Hand">
            <summary>
            Hand cursor
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.DialogResults">
            <summary>
            The return value of messageboxes
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.DialogResults.Ok">
            <summary>
            Ok button was pressed
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.DialogResults.Cancel">
            <summary>
            Cancel button was pressed
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.DialogResults.No">
            <summary>
            No button was pressed
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.DialogResults.Yes">
            <summary>
            Yes button was pressed
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.DocumentTags">
            <summary>
            The tag for the meta data.<markup><br/></markup>
            Currently, It can be Title, Author, Subject
            Keywords, Creator, Producer, CreationDate, ModDate or  "Trapped".<markup><br/></markup>
            For detailed explanation of these tags and their respective values, please refer
            to <a href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF Reference 1.7</a>, section 10.2.1, "Document Information Dictionary".
            </summary>
            <seealso><a href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF Reference 1.7</a></seealso>
        </member>
        <member name="F:Patagames.Pdf.Enums.DocumentTags.Title">
            <summary>
            (Optional; PDF 1.1) The document’s title. 
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.DocumentTags.Author">
            <summary>
            (Optional) The name of the person who created the document. 
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.DocumentTags.Subject">
            <summary>
            (Optional; PDF 1.1) The subject of the document. 
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.DocumentTags.Keywords">
            <summary>
            (Optional; PDF 1.1) Keywords associated with the document. 
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.DocumentTags.Creator">
            <summary>
            (Optional) If the document was converted to PDF from another format, the name of the application (for example, Adobe FrameMaker®) that created the original document from which it was converted. 
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.DocumentTags.Producer">
            <summary>
            (Optional) If the document was converted to PDF from another format, the name of the application (for example, Acrobat Distiller) that converted it to PDF. 
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.DocumentTags.CreationDate">
            <summary>
            (Optional) The date and time the document was created, in human-readable form (see Section 3.8.3, “Dates”). 
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.DocumentTags.ModificationDate">
            <summary>
            (Required if PieceInfo is present in the document catalog; otherwise optional; PDF 1.1) The date and time the document was most recently modified, in human-readable form (see Section 3.8.3, “Dates”). 
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.DocumentTags.Trapped">
            <summary>
            (Optional; PDF 1.3) A name object indicating whether the document has
            been modified to include trapping information (see Section 10.10.5, “Trapping Support”):
            True The document has been fully trapped; no further trapping is
            needed. (This is the name True, not the boolean value true.)
            False The document has not yet been trapped; any desired
            trapping must still be done. (This is the name False, not the
            boolean value false.)
            Unknown Either it is unknown whether the document has been
            trapped or it has been partly but not yet fully trapped; some
            additional trapping may still be needed.
            Default value: Unknown.
            The value of this entry may be set automatically by the software creating the
            document’s trapping information, or it may be known only to a human operator
            and entered manually. 
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.DuplexTypes">
            <summary>
            Duplex types
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.DuplexTypes.DuplexUndefined">
            <summary>
            Undefined
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.DuplexTypes.Simplex">
            <summary>
            Simplex
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.DuplexTypes.DuplexFlipShortEdge">
            <summary>
            Flip short edge
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.DuplexTypes.DuplexFlipLongEdge">
            <summary>
            Flip long ebge
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.FieldFlags">
            <summary>
             Field's flags specifying various characteristics of the field.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FieldFlags.ReadOnly">
            <summary>
            If set, the user may not change the value of the field. Any associated widget
            annotations will not interact with the user; that is, they will not respond to
            mouse clicks or change their appearance in response to mouse motions. This
            flag is useful for fields whose values are computed or imported from a database.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FieldFlags.Required">
            <summary>
            If set, the field must have a value at the time it is exported by a submit-form action. 
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FieldFlags.NoExport">
            <summary>
            If set, the field must not be exported by a submit-form action
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.FillModes">
            <summary>
            Fill modes
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FillModes.FPDF_FILL_NULL">
            <summary>
            None
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FillModes.FPDF_FILL_ALTERNATE">
            <summary>
            Alternate
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FillModes.FPDF_FILL_WINDING">
            <summary>
            Winding
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.FindFlags">
            <summary>
            Flags used by <see cref="M:Patagames.Pdf.Pdfium.FPDFText_FindStart(System.IntPtr,System.String,Patagames.Pdf.Enums.FindFlags,System.Int32)"/> function.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FindFlags.None">
            <summary>
            Not set any flags
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FindFlags.MatchCase">
            <summary>
            If not set, it will not match case by default
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FindFlags.MatchWholeWord">
            <summary>
            If not set, it will not match the whole word by default.
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.FlattenFlags">
            <summary>
            The flags for the <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_Flatten(System.IntPtr,Patagames.Pdf.Enums.FlattenFlags)"/> function
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FlattenFlags.NormalDisplay">
            <summary>
            for normal display
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FlattenFlags.FlatPrint">
            <summary>
            for print
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.FlattenResults">
            <summary>
            The result flag of the <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_Flatten(System.IntPtr,Patagames.Pdf.Enums.FlattenFlags)"/> function
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FlattenResults.Fail">
            <summary>
            Flatten operation failed
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FlattenResults.Success">
            <summary>
            Flatten operation succeed.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FlattenResults.NothingTodo">
            <summary>
            There is nothing can be flatten
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.FormFieldTypes">
            <summary>
            Form field Types
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FormFieldTypes.FPDF_FORMFIELD_NOFIELDS">
            <summary>
            -1 indicates no fields
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FormFieldTypes.FPDF_FORMFIELD_UNKNOWN">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FormFieldTypes.FPDF_FORMFIELD_PUSHBUTTON">
            <summary>
            push button type.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FormFieldTypes.FPDF_FORMFIELD_CHECKBOX">
            <summary>
            check box type.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FormFieldTypes.FPDF_FORMFIELD_RADIOBUTTON">
            <summary>
            radio button type.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FormFieldTypes.FPDF_FORMFIELD_COMBOBOX">
            <summary>
            combo box type.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FormFieldTypes.FPDF_FORMFIELD_LISTBOX">
            <summary>
            list box type.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FormFieldTypes.FPDF_FORMFIELD_TEXTFIELD">
            <summary>
            text field type.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FormFieldTypes.FPDF_FORMFIELD_SIGNATURE">
            <summary>
            Signature
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FormFieldTypes.Last">
            <summary>
            The last elemеnt in this enumeration
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.FormFieldTypesEx">
            <summary>
            Field types
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FormFieldTypesEx.Unknown">
            <summary>
            Unknown field type
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FormFieldTypesEx.PushButton">
            <summary>
            PA pushbutton is a purely interactive control that responds immediately to user input without retaining a permanent value 
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FormFieldTypesEx.RadioButton">
            <summary>
            Radio button fields contain a set of related buttons that can each be on or off. Typically, at most one radio button in a set may be on at any given time, and selecting any one of the buttons automatically deselects all the others. 
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FormFieldTypesEx.CheckBox">
            <summary>
            A check box toggles between two states, on and off
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FormFieldTypesEx.Text">
            <summary>
            Text fields are boxes or spaces in which the user can enter text from the keyboard.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FormFieldTypesEx.RichText">
            <summary>
            Rich text
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FormFieldTypesEx.File">
            <summary>
            File
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FormFieldTypesEx.ListBox">
            <summary>
            ListBox
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FormFieldTypesEx.ComboBox">
            <summary>
            ComboBox
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FormFieldTypesEx.Sign">
            <summary>
            Signature fields represent electronic signatures for authenticating the identity of a user and the validity of the document’s contents.
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.FormHighlightingMode">
            <summary>
            The annotation’s highlighting mode, the visual effect to be used when the mouse button is pressed or held down inside its active area
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FormHighlightingMode.None">
            <summary>
            No highlighting
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FormHighlightingMode.Invert">
            <summary>
             Invert the contents of the annotation rectangle
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FormHighlightingMode.Outline">
            <summary>
            Invert the annotation’s border
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FormHighlightingMode.Push">
            <summary>
            Display the annotation as if it were being pushed below the surface of the page
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FormHighlightingMode.Toggle">
            <summary>
            Toggle
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.FXDIBFormats">
            <summary>
            A number indicating for bitmap format
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FXDIBFormats.Bytes1">
            <summary>
            Gray scale bitmap, one byte per pixel
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FXDIBFormats.Bytes3">
            <summary>
            3 bytes per pixel, byte order: blue, green, red
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FXDIBFormats.Bytes4">
            <summary>
            4 bytes per pixel, byte order: blue, green, red, unused
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.FXDIBFormats.Bytes4Alpha">
            <summary>
            4 bytes per pixel, byte order: blue, green, red, alpha
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.IconTypes">
            <summary>
            The Icon type.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.IconTypes.Error">
            <summary>
            Error icon
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.IconTypes.Warning">
            <summary>
            Warning icon
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.IconTypes.Question">
            <summary>
            Question icon
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.IconTypes.Status">
            <summary>
            Status icon
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.IsFormAvailableResults">
            <summary>
            The result of the process which check availabilty the forms inside PDF.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.IsFormAvailableResults.Error">
            <summary>
            error, the input parameter not correct, such as hints is null.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.IsFormAvailableResults.NotAvaialble">
            <summary>
            data not available
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.IsFormAvailableResults.Available">
            <summary>
            data available
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.IsFormAvailableResults.NoFormData">
            <summary>
            No form data.
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.IsLinearizedResults">
            <summary>
            The result of the process which check linearized PDF.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.IsLinearizedResults.UnknownLinearized">
            <summary>
            Unknownd linearized state
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.IsLinearizedResults.NotLinearized">
            <summary>
            Not linearized state
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.IsLinearizedResults.IsLinearized">
            <summary>
            Linearized state
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.JustifyTypes">
            <summary>
            A code specifying the form of quadding (justification) to be used in displaying the text
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.JustifyTypes.Left">
            <summary>
            Left-justified 
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.JustifyTypes.Centered">
            <summary>
            Centered 
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.JustifyTypes.Right">
            <summary>
            Right-justified 
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.KeyboardModifiers">
            <summary>
            Keyboard modifiers
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.PageActionTypes">
            <summary>
            Additional-action types of page object
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.PageActionTypes.FPDFPAGE_AACTION_OPEN">
            <summary>
            /O -- An action to be performed when the page is opened
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.PageActionTypes.FPDFPAGE_AACTION_CLOSE">
            <summary>
            /C -- An action to be performed when the page is closed
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.PageModes">
            <summary>
            Flags for page mode.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.PageModes.Unknown">
            <summary>
            Unknown value
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.PageModes.UseNone">
            <summary>
            Neither document outline nor thumbnail images visible
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.PageModes.UseOutlines">
            <summary>
            Document outline visible
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.PageModes.UseThumbs">
            <summary>
            Thumbnial images visible
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.PageModes.FullScreen">
            <summary>
            Full-screen mode, with no menu bar, window controls, or any other window visible
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.PageModes.UseOc">
            <summary>
            Optional content group panel visible
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.PageModes.UseAttachments">
            <summary>
            Attachments panel visible
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.PageObjectTypes">
            <summary>
            Types of page object
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.PageObjectTypes.PDFPAGE_TEXT">
            <summary>
            Text object
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.PageObjectTypes.PDFPAGE_PATH">
            <summary>
            Path object
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.PageObjectTypes.PDFPAGE_IMAGE">
            <summary>
            Image object
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.PageObjectTypes.PDFPAGE_SHADING">
            <summary>
            Shading object
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.PageObjectTypes.PDFPAGE_FORM">
            <summary>
            Page form object
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.PageObjectTypes.PDFPAGE_INLINES">
            <summary>
            Inline object
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.PageRotate">
            <summary>
            Page orientation: 
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.PageRotate.Normal">
            <summary>
            Not rotated
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.PageRotate.Rotate90">
            <summary>
            rotated 90 degrees clockwise
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.PageRotate.Rotate180">
            <summary>
            rotated 180 degrees
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.PageRotate.Rotate270">
            <summary>
            rotated 270 degrees clockwise
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.PdfUserAccessPermission">
            <summary>
            Specifies which operations are permitted when the document is opened with user access.
            </summary>
            <remarks>
            <para>Bit 1–2 Reserved; must be 0.</para>
            <para>Bit 7–8 Reserved; must be 1.</para>
            <para>Bit 13–32 (Revision 3 or greater) Reserved; must be 1.</para>
            <para>Please refer to <a href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF Reference</a> for detailed description.</para>
            </remarks>
            <seealso><a href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF Reference 1.7</a></seealso>
        </member>
        <member name="F:Patagames.Pdf.Enums.PdfUserAccessPermission.NoPernission">
            <summary>
            Permits everything. This is the default value.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.PdfUserAccessPermission.PermitAll">
            <summary>
            Permits everything. This is the default value.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.PdfUserAccessPermission.PermitPrint">
            <summary>
            Bit 3 (Revision 2) Print the document.
            (Revision 3 or greater) Print the document (possibly not at the highest
            quality level, depending on whether bit 12 is also set).
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.PdfUserAccessPermission.PermitModifyDocument">
            <summary>Bit 4 Modify the contents of the document by operations other than
            those controlled by bits 6, 9, and 11.</summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.PdfUserAccessPermission.PermitExtractContent">
            <summary>Bit 5 (Revision 2) Copy or otherwise extract text and graphics from the
            document, including extracting text and graphics (in support of accessibility
            to users with disabilities or for other purposes).
            (Revision 3 or greater) Copy or otherwise extract text and graphics
            from the document by operations other than that controlled by bit 10.</summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.PdfUserAccessPermission.PermitAnnotations">
            <summary>Bit 6 Add or modify text annotations, fill in interactive form fields, and,
            if bit 4 is also set, create or modify interactive form fields (including
            signature fields).</summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.PdfUserAccessPermission.PermitFormsFill">
            <summary>9 (Revision 3 or greater) Fill in existing interactive form fields (including
            signature fields), even if bit 6 is clear.</summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.PdfUserAccessPermission.PermitAccessibilityExtractContent">
            <summary>Bit 10 (Revision 3 or greater) Extract text and graphics (in support of accessibility
            to users with disabilities or for other purposes).</summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.PdfUserAccessPermission.PermitAssembleDocument">
            <summary>Bit 11 (Revision 3 or greater) Assemble the document (insert, rotate, or delete
            pages and create bookmarks or thumbnail images), even if bit 4
            is clear.</summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.PdfUserAccessPermission.PermitFullQualityPrint">
            <summary>Bit 12 (Revision 3 or greater) Print the document to a representation from
            which a faithful digital copy of the PDF content could be generated.
            When this bit is clear (and bit 3 is set), printing is limited to a lowlevel
            representation of the appearance, possibly of degraded quality.
            (See implementation note 24 in Appendix H.)</summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.PitchFamilyFlags">
            <summary>
            Font pitch and family flags
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.PitchFamilyFlags.FXFONT_FF_FIXEDPITCH">
            <summary>
            Fixed pitch
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.PitchFamilyFlags.FXFONT_FF_ROMAN">
            <summary>
            Roman family
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.PitchFamilyFlags.FXFONT_FF_SCRIPT">
            <summary>
            Script family
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.ProgressiveRenderingStatuses">
            <summary>
            Flags for progressive process status.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.ProgressiveRenderingStatuses.RenderReader">
            <summary>
            Render reader
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.ProgressiveRenderingStatuses.RenderTobeContinued">
            <summary>
            Render paused
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.ProgressiveRenderingStatuses.RenderDone">
            <summary>
            Render done
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.ProgressiveRenderingStatuses.RenderFailed">
            <summary>
            Render failed
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.RenderFlags">
            <summary>
            Page rendering flags. They can be combined with bit OR.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.RenderFlags.FPDF_NONE">
            <summary>
            None
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.RenderFlags.FPDF_ANNOT">
            <summary>
            Set if annotations are to be rendered.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.RenderFlags.FPDF_LCD_TEXT">
            <summary>
            Set if using text rendering optimized for LCD display.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.RenderFlags.FPDF_NO_NATIVETEXT">
            <summary>
            Don't use the native text output available on some platforms
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.RenderFlags.FPDF_GRAYSCALE">
            <summary>
            Grayscale output.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.RenderFlags.FPDF_DEBUG_INFO">
            <summary>
            Set if you want to get some debug info. Please discuss with Foxit first if you need to collect debug info. 
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.RenderFlags.FPDF_NO_CATCH">
            <summary>
            Set if you don't want to catch exception.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.RenderFlags.FPDF_RENDER_LIMITEDIMAGECACHE">
            <summary>
            Limit image cache size. 
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.RenderFlags.FPDF_RENDER_FORCEHALFTONE">
            <summary>
            Always use halftone for image stretching.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.RenderFlags.FPDF_PRINTING">
            <summary>
            Render for printing.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.RenderFlags.FPDF_REVERSE_BYTE_ORDER">
            <summary>
            set whether render in a reverse Byte order, this flag only enable when render to a bitmap.
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.SandboxPolicies">
            <summary>
            Policy for Sandbox
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.SandboxPolicies.FPDF_POLICY_MACHINETIME_ACCESS">
            <summary>
            machinetime access sandbox policy
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.SaveFlags">
            <summary>
            Flags for <see cref="M:Patagames.Pdf.Pdfium.FPDF_SaveAsCopy(System.IntPtr,Patagames.Pdf.FPDF_FILEWRITE,Patagames.Pdf.Enums.SaveFlags)"/> and <see cref="M:Patagames.Pdf.Pdfium.FPDF_SaveWithVersion(System.IntPtr,Patagames.Pdf.FPDF_FILEWRITE,Patagames.Pdf.Enums.SaveFlags,System.Int32)"/>
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.SaveFlags.Incremental">
            <summary>
            Incremental
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.SaveFlags.NoIncremental">
            <summary>
            No Incremental.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.SaveFlags.RemoveSecurity">
            <summary>
            Remove security
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.TextPositions">
            <summary>
            Indicating where to position the text of the control caption relative to its icon
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.TextPositions.TEXTPOS_CAPTION">
            <summary>
             No icon; caption only
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.TextPositions.TEXTPOS_ICON">
            <summary>
            No caption; icon only
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.TextPositions.TEXTPOS_BELOW">
            <summary>
             Caption below the icon 
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.TextPositions.TEXTPOS_ABOVE">
            <summary>
             Caption above the icon 
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.TextPositions.TEXTPOS_RIGHT">
            <summary>
             Caption to the right of the icon
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.TextPositions.TEXTPOS_LEFT">
            <summary>
            Caption to the left of the icon
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.TextPositions.TEXTPOS_OVERLAID">
            <summary>
             Caption overlaid directly on the icon 
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.UnsupportedObjectTypes">
            <summary>
            flags for type of unsupport object.
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.FWL_VKEYCODE">
            <summary>
            Virtual keycodes
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Enums.ZoomTypes">
            <summary>
            Zoom types
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.ZoomTypes.PDFZOOM_XYZ">
            <summary>
            Zoom xyx
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.ZoomTypes.PDFZOOM_FITPAGE">
            <summary>
            Fit to page
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.ZoomTypes.PDFZOOM_FITHORZ">
            <summary>
            Fit to width
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.ZoomTypes.PDFZOOM_FITVERT">
            <summary>
            Fit to height
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.ZoomTypes.PDFZOOM_FITRECT">
            <summary>
            Fit to rectangle
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.ZoomTypes.PDFZOOM_FITBBOX">
            <summary>
            fit to bounding box
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.ZoomTypes.PDFZOOM_FITBHORZ">
            <summary>
            Fit to bounding box width
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Enums.ZoomTypes.PDFZOOM_FITBVERT">
            <summary>
            Fit to bounding box height
            </summary>
        </member>
        <member name="T:Patagames.Pdf.BeforeValueChangeCallback">
            <summary>
            This method invoked by SDK before field is changed.
            </summary>
            <param name="field">Handle to Field object</param>
            <param name="value">Field's value</param>
            <returns>Must return Zero</returns>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="T:Patagames.Pdf.AfterValueChangeCallback">
            <summary>
            This method invoked by SDK after field is changed.
            </summary>
            <param name="field">Handle to Field object</param>
            <returns>Must return Zero</returns>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="T:Patagames.Pdf.BeforeSelectionChangeCallback">
            <summary>
            This method invoked by SDK before field's selection is changed.
            </summary>
            <param name="field">Handle to Field object</param>
            <param name="value">Field's value</param>
            <returns>Must return Zero</returns>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="T:Patagames.Pdf.AfterSelectionChangeCallback">
            <summary>
            This method invoked by SDK after field's selection is changed.
            </summary>
            <param name="field">Handle to Field object</param>
            <returns>Must return Zero</returns>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="T:Patagames.Pdf.AfterCheckedStatusChangeCallback">
            <summary>
            This method invoked by SDK after checked statuses is changed.
            </summary>
            <param name="field">Handle to Field object</param>
            <param name="statusArray">Array of checked statuses</param>
            <returns>Must return Zero</returns>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="T:Patagames.Pdf.BeforeFormResetCallback">
            <summary>
            This method invoked by SDK before forms is reseted.
            </summary>
            <param name="intForm">Handle to Interactive Forms object</param>
            <returns>Must return Zero</returns>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="T:Patagames.Pdf.AfterFormResetCallback">
            <summary>
            This method invoked by SDK after forms is reseted.
            </summary>
            <param name="intForm">Handle to Interactive Forms object</param>
            <returns>Must return Zero</returns>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="T:Patagames.Pdf.BeforeFormImportDataCallback">
            <summary>
            This method invoked by SDK before forms data is imported.
            </summary>
            <param name="intForm">Handle to Interactive Forms object</param>
            <returns>Must return Zero</returns>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="T:Patagames.Pdf.AfterFormImportDataCallback">
            <summary>
            This method invoked by SDK after forms data is imported.
            </summary>
            <param name="intForm">Handle to Interactive Forms object</param>
            <returns>Must return Zero</returns>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="T:Patagames.Pdf.FPDF_FORMFILLNOTIFY">
            <summary>
            The class that receives the notification from the forms
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FPDF_FORMFILLNOTIFY.Version">
            <summary>
            Version number of the interface. Currently must be 1.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FPDF_FORMFILLNOTIFY.BeforeValueChange">
            <summary>
            Application defined callback function. See <see cref="T:Patagames.Pdf.BeforeValueChangeCallback"/> delegate for detail
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="F:Patagames.Pdf.FPDF_FORMFILLNOTIFY.AfterValueChange">
            <summary>
            Application defined callback function. See <see cref="T:Patagames.Pdf.AfterValueChangeCallback"/> delegate for detail
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="F:Patagames.Pdf.FPDF_FORMFILLNOTIFY.BeforeSelectionChange">
            <summary>
            Application defined callback function. See <see cref="T:Patagames.Pdf.BeforeSelectionChangeCallback"/> delegate for detail
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="F:Patagames.Pdf.FPDF_FORMFILLNOTIFY.AfterSelectionChange">
            <summary>
            Application defined callback function. See <see cref="T:Patagames.Pdf.AfterSelectionChangeCallback"/> delegate for detail
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="F:Patagames.Pdf.FPDF_FORMFILLNOTIFY.AfterCheckedStatusChange">
            <summary>
            Application defined callback function. See <see cref="T:Patagames.Pdf.AfterCheckedStatusChangeCallback"/> delegate for detail
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="F:Patagames.Pdf.FPDF_FORMFILLNOTIFY.BeforeFormReset">
            <summary>
            Application defined callback function. See <see cref="T:Patagames.Pdf.BeforeFormResetCallback"/> delegate for detail
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="F:Patagames.Pdf.FPDF_FORMFILLNOTIFY.AfterFormReset">
            <summary>
            Application defined callback function. See <see cref="T:Patagames.Pdf.AfterFormResetCallback"/> delegate for detail
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="F:Patagames.Pdf.FPDF_FORMFILLNOTIFY.BeforeFormImportData">
            <summary>
            Application defined callback function. See <see cref="T:Patagames.Pdf.BeforeFormImportDataCallback"/> delegate for detail
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="F:Patagames.Pdf.FPDF_FORMFILLNOTIFY.AfterFormImportData">
            <summary>
            Application defined callback function. See <see cref="T:Patagames.Pdf.AfterFormImportDataCallback"/> delegate for detail
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="T:Patagames.Pdf.FX_RECT">
            <summary>
            Rectangle area in device coordination system.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FX_RECT.left">
            <summary>
            The x-coordinate of the left-top corner.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FX_RECT.top">
            <summary>
            The y-coordinate of the left-top corner.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FX_RECT.right">
            <summary>
            The x-coordinate of the right-bottom corner.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FX_RECT.bottom">
            <summary>
            The y-coordinate of the right-bottom corner.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FX_RECT.Width">
            <summary>
            Gets the width of current rectangle
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FX_RECT.Height">
            <summary>
            Gets the height of current rectangle
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.Controls.PdfView">
            <summary>
            Represents a pdf view control for displaying an Pdf document.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.PdfView.#ctor">
            <summary>
            Initializes a new instance of the PdfView class.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.PdfView.LoadDocument(System.String,System.String)">
            <summary>
            Open and load a PDF document from a file.
            </summary>
            <param name="path">Path to the PDF file (including extension)</param>
            <param name="password">A string used as the password for PDF file. If no password needed, empty or NULL can be used.</param>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.UnknownErrorException">unknown error</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.PdfFileNotFoundException">file not found or could not be opened</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.BadFormatException">file not in PDF format or corrupted</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.InvalidPasswordException">password required or incorrect password</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.UnsupportedSecuritySchemeException">unsupported security scheme</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.PdfiumException">Error occured in PDFium. See ErrorCode for detail</exception>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.PdfView.LoadDocument(System.IO.Stream,System.String)">
            <summary>
            Loads the PDF document from the specified stream.
            </summary>
            <param name="stream">The stream containing the PDF document to load. The stream must support seeking.</param>
            <param name="password">A string used as the password for PDF file. If no password needed, empty or NULL can be used.</param>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.UnknownErrorException">unknown error</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.PdfFileNotFoundException">file not found or could not be opened</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.BadFormatException">file not in PDF format or corrupted</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.InvalidPasswordException">password required or incorrect password</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.UnsupportedSecuritySchemeException">unsupported security scheme</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.PdfiumException">Error occured in PDFium. See ErrorCode for detail</exception>
            <remarks><note type="note">The application should maintain the stream resources being valid until the PDF document close.</note></remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.PdfView.CloseDocument">
            <summary>
            Close a loaded PDF document.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.PdfView.SelectText(System.Int32,System.Int32)">
            <summary>
            Selects the text contained in current page.
            </summary>
            <param name="startIndex">Index for the start characters</param>
            <param name="length">Number of characters to be extracted</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.PdfView.OnResize(System.EventArgs)">
            <summary>
            Update layout before resize
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.PdfView.IsInputKey(System.Windows.Forms.Keys)">
            <summary>
            Provide the support for KeyDown event
            </summary>
            <param name="keyData"></param>
            <returns></returns>
        </member>
        <member name="F:Patagames.Pdf.Net.Controls.PdfView.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.PdfView.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.Controls.PdfView.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.PdfView.Document">
            <summary>
            Gets the PDF document associated with the current PdfView control.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.PdfView.PdfBackColor">
            <summary>
            Gets or sets the background color for the control under PDF page.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.PdfView.SizeMode">
            <summary>
            Indicates how the PDF is displayed. Valid values for this property are taken from the <see cref="T:Patagames.Pdf.Net.Controls.SizeModes"/> enumeration.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.PdfView.Zoom">
            <summary>
            This property allows you to scale the PDF page. To take effect the <see cref="P:Patagames.Pdf.Net.Controls.PdfView.SizeMode"/> property should be Zoom
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.PdfView.Rotation">
            <summary>
            Gets or sets rotation of the current page.
            </summary>
            <remarks>The PDF page rotates clockwise. See <see cref="T:Patagames.Pdf.Enums.PageRotate"/> for details.</remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.PdfView.CurrentPage">
            <summary>
            Gets or sets the current index of a page in Pdf document
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.PdfView.SelectColor">
            <summary>
            Gets or sets the selection color of the control.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.Controls.PdfView.SelectedText">
            <summary>
            Gets selected text from PdfView control
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.Controls.SizeModes">
            <summary>
            Specifies how an pdf page is positioned within a PdfView control.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Net.Controls.SizeModes.FitToSize">
            <summary>
            The page is scaled to fit the page to worksheet.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Net.Controls.SizeModes.FitToWidth">
            <summary>
            Phe page is scaled to fit the width to worksheet.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Net.Controls.SizeModes.FitToHeight">
            <summary>
            The page is scaled to fit the height to worksheet.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Net.Controls.SizeModes.Zoom">
            <summary>
            The page is scaled with specified coefficient.
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.EventArguments.CustomLoadEventArgs">
            <summary>
            Represents the class that contain event data for <see cref="E:Patagames.Pdf.Net.PdfCustomLoader.LoadBlock"/> event
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.EventArguments.CustomLoadEventArgs.#ctor(System.Byte[],System.Int32,System.Byte[])">
            <summary>
            Construct CustomLoadEventArgs object
            </summary>
            <param name="userData">Custom user data</param>
            <param name="position">Position is specified by byte offset from beginning of the file.</param>
            <param name="buffer">Buffer for loaded data allocated inside Pdfium SDK.</param>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.CustomLoadEventArgs.UserData">
            <summary>
            Gets custom user data
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.CustomLoadEventArgs.Position">
            <summary>
            Gets position is specified by byte offset from beginning of the file.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.CustomLoadEventArgs.Buffer">
            <summary>
            Gets buffer for loaded data allocated inside Pdfium SDK.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.CustomLoadEventArgs.ReturnValue">
            <summary>
            Should be true if successful, false for error.
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.Exceptions.NotAvailableException">
            <summary>
            The exception that is thrown when the element (document, page, forms and etc) is not yet available.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Exceptions.NotAvailableException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Patagames.Pdf.Net.Exceptions.NotAvailableException"/> class with a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="T:Patagames.Pdf.Net.EventArguments.AddSegmentEventArgs">
            <summary>
            Represents the class that contain event data for <see cref="E:Patagames.Pdf.Net.PdfAvailabilityProvider.AddSegment"/> event. This event called by SDK to report some downloading hints for download manager.
            </summary>
            <remarks>The position and size of section may be not accurate, part of the section might be already available.
            The download manager must deal with that to maximize download efficiency.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.EventArguments.AddSegmentEventArgs.#ctor(System.Int32,System.Int32)">
            <summary>
            Construct <see cref="T:Patagames.Pdf.Net.EventArguments.AddSegmentEventArgs"/> object
            </summary>
            <param name="segmentOffset">The offset of the hint reported to be downloaded.</param>
            <param name="segmentSize">The size of the hint reported to be downloaded.</param>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.AddSegmentEventArgs.SegmentOffset">
            <summary>
            Gets the offset of the hint reported to be downloaded.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.AddSegmentEventArgs.SegmentSize">
            <summary>
            Gets the size of the hint reported to be downloaded.
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.EventArguments.AppAlertEventArgs">
            <summary>
            Represents the class that contain event data for display alert window from SDK
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.EventArguments.AppAlertEventArgs.#ctor(System.String,System.String,Patagames.Pdf.Enums.ButtonTypes,Patagames.Pdf.Enums.IconTypes)">
            <summary>
            Construct AppAlertEventArgs object.
            </summary>
            <param name="Text">A string containing the message to be displayed.</param>
            <param name="Title">The title of the dialog.</param>
            <param name="ButtonType">The stype of button group. 0-OK(default); 1-OK,Cancel; 2-Yes,NO; 3-Yes, NO, Cancel.</param>
            <param name="IconType">The icon type</param>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.AppAlertEventArgs.Text">
            <summary>
            Gets displayed text.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.AppAlertEventArgs.Title">
            <summary>
            Gets dispayed title.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.AppAlertEventArgs.ButtonType">
            <summary>
            Gets button type for displayed window
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.AppAlertEventArgs.IconType">
            <summary>
            Gets icon type for displayed window
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.AppAlertEventArgs.DialogResult">
            <summary>
            Sets the button type that the user clicked in the alert window
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.EventArguments.AppResponseEventArgs">
            <summary>
            Represents the class that contain event data for display response window from SDK
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.EventArguments.AppResponseEventArgs.#ctor(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Construct AppAlertEventArgs object.
            </summary>
            <param name="Question">The question to be posed to the user.</param>
            <param name="Title">The title of the dialog box.</param>
            <param name="Default">A default value for the answer to the question. If not specified, no default value is presented.</param>
            <param name="cLabel">A short string to appear in front of and on the same line as the edit text field.</param>
            <param name="IsPassword">If true, indicates that the user's response should show as asterisks (*) or bullets (?) to mask the response, which might be sensitive information. The default is false.</param>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.AppResponseEventArgs.Question">
            <summary>
            The question to be posed to the user.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.AppResponseEventArgs.Title">
            <summary>
            The title of the dialog box.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.AppResponseEventArgs.Default">
            <summary>
            A default value for the answer to the question. If not specified, no default value is presented.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.AppResponseEventArgs.cLabel">
            <summary>
            A short string to appear in front of and on the same line as the edit text field.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.AppResponseEventArgs.IsPassword">
            <summary>
            If true, indicates that the user's response should show as asterisks (*) or bullets (?) to mask the response, which might be sensitive information. The default is false.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.AppResponseEventArgs.UserResponse">
            <summary>
            To receive the user's response.
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.EventArguments.BrowseFileEventArgs">
            <summary>
            Represents the class that contain event data for display File Browse Dialog from SDK
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.BrowseFileEventArgs.FilePath">
            <summary>
            The application must set this property to a user-selected file
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.EventArguments.DoGotoActionEventArgs">
            <summary>
            Represents the class that contain event data for Goto action
            </summary>
            <remarks>
            <para>Application must changes the view to a specified destination.</para>
            <para>See the Destinations description of <a href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF Reference, Version 1.7</a> in 8.2.1 for more details.</para></remarks>
            <seealso><a href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF Reference 1.7</a></seealso>
        </member>
        <member name="M:Patagames.Pdf.Net.EventArguments.DoGotoActionEventArgs.#ctor(System.Int32,Patagames.Pdf.Enums.ZoomTypes,System.Single[])">
            <summary>
            Construct DoGotoActionEventArgs object.
            </summary>
            <param name="PageIndex">The index of the PDF page.</param>
            <param name="Zoom">The zoom mode for viewing page.See ZoomTypes.</param>
            <param name="Positions">The float array which carries the position info</param>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.DoGotoActionEventArgs.PageIndex">
            <summary>
            The index of the PDF page.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.DoGotoActionEventArgs.Zoom">
            <summary>
            The zoom mode for viewing page.See ZoomTypes.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.DoGotoActionEventArgs.Positions">
            <summary>
            The float array which carries the position info
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.EventArguments.EventArgs`1">
            <summary>
            Represents the class that contain event data, and provides a value to use for various events.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Patagames.Pdf.Net.EventArguments.EventArgs`1.#ctor(`0)">
            <summary>
            Construct EventArgs object
            </summary>
            <param name="value"></param>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.EventArgs`1.Value">
            <summary>
            Gets or sets a value, which depend on the type of event
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.EventArguments.FocusChangedEventArgs">
            <summary>
            Represents the class that contain event data for <see cref="E:Patagames.Pdf.Net.PdfForms.FocusChanged"/> event
            </summary>
            <remarks>Currently,only support text field and combobox field.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.EventArguments.FocusChangedEventArgs.#ctor(System.String,System.Boolean)">
            <summary>
            Construct FocusChangedEventArgs object
            </summary>
            <param name="value">The string value of the form field.</param>
            <param name="isFocused">True if the form field is getting a focus, False for losing a focus.</param>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.FocusChangedEventArgs.Value">
            <summary>
            The string value of the form field.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.FocusChangedEventArgs.IsFocused">
            <summary>
            True if the form field is getting a focus, False for losing a focus.
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.EventArguments.InvalidatePageEventArgs">
            <summary>
            Represents the class that contain event data for invalidate the client area within the specified rectangle.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.EventArguments.InvalidatePageEventArgs.#ctor(Patagames.Pdf.Net.PdfPage,Patagames.Pdf.FS_RECTF)">
            <summary>
            Construct InvalidatePageEventArgs object
            </summary>
            <param name="page">PdfPage object</param>
            <param name="rect">Rectangle to invalidate</param>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.InvalidatePageEventArgs.Page">
            <summary>
            PdfPage object
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.InvalidatePageEventArgs.Rect">
            <summary>
            Rectangle to invalidate
            </summary>
            <remarks>All positions are measured in PDF "user space". Implementation should call <see cref="O:PdfPage.Render"/> method for repainting a specified page area.</remarks>
        </member>
        <member name="T:Patagames.Pdf.Net.EventArguments.LocalTimeEventArgs">
            <summary>
            Represents the class that contain event data for <see cref="E:Patagames.Pdf.Net.PdfForms.LocalTime"/> event
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.LocalTimeEventArgs.Time">
            <summary>
            Application should sets current time to this property
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.EventArguments.PrintEventArgs">
            <summary>
            Represents the class that contain event data for <see cref="E:Patagames.Pdf.Net.PdfForms.Print"/> event
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.EventArguments.PrintEventArgs.#ctor(System.Boolean,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Construct PrintEventArgs object
            </summary>
            <param name="bUI">If true, will cause a UI to be presented to the user to obtain printing information and confirm the action.</param>
            <param name="nStart">A 0-based index that defines the start of an inclusive range of pages.</param>
            <param name="nEnd">A 0-based index that defines the end of an inclusive page range.</param>
            <param name="bSilent">If true, suppresses the cancel dialog box while the document is printing. The default is false.</param>
            <param name="bShrinkToFit">If true, the page is shrunk (if necessary) to fit within the imageable area of the printed page.</param>
            <param name="bPrintAsImage">If true, print pages as an image.</param>
            <param name="bReverse">If true, print from nEnd to nStart.</param>
            <param name="bAnnotations">If true (the default), annotations are printed.</param>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.PrintEventArgs.bUI">
            <summary>
            If true, will cause a UI to be presented to the user to obtain printing information and confirm the action.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.PrintEventArgs.nStart">
            <summary>
            A 0-based index that defines the start of an inclusive range of pages.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.PrintEventArgs.nEnd">
            <summary>
            A 0-based index that defines the end of an inclusive page range.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.PrintEventArgs.bSilent">
            <summary>
            If true, suppresses the cancel dialog box while the document is printing. The default is false.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.PrintEventArgs.bShrinkToFit">
            <summary>
            If true, the page is shrunk (if necessary) to fit within the imageable area of the printed page.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.PrintEventArgs.bPrintAsImage">
            <summary>
            If true, print pages as an image.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.PrintEventArgs.bReverse">
            <summary>
            If true, print from nEnd to nStart.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.PrintEventArgs.bAnnotations">
            <summary>
            If true (the default), annotations are printed.
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.EventArguments.ProgressiveRenderEventArgs">
            <summary>
            Represents the class that contain event data for <see cref="E:Patagames.Pdf.Net.PdfPage.ProgressiveRender"/> event
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.EventArguments.ProgressiveRenderEventArgs.#ctor(System.Byte[])">
            <summary>
            Construct ProgressiveRenderEventArgs object
            </summary>
            <param name="userData">A user defined data, used by user's application. Can be NULL.</param>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.ProgressiveRenderEventArgs.UserData">
            <summary>
            A user defined data, used by user's application. Can be NULL.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.ProgressiveRenderEventArgs.NeedPause">
            <summary>
            Application must sets this property to true for pause now or false for continue.
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.EventArguments.SendMailEventArgs">
            <summary>
            Represents the class that contain event data for <see cref="E:Patagames.Pdf.Net.PdfForms.SendMail"/> event
            </summary>
            <remarks>Application should mails the data buffer as an attachment to all recipients, with or without user interaction. </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.EventArguments.SendMailEventArgs.#ctor(System.String,System.String,System.String,System.String,System.String,System.Byte[],System.Boolean)">
            <summary>
            Construct SendMailEventArgs object
            </summary>
            <param name="To">A semicolon-delimited list of recipients for the message.</param>
            <param name="Cc">A semicolon-delimited list of CC recipients for the message.</param>
            <param name="Bcc">A semicolon-delimited list of BCC recipients for the message.</param>
            <param name="Subject"></param>
            <param name="Msg">The content of the message. The length limit is 64 KB.</param>
            <param name="Data">Pointer to the data buffer to be sent. Can be NULL.</param>
            <param name="IsGUI">If true, the rest of the parameters are used in a compose-new-message window that is displayed to the user. If false, the cTo parameter is required and all others are optional.</param>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.SendMailEventArgs.Data">
            <summary>
            Pointer to the data buffer to be sent.Can be NULL.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.SendMailEventArgs.IsGUI">
            <summary>
            If true, the rest of the parameters are used in a compose-new-message window that is displayed to the user. If false, the cTo parameter is required and all others are optional.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.SendMailEventArgs.To">
            <summary>
            A semicolon-delimited list of recipients for the message.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.SendMailEventArgs.Subject">
            <summary>
            The subject of the message. The length limit is 64 KB.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.SendMailEventArgs.Cc">
            <summary>
            A semicolon-delimited list of CC recipients for the message.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.SendMailEventArgs.Bcc">
            <summary>
            A semicolon-delimited list of BCC recipients for the message.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.SendMailEventArgs.Msg">
            <summary>
            The content of the message. The length limit is 64 KB.
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.EventArguments.SetCursorEventArgs">
            <summary>
            Represents the class that contain event data for <see cref="E:Patagames.Pdf.Net.PdfForms.SetCursor"/> event
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.EventArguments.SetCursorEventArgs.#ctor(Patagames.Pdf.Enums.CursorTypes)">
            <summary>
            Construct SetCursorEventArgs object
            </summary>
            <param name="cursor">The cursor type</param>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.SetCursorEventArgs.Cursor">
            <summary>
            Gets the cursor type
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.EventArguments.SubmitFormEventArgs">
            <summary>
            Represents the class that contain event data for <see cref="E:Patagames.Pdf.Net.PdfForms.SubmitForm"/> event
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.EventArguments.SubmitFormEventArgs.#ctor(System.Byte[],System.String)">
            <summary>
            Construct SubmitFormEventArgs object
            </summary>
            <param name="formData">The form data to be sent.</param>
            <param name="url">The URL to send to.</param>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.SubmitFormEventArgs.FormData">
            <summary>
            Gets the form data to be sent.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.SubmitFormEventArgs.Url">
            <summary>
            The URL to send to.
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.EventArguments.WriteFileBlockEventArgs">
            <summary>
            Provides data for the <see cref="E:Patagames.Pdf.Net.PdfDocument.WriteBlock"/> event.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.EventArguments.WriteFileBlockEventArgs.#ctor(System.Byte[]@)">
            <summary>
            Pointer to a buffer to output
            </summary>
            <param name="buffer"></param>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.WriteFileBlockEventArgs.Buffer">
            <summary>
            Pointer to a buffer to output
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.WriteFileBlockEventArgs.ReturnValue">
            <summary>
            Should be True if successful, False for error
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.EventArguments.IsSegmentAvailableEventArgs">
            <summary>
            Represents the class that contain event data for <see cref="E:Patagames.Pdf.Net.PdfAvailabilityProvider.IsSegmentAvailable"/> event. This event called by SDK to check whether the data section is ready.
            </summary>
            <remarks>Report whether the specified data section is available. A section is available only if all bytes in the section is available.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.EventArguments.IsSegmentAvailableEventArgs.#ctor(System.Int32,System.Int32)">
            <summary>
            Construct <see cref="T:Patagames.Pdf.Net.EventArguments.IsSegmentAvailableEventArgs"/> object
            </summary>
            <param name="segmentOffset">The offset of the data section in the file.</param>
            <param name="segmentSize">The size of the data section</param>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.IsSegmentAvailableEventArgs.SegmentOffset">
            <summary>
            The offset of the data section in the file.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.IsSegmentAvailableEventArgs.SegmentSize">
            <summary>
            The size of the data section
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.IsSegmentAvailableEventArgs.IsSegmentAvailable">
            <summary>
            True means the specified data section is available.
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.PdfControl">
            <summary>
            Encapsulates a widget annotations to represent the appearance of fields and to manage user interactions. 
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfControl.#ctor(Patagames.Pdf.Net.PdfInteractiveForms,System.IntPtr)">
            <summary>
            Initializes a new instance of the PdfControl class.
            </summary>
            <param name="forms">Interactive forms</param>
            <param name="handle">Handle ti the control wich will be assigned</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfControl.HasMKEntry(System.String)">
            <summary>
             Gets whether the control has MK entry.
            </summary>
            <param name="entry"></param>
            <returns>True if entry exists, False otherwise</returns>
            <remarks>
            <para>The MK entry can be used to provide an appearance characteristics dictionary containing additional information for constructing the annotation’s appearance
            stream.</para>
            <para>
            MK entry can be one of the following:  "R", "BC", "BG", "CA", "RC", "AC", "I", "RI", "IX", "IF", "TP".
            </para>
            <para>
            See detils in a table 8.40 at <a href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF reference 1.7.pdf</a>
            </para>
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfControl.Handle">
            <summary>
            Gets the Pdfium SDK handle that the control is bound to.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfControl.Type">
            <summary>
            Gets type of a field associated with specified control.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfControl.Field">
            <summary>
            Gets a field associated with specified control.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfControl.BoundRect">
            <summary>
            Get bounding rectanghle of specified control.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfControl.ExportValue">
            <summary>
            Get a string describing the check status of the Checkbox or Radiobutton.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfControl.IsChecked">
            <summary>
            Gets whether the Checkbox or Radiobutton is checked.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfControl.IsDefaultChecked">
            <summary>
            Get a default state of the checkbox or Radiobutton.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfControl.HiglightingMode">
            <summary>
            Get the highlighting mode of control
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfControl.Rotation">
            <summary>
             Get the number of degrees by which the control is rotated counterclockwise relative to the page.
            </summary>
            <remarks>The value must be a multiple of 90.</remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfControl.BorderColorType">
            <summary>
            Get the color type of control's border
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfControl.BorderColor">
            <summary>
            Get the color of control's border in ARGB format
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfControl.OriginalBorderColor">
            <summary>
            Get the color of control's border in original PDF format
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfControl.BackgroundColorType">
            <summary>
            Get the color type of control's background in ARGB format
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfControl.BackgroundColor">
            <summary>
            Get the color of control's background in ARGB format
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfControl.OriginalBackgroundColor">
            <summary>
            Get the color of control's background in original PDF format
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfControl.NormalCaption">
            <summary>
            The controls normal caption, displayed when it is not interacting with the user.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfControl.RolloverCaption">
            <summary>
            The controls rollover caption, displayed when the user rolls the cursor into its active area without pressing the mouse button. 
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfControl.DownCaption">
            <summary>
            The controls alternate (down) caption, displayed when the mouse button is pressed within its active area. 
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfControl.TextPosition">
            <summary>
            Get a code indicating where to position the text of the widget annotation’s caption relative to its icon
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfControl.Aligment">
            <summary>
            Get a code specifying the form of quadding (justification) to beused in displaying the text 
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.PdfControlCollections">
            <summary>
            Represents a collection of widget annotations
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.ReadOnlyList`1">
            <summary>
            Represents a strongly typed list of objects that can be accessed by index. 
            Provides methods to search, sort, and manipulate lists.
            </summary>
            <typeparam name="T">The type of elements in the list.</typeparam>
        </member>
        <member name="M:Patagames.Pdf.Net.ReadOnlyList`1.IndexOf(`0)">
            <summary>
            Searches for the specified object and returns the zero-based index of the
            first occurrence within the entire System.Collections.Generic.List.
            </summary>
            <param name="item">The object to locate in the System.Collections.Generic.List. The value can be null for reference types.</param>
            <returns>he zero-based index of the first occurrence of item within the entire System.Collections.Generic.List, if found; otherwise, –1.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.ReadOnlyList`1.Contains(`0)">
            <summary>
            Determines whether an element is in the System.Collections.Generic.List.
            </summary>
            <param name="item">The object to locate in the System.Collections.Generic.List. The value can be null for reference types.</param>
            <returns>true if item is found in the System.Collections.Generic.List; otherwise, false</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.ReadOnlyList`1.CopyTo(`0[],System.Int32)">
            <summary>
            Copies the entire System.Collections.Generic.List to a compatible one-dimensional array, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional System.Array that is the destination of the elements
            copied from System.Collections.Generic.List. The System.Array must have
            zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.ReadOnlyList`1.GetEnumerator">
            <summary>
             Returns an enumerator that iterates through the System.Collections.Generic.List.
            </summary>
            <returns>A System.Collections.Generic.List.Enumerator for the System.Collections.Generic.List.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.ReadOnlyList`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
             Returns an enumerator that iterates through the System.Collections.Generic.List.
            </summary>
            <returns>A System.Collections.Generic.List.Enumerator for the System.Collections.Generic.List.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.ReadOnlyList`1.Find(System.Predicate{`0})">
            <summary>
            Searches for an element that matches the conditions defined by the specified
             predicate, and returns the first occurrence within the entire System.Collections.Generic.List.
            </summary>
            <param name="match">The System.Predicate delegate that defines the conditions of the element to search for.</param>
            <returns>The first element that matches the conditions defined by the specified predicate, if found; otherwise, the default value for type T.
            </returns>
        </member>
        <member name="P:Patagames.Pdf.Net.ReadOnlyList`1.Item(System.Int32)">
            <summary>
             Gets or sets the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to get or set.</param>
            <returns>The element at the specified index.</returns>
        </member>
        <member name="P:Patagames.Pdf.Net.ReadOnlyList`1.Count">
            <summary>
            Gets the number of elements actually contained in the System.Collections.Generic.List.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.ReadOnlyList`1.IsReadOnly">
            <summary>
            Gets a value indicating whether the IList is read-only.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfControlCollections.#ctor(Patagames.Pdf.Net.PdfInteractiveForms)">
            <summary>
            Initializes a new instance of the control collections for specified form object
            </summary>
            <param name="forms">Interactive forms</param>
            <remarks>
            this collection can contain widgets for total forms, for field or for page. Its depends by a specified parameters.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfControlCollections.#ctor(Patagames.Pdf.Net.PdfInteractiveForms,Patagames.Pdf.Net.PdfField)">
            <summary>
            Initializes a new instance of the control collections for specified field
            </summary>
            <param name="forms">Interactive forms</param>
            <param name="field">PDF Field object</param>
            <remarks>
            this collection can contain widgets for total forms, for field or for page. Its depends by a specified parameters.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfControlCollections.#ctor(Patagames.Pdf.Net.PdfInteractiveForms,Patagames.Pdf.Net.PdfPage)">
            <summary>
            Initializes a new instance of the control collections for specified page
            </summary>
            <param name="forms">Interactive forms</param>
            <param name="page">PDF Page object</param>
            <remarks>
            this collection can contain widgets for total forms, for field or for page. Its depends by a specified parameters.
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfControlCollections.Count">
            <summary>
            Gets total number of controls in a collection
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.PdfField">
            <summary>
            Represents a field for gathering information interactively from the user.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfField.#ctor(Patagames.Pdf.Net.PdfInteractiveForms,System.IntPtr)">
            <summary>
            Initializes a new instance of the PdfField class.
            </summary>
            <param name="forms">Interactive forms</param>
            <param name="handle">Handle ti the field wich will be assigned</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfField.ResetField">
            <summary>
            Resets field to it default values
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfField.GetControlIndex(Patagames.Pdf.Net.PdfControl)">
            <summary>
            Gets control's index in a field
            </summary>
            <param name="control">control object</param>
            <returns>Zero based index of a control in Controls collections. -1 if nothing found.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfField.CheckControl(System.Int32,System.Boolean)">
            <summary>
            Toggle Checkbox or Radiobutton
            </summary>
            <param name="index">Zerobased index of field's control</param>
            <param name="check">True for check, False otherwise</param>
            <returns>True for success, False otherwise.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfField.ClearSelection">
            <summary>
            Clear field's selection
            </summary>
            <returns>True for success or False otherwise</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfField.IsItemSelected(System.Int32)">
            <summary>
            Determines that the Combobox's or Listbox's item specified by index is selected
            </summary>
            <param name="index">Zero based index of item in Combobox or Listbox.</param>
            <returns>True if item selected, False otherwise</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfField.IsItemDefaultSelected(System.Int32)">
            <summary>
            Determines that the Combobox's or Listbox's item specified by index is selected by Default
            </summary>
            <param name="index">Zero based index of item in Combobox or Listbox.</param>
            <returns>True if item selected, False otherwise</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfField.SelectItem(System.Int32,System.Boolean)">
            <summary>
            Select or deselect Combobox or Listbox item
            </summary>
            <param name="index">Zero based index of item in Combobox or Listbox.</param>
            <param name="select">True for select, False otherwise</param>
            <returns>True for success or False otherwise</returns>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfField.IsNotify">
            <summary>
            Gets or sets form's notification state
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfField.Handle">
            <summary>
            Gets the Pdfium SDK handle that the field is bound to.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfField.Controls">
            <summary>
            Gets collection of controls assigned to this field.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfField.FullName">
            <summary>
            Gets field full name
            </summary>
            <remarks>
            <para> 
            The fully qualified field name is not explicitly defined but is constructed from the partial field names of the field and all of its
            ancestors. For a field with no parent, the partial and fully qualified names are the same. For a field that is the child of another field, the fully qualified name is
            formed by appending the child field’s partial name to the parent’s fully qualified name, separated by a period (.): parent’s_full_name.child’s_partial_name
            </para>
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfField.AlternateName">
            <summary>
            Gets alternate field name.
            </summary>
            <remarks> An alternate field name to be used in place of the actual field name wherever the field must be identified in the user 
            interface (such as in error or status messages referring to the field). This text is also useful when
            extracting the document’s contents in support of accessibility to users with
            disabilities or for other purposes.
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfField.MappingName">
            <summary>
            Gets mapping field name.
            </summary>
            <remarks>The mapping name to be used when exporting interactive form field data from the document. </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfField.DefaultStyle">
            <summary>
            Gets a default style string
            </summary>
            <remarks>
            Beginning with PDF 1.5, the text contents of variable text form fields, as well as
            markup annotations, can include formatting (style) information. These rich text
            strings are fully-formed XML documents that conform to the rich text conventions
            specified for the XML Forms Architecture (XFA) specification, which is itself
            a subset of the XHTML 1.0 specification, augmented with a restricted set of
            CSS2 style attributes. 
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfField.RichText">
            <summary>
            Gets a rich text string
            </summary>
            <remarks>
            Beginning with PDF 1.5, the text contents of variable text form fields, as well as
            markup annotations, can include formatting (style) information. These rich text
            strings are fully-formed XML documents that conform to the rich text conventions
            specified for the XML Forms Architecture (XFA) specification, which is itself
            a subset of the XHTML 1.0 specification, augmented with a restricted set of
            CSS2 style attributes. 
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfField.Value">
            <summary>
            Gets or Sets field's value
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfField.DefaultValue">
            <summary>
            Gets field's default value
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfField.MaxLen">
            <summary>
            Gets the maximum length of the field’s text, in characters. 
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfField.Type">
            <summary>
            Gets the type of field
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfField.FieldType">
            <summary>
             Gets the type of field
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfField.Flags">
            <summary>
            Gets field flags
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfField.Options">
            <summary>
            Gets collection of options to be presented to the user in choise field. 
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfField.TopVisibleIndex">
            <summary>
            Gets the first visible index for scrollable list boxes
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfField.SelectedItems">
            <summary>
            Gets selected items count
            </summary>
            <remarks>
            For choice fields that allow multiple
            selection (MultiSelect flag set), an array of integers, sorted in ascending order, representing
            the zero-based indices in the Opt array of the currently selected option items. This
            entry is required when two or more elements in the Opt array have different names but
            the same export value or when the value of the choice field is an array. In other cases, the
            entry is permitted but not required.
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfField.DefaultSelectedItem">
            <summary>
            Get the Combobox's or Listbox's index of item selected by default.
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.PdfFieldCollections">
            <summary>
            Represents a collection of fields in document
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfFieldCollections.#ctor(Patagames.Pdf.Net.PdfInteractiveForms)">
            <summary>
            Initializes a new instance of the field collections for specified form object
            </summary>
            <param name="forms">Interactive forms</param>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfFieldCollections.Count">
            <summary>
            Gets total number of fields in a PDF document
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.PdfFieldOption">
            <summary>
            Represents a field's option. 
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfFieldOption.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the PdfFieldOption class.
            </summary>
            <param name="label">Option's label </param>
            <param name="value">Option's value</param>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfFieldOption.Label">
            <summary>
            Gets option's label 
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfFieldOption.Value">
            <summary>
            Gets option's value
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.PdfFieldOptionCollections">
            <summary>
            Represents a collection of options to be presented to the user in choise field. 
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfFieldOptionCollections.#ctor(Patagames.Pdf.Net.PdfField)">
            <summary>
            Initializes a new instance of the field collections for specified form field
            </summary>
            <param name="field">Field object</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfFieldOptionCollections.IsSelected(System.Int32)">
            <summary>
            Determines that the option's item specified by index is selected
            </summary>
            <param name="index">Zero based index of item in option</param>
            <returns>True if selected, False otherwise.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfFieldOptionCollections.Select(System.Int32,System.Boolean)">
            <summary>
            Select or deselect option's item specified by index
            </summary>
            <param name="index">Zero based index of item in option</param>
            <param name="select">True for select, False otherwise</param>
            <returns>True for success, false otherwise.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfFieldOptionCollections.ClearSelected">
            <summary>
            Deselect field's options
            </summary>
            <returns>True for success, False otherwise.</returns>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfFieldOptionCollections.Count">
            <summary>
            Gets total number of options in a field
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfFieldOptionCollections.SelectedIndicies">
            <summary>
            Gets the indexes of the selected options in the field.
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.PdfInteractiveForms">
            <summary>
            Encapsulates a fields for gathering information interactively from the user.
            </summary>
            <remarks>
            <para>
            A PDF document may contain any number of fields appearing on any combination of
            pages, all of which make up a single, global interactive form spanning the entire
            document.
            </para>
            <para>
            Each field in a document’s interactive form is defined by a <see cref="P:PdfInteractiveForms.Fields"/> property. 
            A field may also include one or more widget annotations that define its appearance on the page. 
            </para>
            <note type="note">
            Interactive forms should not be confused with form XObjects.
            Despite the similarity of names, the two are different, unrelated types of objects. 
            </note>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfInteractiveForms.#ctor(Patagames.Pdf.Net.PdfForms)">
            <summary>
            Initializes a new instance of the PdfInteractiveForms class.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfInteractiveForms.IsValidField(Patagames.Pdf.Net.PdfField)">
            <summary>
            Determines that specified Field is a valid Field from the hierarchy of documents fields
            </summary>
            <param name="field">Field objects.</param>
            <returns>True if the specified Field is present in the list of fields of the document or False otherwise.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfInteractiveForms.IsValidControl(Patagames.Pdf.Net.PdfControl)">
            <summary>
            Determines that specified Control is a valid Control
            </summary>
            <param name="control">Control object.</param>
            <returns>True if the specified Field is present in the list of fields of the document or False otherwise.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfInteractiveForms.GetPageControls(Patagames.Pdf.Net.PdfPage)">
            <summary>
            Gets collection of controls for specified page.
            </summary>
            <param name="page">PDF page object.</param>
            <returns>Collection of controls for specified page .</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfInteractiveForms.ResetForm">
            <summary>
            Resets forms to their default values.
            </summary>
            <returns>True for successfull, false otherwise.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfInteractiveForms.FixPageFields(Patagames.Pdf.Net.PdfPage)">
            <summary>
            Fix page fields
            </summary>
            <param name="page">PDF page object.</param>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfInteractiveForms.IsNotify">
            <summary>
            Gets or sets form's notification state
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfInteractiveForms.Handle">
            <summary>
            Gets the Pdfium SDK handle that the interactive forms is bound to
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfInteractiveForms.Fields">
            <summary>
            Gets collection of fields for gathering information interactively from the user. 
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfInteractiveForms.Controls">
            <summary>
            Gets collection of controls.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfInteractiveForms.HasXFAForm">
            <summary>
            Determines that the document contains XFA Forms
            </summary>
            <remarks>
            PDF 1.5 introduces support for interactive forms based on the Adobe XML Forms Architecture (XFA). The XFA entry in the interactive forms dictionary specifies an XFA resource, which is an XML stream that contains the
            form information. The format of an XFA resource is described in the XML Data Package (XDP) Specification
            </remarks>
        </member>
        <member name="T:Patagames.Pdf.Net.PdfAction">
            <summary>
            Represents the PDF action into a PDF document.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfAction.#ctor(Patagames.Pdf.Net.PdfDocument,System.IntPtr)">
            <summary>
            Initializes a new instance of the PdfAction class.
            </summary>
            <param name="document">Document which contains this collection of destinations.</param>
            <param name="handle">Pdfium SDK handle that the action is bound to</param>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfAction.Handle">
            <summary>
            Gets the Pdfium SDK handle that the action is bound to
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfAction.ActionType">
            <summary>
            Gets type of current action. See <see cref="T:Patagames.Pdf.Enums.ActionTypes"/> for details.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfAction.ActionUrl">
            <summary>
            Gets URL assigned to the current action. Action must be a URI action <see cref="P:Patagames.Pdf.Net.PdfAction.ActionType"/>
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfAction.Destination">
            <summary>
            Gets the PdfDestination object associated with this action
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.PdfAvailabilityProvider">
            <summary>
            Represents PDF document availability provider.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfAvailabilityProvider.#ctor(System.Int32)">
            <summary>
            Construct instance of <see cref="T:Patagames.Pdf.Net.PdfAvailabilityProvider"/> class with specified file size
            </summary>
            <param name="PdfSize">The size in bytes of downloadable document</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfAvailabilityProvider.Dispose">
            <summary>
            Release all resources allocated by PdfAvailabilityProvider
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfAvailabilityProvider.IsPageAvailable(System.Int32)">
            <summary>
            Check whether a page is ready for loading, if not, fires <see cref="E:Patagames.Pdf.Net.PdfAvailabilityProvider.AddSegment"/> event.
            </summary>
            <param name="index">Index number of the page. 0 for the first page.</param>
            <returns>True for page is fully available, False for page not yet available.</returns>
            <remarks>
            This function call be called only after <see cref="M:Patagames.Pdf.Net.PdfAvailabilityProvider.CreateDocument(System.String)"/> if called.
            The application should call this function whenever new data arrived, and process all the
            generated download hints if any, until the function returns True. Then the 
            application can perform page loading.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfAvailabilityProvider.CreateDocument(System.String)">
            <summary>
            Get document from the availability provider and store it in <see cref="P:Patagames.Pdf.Net.PdfAvailabilityProvider.Document"/> property.
            </summary>
            <param name="password">Optional password for decrypting the PDF file.</param>
            <remarks>
            After <see cref="P:Patagames.Pdf.Net.PdfAvailabilityProvider.IsDocumentAvailable"/> returns TRUE, the application should call this function to
            get the document instance.
            </remarks>		
        </member>
        <member name="M:Patagames.Pdf.Net.PdfAvailabilityProvider.InitDocument(Patagames.Pdf.Net.PdfForms)">
            <summary>
            Initialize the created PDF document.
            </summary>
            <param name="forms">Instance of <see cref="T:Patagames.Pdf.Net.PdfForms"/> class that will be associated with loaded document</param>
            <remarks>After <see cref="P:Patagames.Pdf.Net.PdfAvailabilityProvider.IsFormAvailable"/> returns TRUE, the application should call this function to initialize the document instance.</remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfAvailabilityProvider.Handle">
            <summary>
            Gets the Pdfium SDK handle that the page is bound to
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfAvailabilityProvider.Document">
            <summary>
            Gets the PDF document associated with the current availability provider.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfAvailabilityProvider.IsDocumentAvailable">
            <summary>
            Check whether the document is ready for loading, if not, fires AddSegment event.
            </summary>
            <remarks>
            The application should read this property whenever new data arrived, and process all the
            generated download hints if any, while the property is false. Then the application can call <see cref="M:Patagames.Pdf.Net.PdfAvailabilityProvider.CreateDocument(System.String)"/> to get a document.
            </remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfAvailabilityProvider.FirstAvailablePageIndex">
            <summary>
            Gets zero-based index for the first available page in a linearized PDF
            </summary>
            <remarks>For most linearized PDFs, the first available page would be just the first page, however,
            some PDFs might make other page to be the first available page.
            For non-linearized PDF, this property will always return zero.</remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfAvailabilityProvider.IsLinearized">
            <summary>
            To check whether a document is Linearized PDF file. <see cref="T:Patagames.Pdf.Enums.IsLinearizedResults"/> for more details.
            </summary>
            <remarks>
            return IsLinearized means the document is linearized PDF else not.
            It return IsLinearized/NotLinearized state as soon as we have first 1K data. If the file's size less than
            1K,we don't known whether the PDF is a linearized file.</remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfAvailabilityProvider.IsFormAvailable">
            <summary>
            Check whether Form data is ready for init, if not, get download hints. <see cref="T:Patagames.Pdf.Enums.IsFormAvailableResults"/> for details.
            </summary>
            <remarks>
            This property is valid only if <see cref="M:Patagames.Pdf.Net.PdfAvailabilityProvider.CreateDocument(System.String)"/> was called. 
            The application should read this property whenever new data arrived, and process all the
            generated download hints if any, until the function property sets to true. Then the 
            application can create an instance of <see cref="T:Patagames.Pdf.Net.PdfForms"/> class, call <see cref="M:Patagames.Pdf.Net.PdfAvailabilityProvider.InitDocument(Patagames.Pdf.Net.PdfForms)"/> method and perform page loading
            after the property returns true.
            </remarks>
        </member>
        <member name="E:Patagames.Pdf.Net.PdfAvailabilityProvider.IsSegmentAvailable">
            <summary>
            Called by SDK to check whether the data section is ready.
            <note type="note">Required: Yes. </note>
            </summary>
        </member>
        <member name="E:Patagames.Pdf.Net.PdfAvailabilityProvider.AddSegment">
            <summary>
            Called by SDK to report some downloading hints for download manager.
            <note type="note">Required: Yes.</note>
            </summary>
        </member>
        <member name="E:Patagames.Pdf.Net.PdfAvailabilityProvider.ReadSegment">
            <summary>
            Called by SDK to read some data from download manager.
            <note type="note">Required: Yes.</note>
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.PdfBitmap">
            <summary>
            Encapsulates a Device-Independent bitmap, which consists of the pixel data for a graphics image and its attributes. A Bitmap is an object used to work with images defined by pixel data.
            <para>An PdfBitmap use 1, 3 or 4 byte per pixel depended on a pixel format.</para>
            <para>The byte order is BGRx (the last byte unused if no alpha channel) or BGRA.</para>
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfBitmap.#ctor(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Initializes a new instance of the PdfBitmap class with the specified size.
            </summary>
            <param name="width">The width, in pixels, of the new Bitmap. </param>
            <param name="height">The height, in pixels, of the new Bitmap. </param>
            <param name="isUseAlpha">A flag indicating whether alpha channel is used.</param>
            <remarks>
            <para>An PdfBitmap created by this constructor always use 4 byte per pixel.</para>
            <para>The first byte of a pixel is always double word aligned. Each pixel contains red (R), green (G), blue (B) and optionally alpha (A) values.</para>
            <para>The byte order is BGRx (the last byte unused if no alpha channel) or BGRA. The pixels in a horizontal line
            (also called scan line) are stored side by side, with left most pixel stored first (with lower
            memory address)</para>.
            <para>Each scan line uses width*4 bytes. Scan lines are stored one after another,
            with top most scan line stored first. There is no gap between adjacent scan lines.</para>
            <para>This constructor allocates enough memory for holding all pixels in the bitmap, but it doesn't
            initialize the buffer. Applications can use <see cref="O:FillRect"/> to fill the bitmap using any
            color.</para>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfBitmap.#ctor(System.Int32,System.Int32,Patagames.Pdf.Enums.FXDIBFormats,System.IntPtr,System.Int32)">
            <summary>
            Initializes a new instance of the PdfBitmap class with the specified size, pixel format, and pixel data.
            </summary>
            <param name="width">The width, in pixels, of the new Bitmap. </param>
            <param name="height">The height, in pixels, of the new Bitmap. </param>
            <param name="format">The pixel format for the new PdfBitmap.</param>
            <param name="scan0">Pointer to an array of bytes that contains the pixel data.</param>
            <param name="stride">Integer that specifies the byte offset between the beginning of one scan line and the next.
            This is usually (but not necessarily) the number of bytes in the pixel format (for example, 2 for 16 bits per pixel) multiplied by the width of the bitmap.
            The value passed to this parameter must be a multiple of four. 
            <para>Used for external buffer only.</para></param>
            <remarks>Similar to <see cref="M:Patagames.Pdf.Net.PdfBitmap.#ctor(System.Int32,System.Int32,System.Boolean)"/> function, with more formats and external buffer supported.
            <para>Bitmap created by this function can be used in any place that a PdfBitmap is
            required.</para>
            <para>If external scanline buffer is used, then the application should destroy the buffer by
            itself. <see cref="M:Patagames.Pdf.Net.PdfBitmap.Dispose"/> method will not destroy the buffer.</para>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfBitmap.#ctor(System.Int32,System.Int32,Patagames.Pdf.Enums.BitmapFormats,System.IntPtr,System.Int32)">
            <summary>
            Initializes a new instance of the PdfBitmap class with the specified size, extended pixel format, and pixel data.
            </summary>
            <param name="width">The width, in pixels, of the new Bitmap. </param>
            <param name="height">The height, in pixels, of the new Bitmap. </param>
            <param name="format">The pixel format for the new PdfBitmap.</param>
            <param name="scan0">Pointer to an array of bytes that contains the pixel data.</param>
            <param name="stride">Integer that specifies the byte offset between the beginning of one scan line and the next.
            This is usually (but not necessarily) the number of bytes in the pixel format (for example, 2 for 16 bits per pixel) multiplied by the width of the bitmap.
            The value passed to this parameter must be a multiple of four. 
            <para>Used for external buffer only.</para></param>
            <remarks>Similar to <see cref="M:Patagames.Pdf.Net.PdfBitmap.#ctor(System.Int32,System.Int32,System.Boolean)"/> function, with more formats and external buffer supported.
            <para>Bitmap created by this function can be used in any place that a PdfBitmap is
            required.</para>
            <para>If external scanline buffer is used, then the application should destroy the buffer by
            itself. <see cref="M:Patagames.Pdf.Net.PdfBitmap.Dispose"/> method will not destroy the buffer.</para>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfBitmap.Dispose">
            <summary>
            Releases all resources used by the PdfBitmap.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfBitmap.FillRect(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Color)">
            <summary>
            Fill a rectangle area in an PdfBitmap specified by a coordinate pair, a width, and a height.
            </summary>
            <param name="left">The left side position. Starting from 0 at the left-most pixel.</param>
            <param name="top">The top side position. Starting from 0 at the top-most scan line.</param>
            <param name="width">Number of pixels to be filled in each scan line</param>
            <param name="height">Number of scan lines to be filled.</param>
            <param name="color">A <see cref="T:System.Drawing.Color"/> structure that represents the color.</param>
            <remarks><para>This method set the color and (optionally) alpha value in specified region of the bitmap.</para>
            <note>
            If alpha channel is used, this function does NOT composite the background with the source
            color, instead the background will be replaced by the source color and alpha.</note>
            <para>If alpha channel is not used, the "alpha" parameter is ignored.</para>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfBitmap.FillRect(System.Drawing.Rectangle,System.Drawing.Color)">
            <summary>
            Fill a rectangle area in an PdfBitmap specified by a <see cref="T:System.Drawing.Rectangle"/> structure.
            </summary>
            <param name="rect">A <see cref="T:System.Drawing.Rectangle"/> structure that represents the rectangle to fill.</param>
            <param name="color">A <see cref="T:System.Drawing.Color"/> structure that represents the color.</param>
            <remarks><para>This method set the color and (optionally) alpha value in specified region of the bitmap.</para>
            <note>
            If alpha channel is used, this function does NOT composite the background with the source
            color, instead the background will be replaced by the source color and alpha.</note>
            <para>If alpha channel is not used, the "alpha" parameter is ignored.</para>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfBitmap.GetPaletteColorByIndex(System.Int32)">
            <summary>
            Gets the palette color at specified index.
            </summary>
            <param name="index">Palette index</param>
            <returns>The palette color constructed by 0xaarrggbb.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfBitmap.SetPaletteEntryByIndex(System.Int32,System.Drawing.Color)">
            <summary>
            Sets the palette color at specified index.
            </summary>
            <param name="index">Palette index</param>
            <param name="color">Palette color</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfBitmap.Clone(Patagames.Pdf.FX_RECT)">
            <summary>
            Clone specified bitmap with specified clip
            </summary>
            <param name="clip">Clipping rectangle</param>
            <returns>New PdfBitmap object</returns>
            <remarks>You should always call the Dispose method to release the PdfBitmap and related resources created by the Clone method.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfBitmap.Convert(Patagames.Pdf.Enums.BitmapFormats,Patagames.Pdf.FX_RECT)">
            <summary>
            Convert specified bitmap with specified clip
            </summary>
            <param name="format">Format for new bitmap</param>
            <param name="clip">Clipping rectangle</param>
            <returns>New PdfBitmap object</returns>
            <remarks>You should always call the Dispose method to release the PdfBitmap and related resources created by the Convert method.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfBitmap.StretchTo(System.Int32,System.Int32,System.Int32,Patagames.Pdf.FX_RECT)">
            <summary>
            Stretch specified bitmap with specified clip
            </summary>
            <param name="width">With for new bitmap</param>
            <param name="height">Height for new bitmap</param>
            <param name="flags">Flags</param>
            <param name="clip">Clipping rectangle</param>
            <returns>New PdfBitmap object</returns>
            <remarks>You should always call the Dispose method to release the PdfBitmap and related resources created by the StretchTo method.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfBitmap.SwapXY(System.Boolean,System.Boolean,Patagames.Pdf.FX_RECT)">
            <summary>
             Swap X and Y in specified bitmap
            </summary>
            <param name="swapX">True for swap by X</param>
            <param name="swapY">True for swap by Y</param>
            <param name="clip">Clipping rectangle</param>
            <returns>New PdfBitmap object</returns>
            <remarks>You should always call the Dispose method to release the PdfBitmap and related resources created by the SwapXY method.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfBitmap.FlipXY(System.Boolean,System.Boolean)">
            <summary>
             Flip X and Y in specified bitmap
            </summary>
            <param name="flipX">True for flip by X</param>
            <param name="flipY">True for flip by Y</param>
            <returns>New PdfBitmap object</returns>
            <remarks>You should always call the Dispose method to release the PdfBitmap and related resources created by the FlipXY method.</remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfBitmap.Handle">
            <summary>
            Gets the Pdfium SDK handle that the bitmap is bound to
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfBitmap.Buffer">
            <summary>
            Gets data buffer of an PdfBitmap
            </summary>
            <returns>The pointer to the first byte of the bitmap buffer.</returns>
            <remarks>Applications can use this function to get the bitmap buffer pointer, then manipulate any color and/or alpha values for any pixels in the bitmap.</remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfBitmap.Width">
            <summary>
            Gets the number of pixels in a horizontal line of the bitmap.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfBitmap.Height">
            <summary>
            Gets the number of pixels in a vertical line of the bitmap.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfBitmap.Stride">
            <summary>
            Gets number of bytes for each scan line in the bitmap buffer
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfBitmap.Image">
            <summary>
            Gets the image that represents the PdfBitmap
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfBitmap.Format">
            <summary>
            Gets bitmap format
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfBitmap.Pitch">
            <summary>
            Gets bitmap pitch
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfBitmap.PaletteSize">
            <summary>
            Gets bitmap palette size
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfBitmap.Palette">
            <summary>
            Gets or sets bitmap palette
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfBitmap.BPP">
            <summary>
            Gets bit per pixel
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfBitmap.IsAlphaMask">
            <summary>
            Returns true if the bitmap has alpha mask 
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfBitmap.HasAlpha">
            <summary>
            Returns true if this bitmap has alpha channel
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfBitmap.IsOpaque">
            <summary>
            Returns true if this bitmap is opaque
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfBitmap.IsCmyk">
            <summary>
            Returns true if this bitmap is CMYK image
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.PdfBookmark">
            <summary>
            Represents the bookmark into a PDF document.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfBookmark.#ctor(Patagames.Pdf.Net.PdfDocument,System.IntPtr,Patagames.Pdf.Net.PdfBookmark)">
            <summary>
            Initializes a new instance of the PdfBookmark class.
            </summary>
            <param name="document">Document which contains this collection of destinations.</param>
            <param name="handle">Pdfium SDK handle that the bookmark is bound to</param>
            <param name="parent">Parent bookmark or null for top-level bookmark</param>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfBookmark.Handle">
            <summary>
            Gets the Pdfium SDK handle that the bookmark is bound to
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfBookmark.Title">
            <summary>
            Gets the title of bookmark
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfBookmark.Parent">
            <summary>
            Gets the parent bookmark of the current bookmark.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfBookmark.Childs">
            <summary>
            Gets the collection of PdfBookmark objects assigned to the current bookmark.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfBookmark.Destination">
            <summary>
            Gets the PdfDestination object associated with this bookmark
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfBookmark.Action">
            <summary>
            Gets the PdfAction object associated with this bookmark or null if no action.
            In this case, the application should try <see cref="P:Patagames.Pdf.Net.PdfBookmark.Destination"/>
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.PdfBookmarkCollections">
            <summary>
            Represents the collection of bookmarks insde a PDF document.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Net.PdfBookmarkCollections._doc">
            <summary>
            Pdf document
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfBookmarkCollections.#ctor(Patagames.Pdf.Net.PdfDocument)">
            <summary>
            Initializes a new instance of the PdfBookmarkCollections class.
            </summary>
            <param name="document">Document which contains this collection of destinations.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfBookmarkCollections.FillPlainList(Patagames.Pdf.Net.PdfBookmarkCollections,Patagames.Pdf.Net.PdfBookmark)">
            <summary>
            Recursively builds a tree of bookmarks
            </summary>
            <param name="list">A list which will be filling by found bookmarks of the current level</param>
            <param name="bookmark">Parent bookmark. Can be null for root</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfBookmarkCollections.Find(System.String)">
            <summary>
            Find a bookmark in the PDF document, using the bookmark title
            </summary>
            <param name="title">The string for the bookmark title to be searched. Can't be NULL or empty string.</param>
            <returns>The instance of PdfBookmark class represented a found bookmark item. Null if the title can't be found.</returns>
            <remarks>It always returns the first found bookmark if more than one bookmarks have the same title.</remarks>
        </member>
        <member name="T:Patagames.Pdf.Net.PdfClipPath">
            <summary>
            Represents the clip path inside a page.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfClipPath.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Create a new instance of <see cref="T:Patagames.Pdf.Net.PdfClipPath"/> with a rectangle inserted.
            </summary>
            <param name="left">The left of the clip box.</param>
            <param name="bottom">The bottom of the clip box.</param>
            <param name="right">The right of the clip box.</param>
            <param name="top">The top of the clip box.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfClipPath.Dispose">
            <summary>
            Destroy the clip path.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfClipPath.Handle">
            <summary>
            Gets the Pdfium SDK handle that the clip path is bound to
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.PdfCommon">
            <summary>
            Represents a class that contain a common methods.
            </summary>
            <threadsafety>Any public static (Shared in Visual Basic) members of this type are thread safe. Any instance members are not guaranteed to be thread safe.</threadsafety>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfCommon.Initialize(System.String,System.String)">
            <summary>
            Initialize the SDK library
            </summary>
            <param name="licenseKey">Yours license key. Can be null for demo mode</param>
            <param name="specificPath">Path to the pdfium.dll. See remarks sections for detail.</param>
            <remarks>
            <para>You have to call this function before you can call any PDF processing functions.</para>
            <para>In some cases, library initializer can not find pdfim.dll library to download.
            A typical example of this situation is a Web application.
            Web apps is running in a IIS working directory, unlike the classical apps. As a consequence, standard LoadLibrary function can not find the dll during loading process.
            </para>
            <para>In this case, you must explicitly specify the full path to the pdfium.dll file through specificPath parameter in the initialization method.</para>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfCommon.Release">
            <summary>
            Release all resources allocated by the SDK library
            </summary>
            <remarks>You can call this function to release all memory blocks allocated by the library. After this function called, you should not call any PDF processing functions.</remarks>
        </member>
        <member name="T:Patagames.Pdf.Net.PdfDestination">
            <summary>
            Represents the named destination into a PDF document.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Net.PdfDestination._doc">
            <summary>
            Pdf document
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfDestination.#ctor(Patagames.Pdf.Net.PdfDocument,System.IntPtr,System.String)">
            <summary>
            Initializes a new instance of the PdfDestination class.
            </summary>
            <param name="document">Document which contains this collection of destinations.</param>
            <param name="destHandle">Pdfium SDK handle that the destination is bound to.</param>
            <param name="name">The name of named destination.</param>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfDestination.Handle">
            <summary>
            Gets the Pdfium SDK handle that the destination is bound to
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfDestination.Name">
            <summary>
            Gets the name of named destination
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfDestination.PageIndex">
            <summary>
            Gets the page index(zero based) in current document which indicates the named destination
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.PdfDestinationCollections">
            <summary>
            Represents the collection of named destination insde a PDF document.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Net.PdfDestinationCollections._doc">
            <summary>
            Pdf document
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfDestinationCollections.#ctor(Patagames.Pdf.Net.PdfDocument)">
            <summary>
            Initializes a new instance of the PdfDestinationCollections class.
            </summary>
            <param name="document">Document which contains this collection of destinations.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfDestinationCollections.GetByName(System.String)">
            <summary>
            Get a special destination by the name.
            </summary>
            <param name="name">The name of a special named destination. Can't be NULL or empty string.</param>
            <returns>The instance of PdfDestination class.</returns>
            <remarks>This method have problem with non english national character encoding</remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfDestinationCollections.Count">
            <summary>
            Gets total number of named destinations in a PDF document
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.PdfFind">
            <summary>
            Represents a search context
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfFind.FindNext">
            <summary>
            Search in the direction from page start to end.
            </summary>
            <returns>Whether a match is found</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfFind.FindPrev">
            <summary>
            Search in the direction from page end to start.
            </summary>
            <returns>Whether a match is found.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfFind.Find(System.String,Patagames.Pdf.Net.PdfText,Patagames.Pdf.Enums.FindFlags,System.Int32)">
            <summary>
            Start a search.
            </summary>
            <param name="findWhat">A string match pattern</param>
            <param name="text">PdfText object.</param>
            <param name="flags">Option flags. See <see cref="T:Patagames.Pdf.Enums.FindFlags"/> for details </param>
            <param name="startIndex">Start from this character. -1 for end of the page</param>
            <returns>A object fot represents the search context.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfFind.Dispose">
            <summary>
            Release a search context
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfFind.FindedText">
            <summary>
            Gets finded text information object
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfFind.CharIndex">
            <summary>
            Gets the starting character index of the search result.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfFind.CharsCount">
            <summary>
            Gets the number of matched characters in the search result
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.PdfFormObject">
            <summary>
            Represents a form object.
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.PdfPageObject">
            <summary>
            Represents the base class for page objects that contain common data, and provides common methods.
            </summary>
            <remarks>
            This class serves as the base class for all objects on the page. 
            For example, the <see cref="T:Patagames.Pdf.Net.PdfImageObject"/> class derives from PdfPageObject. 
            </remarks>
        </member>
        <member name="F:Patagames.Pdf.Net.PdfPageObject.Handle">
            <summary>
            Gets the Pdfium SDK handle that the object is bound to
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPageObject.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the PdfPageObjectsCollection class.
            </summary>
            <param name="handle">The Pdfium SDK handle that the new object will be bound to</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPageObject.CreateObject(Patagames.Pdf.Enums.PageObjectTypes)">
            <summary>
            Create new page object specified by type
            </summary>
            <param name="type">ypes of page object</param>
            <returns>Handle to a page object</returns>
            <remarks>
            Currently, It can be "PDFPAGE_TEXT", "PDFPAGE_IMAGE", "PDFPAGE_PATH",
            "PDFPAGE_SHADING", "PDFPAGE_FORM"
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPageObject.Transform(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Transform (scale, rotate, shear, move) page object.
            </summary>
            <param name="a">The coefficient "a" of the matrix</param>
            <param name="b">The coefficient "b" of the matrix</param>
            <param name="c">The coefficient "c" of the matrix</param>
            <param name="d">The coefficient "d" of the matrix</param>
            <param name="e">The coefficient "e" of the matrix</param>
            <param name="f">The coefficient "f" of the matrix</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPageObject.Transform(Patagames.Pdf.FS_MATRIX)">
            <summary>
            Transform (scale, rotate, shear, move) page object.
            </summary>
            <param name="matrix">The transform matrix.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPageObject.Copy(Patagames.Pdf.Net.PdfPageObject)">
            <summary>
            Copy page object information from one to another
            </summary>
            <param name="srcObj">Handle to source page object</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPageObject.Clone">
            <summary>
            Create a new page object based on this page object.
            </summary>
            <returns>New page object.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPageObject.RemoveClipPath">
            <summary>
            Remove a clip from the page object.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPageObject.CopyClipPath(Patagames.Pdf.Net.PdfPageObject)">
            <summary>
            Copy clip path from one page object to another
            </summary>
            <param name="srcObj">Source page object</param>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfPageObject.IsTransparency">
            <summary>
            ets a value that represents that whether the specified PDF page object contains transparency.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfPageObject.ObjectType">
            <summary>
            Gets page object type
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfPageObject.BoundingBox">
            <summary>
            Gets page object bounding box.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfPageObject.FillColor">
            <summary>
            Gets or sets the fill color of a page object.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfPageObject.StrokeColor">
            <summary>
            Gets or sets the stroke color of a page object.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfFormObject.Create">
            <summary>
            Create new instance of PdfFormObject class
            </summary>
            <returns>New instance of PdfFormClass</returns>
        </member>
        <member name="T:Patagames.Pdf.Net.PdfForms">
            <summary>
            Represents the PDF forms in doucument
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfForms.FFI_GetPageCallback(Patagames.Pdf.FPDF_FORMFILLINFO,System.IntPtr,System.Int32)">
            <summary>
            This method receives the page pointer associated with a specified page index.
            </summary>
            <param name="pThis">Pointer to the interface structure itself.</param>
            <param name="document">Handle to document. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadDocument(System.String,System.String)"/> function.</param>
            <param name="nPageIndex">Index number of the page. 0 for the first page.</param>
            <returns>Handle to the page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> function.</returns>
            <remarks>Required: Yes. In some cases, the document-level JavaScript action may refer to a page which hadn't been loaded yet.
            To successfully run the javascript action, implementation need to load the page for SDK.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfForms.FFI_GetCurrentPageCallback(Patagames.Pdf.FPDF_FORMFILLINFO,System.IntPtr)">
            <summary>
            This method receives the current page pointer.
            </summary>
            <param name="pThis">Pointer to the interface structure itself.</param>
            <param name="document">Handle to document. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadDocument(System.String,System.String)"/> function.</param>
            <returns>Handle to the page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> function.</returns>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfForms.FFI_GetRotationCallback(Patagames.Pdf.FPDF_FORMFILLINFO,System.IntPtr)">
            <summary>
            This method receives currently rotation of the page view.
            </summary>
            <param name="pThis">Pointer to the interface structure itself.</param>
            <param name="page">Handle to page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> function.</param>
            <returns>The page rotation. Should be 0(0 degree),1(90 degree),2(180 degree),3(270 degree), in a clockwise direction.</returns>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfForms.#ctor">
            <summary>
            Initializes a new instance of the PdfForms class.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfForms.Init(Patagames.Pdf.Net.PdfDocument)">
            <summary>
            Init fillforms and exequte javascript and OnOpen document's actions 
            </summary>
            <param name="document">Instance of <see cref="T:Patagames.Pdf.Net.PdfDocument"/> class that represents the current document</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfForms.Dispose">
            <summary>
            Release all resources used by PdfForms
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfForms.SetHilightColor(Patagames.Pdf.Enums.FormFieldTypes,System.Drawing.Color)">
            <summary>
            Set the highlight color of specified or all the form fields in the document.
            </summary>
            <param name="field"></param>
            <param name="color"></param>
            <returns>Previouse color</returns>
            <remarks>
            <para>When the parameter fieldType is set to FPDF_FORMFIELD_UNKNOWN, the highlight color will be applied to all the form fields in the document.
            Please refresh the client window to show the highlight immediately if necessary.</para>
            <para><note type="note">Alpha channel is applied to all the form fields in the document even if field was specified.</note></para>
            </remarks>		
        </member>
        <member name="M:Patagames.Pdf.Net.PdfForms.RemoveHilightColor">
            <summary>
            Remove the form field highlight color in the document.
            </summary>
            <remarks>Please refresh the client window to remove the highlight immediately if necessary.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfForms.ForceToKillFocus">
            <summary>
            You can call this member function to force to kill the focus of the form field which got focus.
            It would kill the focus on the form field, save the value of form field if it's changed by user.
            </summary>
            <returns>TRUE indicates success; otherwise false.</returns>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfForms.Handle">
            <summary>
            Gets the Pdfium SDK handle that the forms is bound to
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfForms.InterForm">
            <summary>
            Gets Interactive Forms object for current PDF document.
            </summary>
        </member>
        <member name="E:Patagames.Pdf.Net.PdfForms.Release">
            <summary>
            Give implementation a chance to release any data after the forms is no longer used
            </summary>
            <remarks>
            <para>Required: No.</para>
            <para>Called by SDK during the final cleanup process.</para></remarks>
        </member>
        <member name="E:Patagames.Pdf.Net.PdfForms.Invalidate">
            <summary>
            SDK will fire this event when the page need to be repainted.
            </summary>
            <remarks>
            <para>Required: Yes.</para>
            <para>All positions are measured in PDF "user space". Implementation should call <see cref="O:PdfPage.Render"/> for repainting a specified page area.</para></remarks>
        </member>
        <member name="E:Patagames.Pdf.Net.PdfForms.OutputSelectedRect">
            <summary>
            SDK fire this event when user is taking the mouse to select texts on a form field.
            </summary>
            <remarks>
            <para>Required: No.</para>
            <para>This event is useful for implementing special text selection effect. Implementation should
            first records the returned rectangles, then draw them one by one at the painting period, last,remove all 
            the recorded rectangles when finish painting.</para></remarks>
        </member>
        <member name="E:Patagames.Pdf.Net.PdfForms.SetCursor">
            <summary>
            Application shoud use this event for sets the specified cursor for the entire application.
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="E:Patagames.Pdf.Net.PdfForms.LocalTime">
            <summary>
            With this event SDK receives the current local time on the system. 
            </summary>
            <remarks>Required: No.</remarks>
        </member>
        <member name="E:Patagames.Pdf.Net.PdfForms.FieldChanged">
            <summary>
            This event will be invoked to notify implementation when the value of any FormField on the document had been changed.
            </summary>
            <remarks>Required: No.</remarks>		
        </member>
        <member name="E:Patagames.Pdf.Net.PdfForms.DoURIAction">
            <summary>
            This action resolves to a uniform resource identifier. 
            </summary>
            <remarks>
            <para>required: No.</para>
            <para>See the URI actions description of <a href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF Reference, Version 1.7</a> for more details.</para></remarks>
            <seealso><a href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF Reference 1.7</a></seealso>
        </member>
        <member name="E:Patagames.Pdf.Net.PdfForms.DoNamedAction">
            <summary>
            This event will execute an named action.
            </summary>
            <remarks>See the named actions description of <a href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF Reference, Version 1.7</a> for more details.
            Required: Yes.</remarks>
            <seealso><a href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF Reference 1.7</a></seealso>
        </member>
        <member name="E:Patagames.Pdf.Net.PdfForms.FocusChanged">
            <summary>
            This event will be fired when a text field is getting or losing a focus.
            </summary>
            <remarks><para>Required: No.</para>
            <para>Currently,only support text field and combobox field.</para></remarks>
        </member>
        <member name="E:Patagames.Pdf.Net.PdfForms.DoGotoAction">
            <summary>
            While processing this event pplication must be changes the view to a specified destination.
            </summary>
            <remarks><para>Required: No.</para>
            <para>See the Destinations description of <a href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF Reference, Version 1.7</a> in 8.2.1 for more details.</para></remarks>
            <seealso><a href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF Reference 1.7</a></seealso>
        </member>
        <member name="E:Patagames.Pdf.Net.PdfForms.AppAlert">
            <summary>
            pop up a dialog to show warning or hint.
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="E:Patagames.Pdf.Net.PdfForms.AppBeep">
            <summary>
            Causes the system to play a sound. 
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="E:Patagames.Pdf.Net.PdfForms.AppResponse">
            <summary>
            Displays a dialog box containing a question and an entry field for the user to reply to the question.
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="E:Patagames.Pdf.Net.PdfForms.GetDocumentPath">
            <summary>
            Get the file path of the current document. 
            </summary>
        </member>
        <member name="E:Patagames.Pdf.Net.PdfForms.SendMail">
            <summary>
            Mails the data buffer as an attachment to all recipients, with or without user interaction. 
            </summary>
            <remarks><para>Required: Yes.</para>
            <para>If the parameter mailData is NULL, the current document will be mailed as an attachment to all recipients.</para></remarks>
        </member>
        <member name="E:Patagames.Pdf.Net.PdfForms.Print">
            <summary>
            Prints all or a specific number of pages of the document.
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="E:Patagames.Pdf.Net.PdfForms.SubmitForm">
            <summary>
            Send the form data to a specified URL.
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="E:Patagames.Pdf.Net.PdfForms.GotoPage">
            <summary>
            Jump to a specified page.
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="E:Patagames.Pdf.Net.PdfForms.BrowseFile">
            <summary>
            Show a file selection dialog, and return the selected file path.
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="T:Patagames.Pdf.Net.PdfImageObject">
            <summary>
            Represents a image object.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfImageObject.Create(Patagames.Pdf.Net.PdfDocument)">
            <summary>
            Create a new instance of <see cref="T:Patagames.Pdf.Net.PdfImageObject"/> class.
            </summary>
            <param name="document">Instance of <see cref="T:Patagames.Pdf.Net.PdfDocument"/> class</param>
            <returns>Instance of <see cref="T:Patagames.Pdf.Net.PdfImageObject"/> class.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfImageObject.Dispose">
            <summary>
            Releases all resources used by the PdfImageObject.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfImageObject.SetMatrix(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Set the matrix of an image object
            </summary>
            <param name="a">The coefficient "a" of the matrix</param>
            <param name="b">The coefficient "b" of the matrix</param>
            <param name="c">The coefficient "c" of the matrix</param>
            <param name="d">The coefficient "d" of the matrix</param>
            <param name="e">The coefficient "e" of the matrix</param>
            <param name="f">The coefficient "f" of the matrix</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfImageObject.SetMatrix(Patagames.Pdf.FS_MATRIX)">
            <summary>
            Set the matrix of an image object
            </summary>
            <param name="matrix">The transform matrix.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfImageObject.FPDFImageObj_LoadJpegFile(System.String)">
            <summary>
            Load Image from a JPEG image file and then set it to an image object.
            </summary>
            <param name="filePath">Path to the jpeg file</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfImageObject.FPDFImageObj_SetBitmap(Patagames.Pdf.Net.PdfBitmap)">
            <summary>
            Set the bitmap to an image object.
            </summary>
            <param name="bitmap">The PdfBitmap which you want to set it to the image object.</param>
            <returns>TRUE if successful, FALSE otherwise.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfImageObject.TransformClipPath(Patagames.Pdf.FS_MATRIX)">
            <summary>
            Transform (scale, rotate, shear, move) the clip path of image  object.
            </summary>
            <param name="matrix">The transform matrix.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfImageObject.GetBitmap">
            <summary>
            Get the copy of bitmap from an image object.
            </summary>
            <returns>PdfBitmap object.</returns>
            <remarks>You should always call the Dispose method to release the PdfBitmap and related resources created by the GetBitmap method.</remarks>
        </member>
        <member name="T:Patagames.Pdf.Net.PdfInlineObject">
            <summary>
            Represents a inline object.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfInlineObject.Create">
            <summary>
            Create new instance of PdfInlineObject class
            </summary>
            <returns>New instance of PdfInlineObject</returns>
        </member>
        <member name="T:Patagames.Pdf.Net.PdfLink">
            <summary>
            Represents the annotation link in a PDF page.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfLink.#ctor(Patagames.Pdf.Net.PdfPage,System.IntPtr)">
            <summary>
            Initializes a new instance of the PdfLink class.
            </summary>
            <param name="page">PDF page containig this link</param>
            <param name="handle">>Pdfium SDK handle that the link is bound to.</param>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfLink.Handle">
            <summary>
            Gets the Pdfium SDK handle that the link is bound to
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfLink.Destination">
            <summary>
            Gets the named destination assigned to a link.
            </summary>
            <remarks>Return null if there is no destination associated with the link, 
            in this case the application should try <see cref="P:Patagames.Pdf.Net.PdfLink.Action"/> property</remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfLink.Action">
            <summary>
            Gets the PDF action assigned to a link.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfLink.AnnotationRect">
            <summary>
            Gets the annotation rectangle. (Specified by the entry of annotation dictionary).
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfLink.QuadPoints">
            <summary>
            Get the collection of quadrilateral points to the link annotation
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.PdfLinkCollections">
            <summary>
            Represents the collection of named destination insde a PDF document.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.Net.PdfLinkCollections._page">
            <summary>
            Pdf document
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfLinkCollections.#ctor(Patagames.Pdf.Net.PdfPage)">
            <summary>
            Initializes a new instance of the PdfLinkCollections class.
            </summary>
            <param name="page">Page which contains this collection of links.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfLinkCollections.GetLinkAtPoint(System.Single,System.Single)">
            <summary>
            Find a link at specified point on a document page
            </summary>
            <param name="x">The x coordinate of the point, specified in page coordinate system</param>
            <param name="y">The y coordinate of the point, specified in page coordinate system</param>
            <returns>Instance of <see cref="T:Patagames.Pdf.Net.PdfLink"/> class that represent the found link. Null if there’s no link at that point.</returns>
            <remarks>The point coordinate are specified in page coordinate system. 
            You can convert coordinate from screen system to page system using <see cref="M:Patagames.Pdf.Net.PdfPage.DeviceToPage(System.Int32,System.Int32,System.Int32,System.Int32,Patagames.Pdf.Enums.PageRotate,System.Int32,System.Int32)"/> function.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfLinkCollections.GetLinkAtPoint(System.Drawing.PointF)">
            <summary>
            Find a link at specified point on a document page
            </summary>
            <param name="point">The <see cref="T:System.Drawing.Point"/> structure that represents point, specified in page coordinate system</param>
            <returns>Instance of <see cref="T:Patagames.Pdf.Net.PdfLink"/> class that represents the found link. Null if there’s no link at that point.</returns>
            <remarks>The point coordinate are specified in page coordinate system. 
            You can convert coordinate from screen system to page system using <see cref="M:Patagames.Pdf.Net.PdfPage.DeviceToPage(System.Int32,System.Int32,System.Int32,System.Int32,Patagames.Pdf.Enums.PageRotate,System.Int32,System.Int32)"/> function.</remarks>
        </member>
        <member name="T:Patagames.Pdf.Net.PdfPageCollection">
            <summary>
            Represents the collection of <see cref="T:Patagames.Pdf.Net.PdfPage"/> objects
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPageCollection.#ctor(Patagames.Pdf.Net.PdfDocument)">
            <summary>
            Initializes a new instance of the PdfPageCollection class.
            </summary>
            <param name="document">Document which contains this collection of destinations.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPageCollection.Dispose">
            <summary>
            Releases all resources used by the PdfPageCollection.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPageCollection.InsertPageAt(System.Int32,System.Single,System.Single)">
            <summary>
            Inserts a new page into the collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which page should be inserted.</param>
            <param name="width">The page width.</param>
            <param name="height">The page height.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPageCollection.InsertPageAt(System.Int32,System.Drawing.SizeF)">
            <summary>
            Inserts a new page into the collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which page should be inserted.</param>
            <param name="size">The page size</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPageCollection.ImportPages(Patagames.Pdf.Net.PdfDocument,System.String,System.Int32)">
            <summary>
            Import some pages to a PDF document.
            </summary>
            <param name="sourceDoc">A document to be imported.</param>
            <param name="pagerange">A page range string, Such as "1,3,5-7". If this parameter is NULL, it would import all pages in sourceDoc.</param>
            <param name="index">The page index wanted to insert from.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPageCollection.DeleteAt(System.Int32)">
            <summary>
            Delete a PDF page.
            </summary>
            <param name="index">The index of a page.</param>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfPageCollection.CurrentIndex">
            <summary>
            Gets or sets the current index of a page in PdfPageCollection
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfPageCollection.CurrentPage">
            <summary>
             Gets the current PdfPage item by <see cref="P:Patagames.Pdf.Net.PdfPageCollection.CurrentIndex"/>
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfPageCollection.Count">
            <summary>
            Gets total number of pages in a PDF document
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.PdfPageObjectsCollection">
            <summary>
            Represents the collection of objects on a page.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPageObjectsCollection.#ctor(Patagames.Pdf.Net.PdfPage)">
            <summary>
            Initializes a new instance of the PdfPageObjectsCollection class.
            </summary>
            <param name="page">Page which contains this collection of objects.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPageObjectsCollection.InsertObject(Patagames.Pdf.Net.PdfPageObject)">
            <summary>
            Insert an object to the page. The page object is automatically freed.
            </summary>
            <param name="pageObject">Instance of <see cref="T:Patagames.Pdf.Net.PdfPageObject"/> class. It can be <see cref="T:Patagames.Pdf.Net.PdfImageObject"/> for example.</param>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfPageObjectsCollection.Count">
            <summary>
            Gets total number objects on a page
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.PdfPathObject">
            <summary>
            Represents a path object.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPathObject.Create">
            <summary>
            Create new instance of PdfPathObject class
            </summary>
            <returns>New instance of PdfPathObject</returns>
        </member>
        <member name="T:Patagames.Pdf.Net.PdfQuadPointsCollection">
            <summary>
            Represents the collection of quadrilateral points to the link annotation
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfQuadPointsCollection.#ctor(Patagames.Pdf.Net.PdfLink)">
            <summary>
            Initializes a new instance of the PdfQuadPointsCollection class.
            </summary>
            <param name="link">Link which contains this collection of quadrilateral points.</param>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfQuadPointsCollection.Count">
            <summary>
            Gets total number of pages in a PDF document
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.PdfShadingObject">
            <summary>
            Represents a shading object.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfShadingObject.Create">
            <summary>
            Create new instance of PdfShadingObject class
            </summary>
            <returns>New instance of PdfShadingObject</returns>
        </member>
        <member name="T:Patagames.Pdf.Net.PdfText">
            <summary>
            Represents the text information for the current page
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfText.#ctor(Patagames.Pdf.Net.PdfPage)">
            <summary>
            Initializes a new instance of the PdfText class.
            </summary>
            <param name="pdfPage">Instance of <see cref="T:Patagames.Pdf.Net.PdfPage"/> class</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfText.Dispose">
            <summary>
            Releases all resources used by the PdfText.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfText.GetCharacter(System.Int32)">
            <summary>
            Get Unicode of a character in a page
            </summary>
            <param name="index">Zero-based index of the character</param>
            <returns>The the particular character. If a character is not encoded in Unicode and engine can't convert to Unicode,
            the return value will be zero character (\0).</returns>		
        </member>
        <member name="M:Patagames.Pdf.Net.PdfText.GetFontSize(System.Int32)">
            <summary>
            Get the font size of a particular character
            </summary>
            <param name="index">Zero-based index of the character.</param>
            <returns>The font size of the particular character, measured in points (about 1/72 inch). This is the typographic size of the font (so called "em size").</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfText.GetCharBox(System.Int32)">
            <summary>
            Get bounding box of a particular character.
            </summary>
            <param name="index">Zero-based index of the character.</param>
            <remarks>All positions are measured in PDF "user space"</remarks>
            <returns>Bounding box of a particular character.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfText.GetCharIndexAtPos(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Get the index of a character at or nearby a certain position on the page
            </summary>
            <param name="x">X position in PDF "user space"</param>
            <param name="y">Y position in PDF "user space"</param>
            <param name="xTolerance">An x-axis tolerance value for character hit detection, in point unit.</param>
            <param name="yTolerance">A y-axis tolerance value for character hit detection, in point unit</param>
            <returns>The zero-based index of the character at, or nearby the point (x,y).
            If there is no character at or nearby the point, return value will be -1.
            If an error occurs, -3 will be returned.
            </returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfText.GetText(System.Int32,System.Int32)">
            <summary>
            Extract text string from the page
            </summary>
            <param name="index">Index for the start characters</param>
            <param name="count">Number of characters to be extracted</param>
            <returns>Text string from the page</returns>
            <remarks>This function ignores characters without unicode information</remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfText.GetTextInfo(System.Int32,System.Int32)">
            <summary>
            Extract text information structure from the page
            </summary>
            <param name="index">Index for the start characters</param>
            <param name="count">Number of characters to be extracted</param>
            <returns>The instane of <see cref="T:Patagames.Pdf.Net.PdfText"/> class that represent text information of the current page</returns>
            <remarks>This function ignores characters without unicode information</remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfText.GetBoundedText(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Extract text within a rectangular boundary on the page specified by a coordinate pair, a width, and a height.
            </summary>
            <param name="left">Left boundary</param>
            <param name="top">Top boundary</param>
            <param name="right">Right boundary</param>
            <param name="bottom">Bottom boundary.</param>
            <returns>Text within a rectangular boundary on the page</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfText.GetBoundedText(Patagames.Pdf.FS_RECTF)">
            <summary>
            Extract text within a rectangular boundary on the page specified by a <see cref="T:FS_RECTF"/> structure.
            </summary>
            <param name="rect">Rectangle boundary</param>
            <returns>Text within a rectangular boundary on the page</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfText.Find(System.String,Patagames.Pdf.Enums.FindFlags,System.Int32)">
            <summary>
            Start a search.
            </summary>
            <param name="findWhat">A string match pattern</param>
            <param name="flags">ption flags. See <see cref="T:Patagames.Pdf.Enums.FindFlags"/> for details.</param>
            <param name="startIndex">Start from this character. -1 for end of the page.</param>
            <returns>A object fot represents the search context.</returns>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfText.Handle">
            <summary>
            Gets the Pdfium SDK handle that the PdfText is bound to
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfText.CountChars">
            <summary>
            <para>Gets number of characters in a page or -1 for error.</para>
            <para>Generated characters, like additional space characters, new line characters, are also counted.</para>
            </summary>
            <remarks><para>Characters in a page form a "stream", inside the stream, each character has an index.
            We will use the index parameters in many functions.</para>
            <para>The first character in the page has an index value of zero.</para></remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfText.WebLinks">
            <summary>
            Gets the instance of PdfWebLinkCollection class that represents the web link on current page
            </summary>
            <remarks>See remarks section of <see cref="T:Patagames.Pdf.Net.PdfWebLinkCollection"/> class for more details.</remarks>
        </member>
        <member name="T:Patagames.Pdf.Net.PdfTextInfo">
            <summary>
            Represents a text information of specified text on the page.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfTextInfo.#ctor(Patagames.Pdf.Net.PdfText,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the PdfDocument class.
            </summary>
            <param name="textPage">Handle to a text page information structure. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFText_LoadPage(System.IntPtr)"/> function.</param>
            <param name="index">Index for the start characters.</param>
            <param name="count">Number of characters to be extracted.</param>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfTextInfo.Text">
            <summary>
            Gets a text string associated with this instance of <see cref="T:Patagames.Pdf.Net.PdfTextInfo"/> class.
            </summary>
            <remarks>This ignores characters without unicode information</remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfTextInfo.Rects">
            <summary>
            Gets a collection of rectangular areas bounding specified text.
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.PdfTextObject">
            <summary>
            Represents a text object.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfTextObject.Create">
            <summary>
            Create new instance of PdfTextObject class
            </summary>
            <returns>New instance of PdfTextObject</returns>
        </member>
        <member name="T:Patagames.Pdf.Net.PdfUnknownObject">
            <summary>
            Represents a page object with unsupported type.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfUnknownObject.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the PdfUnknownObject class.
            </summary>
            <param name="handle">The Pdfium SDK handle that the new object will be bound to</param>
        </member>
        <member name="T:Patagames.Pdf.Net.PdfUrlInfo">
            <summary>
            Represents a url information of specified web link on the page.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfUrlInfo.#ctor(Patagames.Pdf.Net.PdfWebLink,System.Int32)">
            <summary>
            Initializes a new instance of the PdfDocument class.
            </summary>
            <param name="webLink">Instance of <see cref="T:Patagames.Pdf.Net.PdfWebLink"/> class.</param>
            <param name="index">Index for the web link.</param>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfUrlInfo.Url">
            <summary>
            Gets a url associated with this instance of <see cref="T:Patagames.Pdf.Net.PdfUrlInfo"/> class.
            </summary>
            <remarks>This ignores characters without unicode information</remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfUrlInfo.Rects">
            <summary>
            Gets a collection of rectangular areas bounding specified url.
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.PdfWebLink">
            <summary>
            Represents information about weblinks in a page
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfWebLink.#ctor(Patagames.Pdf.Net.PdfWebLinkCollection,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Patagames.Pdf.Net.PdfWebLink"/> class.
            </summary>
            <param name="links">Web links collection.</param>
            <param name="index">Zero-based index for the link in the specified collection</param>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfWebLink.Handle">
            <summary>
            Gets the Pdfium SDK handle that the web links is bound to
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfWebLink.Url">
            <summary>
            Gets the URL information for a detected web link.
            </summary>
            <returns>URL information for a detected web link</returns>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfWebLink.UrlInfo">
            <summary>
            Gets the URL information (including bounding rects) for a detected web link.
            </summary>
            <returns>URL information for a detected web link</returns>
        </member>
        <member name="T:Patagames.Pdf.Net.PdfWebLinkCollection">
            <summary>
            Represents collection of <see cref="T:Patagames.Pdf.Net.PdfWebLink"/> objects.
            </summary>
            <remarks>
            Weblinks are those links implicitly embedded in PDF pages. PDF also has a type of annotation
            called "link", FPDFTEXT doesn't deal with that kind of link. FPDFTEXT weblink feature is
            useful for automatically detecting links in the page contents. For example, things like
            "http://www.patagames.com" will be detected, so applications can allow user to click on those
            characters to activate the link, even the PDF doesn't come with link annotations.
            <see cref="M:Patagames.Pdf.Net.PdfWebLinkCollection.Dispose"/> must be called to release resources.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfWebLinkCollection.Dispose">
            <summary>
            Releases all resources used by the PdfDocument.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfWebLinkCollection.Handle">
            <summary>
            Gets the Pdfium SDK handle that the web links is bound to
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfWebLinkCollection.Count">
            <summary>
            Gets the number of of detected web links actually contained in the collections.
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.EventArguments.ReadSegmentEventArgs">
            <summary>
            Represents the class that contain event data for <see cref="E:Patagames.Pdf.Net.PdfAvailabilityProvider.ReadSegment"/> event. This event called by SDK to read some data from custom source.
            </summary>
            <remarks>SegmentOffset is specified by byte offset from beginning of the file. It may be possible for SDK to call this event multiple times for same position.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.EventArguments.ReadSegmentEventArgs.#ctor(System.Byte[],System.Int32,System.Byte[],System.Int32)">
            <summary>
            Construct <see cref="T:Patagames.Pdf.Net.EventArguments.ReadSegmentEventArgs"/> object.
            </summary>
            <param name="userData">Custom user data</param>
            <param name="segmentOffset">Position is specified by byte offset from beginning of the file.</param>
            <param name="dstBuffer">Buffer for data allocated inside SDK</param>
            <param name="segmentSize">Buffer size</param>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.ReadSegmentEventArgs.UserData">
            <summary>
            Custom user data
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.ReadSegmentEventArgs.SegmentOffset">
            <summary>
            Position is specified by byte offset from beginning of the file.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.ReadSegmentEventArgs.DstBuffer">
            <summary>
            Buffer for data allocated inside SDK
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.ReadSegmentEventArgs.SegmentSize">
            <summary>
            Buffer size
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.EventArguments.ReadSegmentEventArgs.IsSuccess">
            <summary>
            Should be true if successful, false for error.
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.PdfCustomLoader">
            <summary>
            Represents a custom access descriptor for loading PDF document.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfCustomLoader.Load">
            <summary>
            Open and load a PDF document from a file.
            </summary>
            <returns>Instance of PDFDocument class</returns>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.UnknownErrorException">unknown error</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.PdfFileNotFoundException">file not found or could not be opened</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.BadFormatException">file not in PDF format or corrupted</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.InvalidPasswordException">password required or incorrect password</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.UnsupportedSecuritySchemeException">unsupported security scheme</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.PdfiumException">Error occured in PDFium. See ErrorCode for detail</exception>
            <remarks>The application should maintain the file resources being valid until the PDF document close.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfCustomLoader.#ctor(System.Int32,System.Byte[])">
            <summary>
            Construct SetTimerEventArgs object
            </summary>
            <param name="fileLength">File length, in bytes.</param>
            <param name="userData">A custom object for all implementation specific data.</param>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfCustomLoader.FormFill">
            <summary>
            Gets or sets a form fill environment object.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfCustomLoader.Password">
            <summary>
            Gets or sets a string used as the password for PDF file. If no password needed, empty or NULL can be used.
            </summary>
        </member>
        <member name="E:Patagames.Pdf.Net.PdfCustomLoader.LoadBlock">
            <summary>
             SDK fire this event when it need to receive the next data block of PDF document. 
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Properties.Error">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Error.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Error.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Error.err0001">
            <summary>
              Looks up a localized string similar to PointerManagerItem.Key is empty.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Error.err0002">
            <summary>
              Looks up a localized string similar to Unable to load library {0}.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Error.err0003">
            <summary>
              Looks up a localized string similar to File length cannot be less than zero.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Error.err0004">
            <summary>
              Looks up a localized string similar to Destination&apos;s name cannot be null or empty string.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Error.err0005">
            <summary>
              Looks up a localized string similar to Bookmark&apos;s title cannot be null or empty string.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Error.err0006">
            <summary>
              Looks up a localized string similar to Parametr index must be between {0} and {1}.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Error.err0007">
            <summary>
              Looks up a localized string similar to PdfForm object is not Initialized. Please load document whith this object as parameter.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Error.err0008">
            <summary>
              Looks up a localized string similar to This instance of the PdfForms class already assigned with another document.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Error.err0009">
            <summary>
              Looks up a localized string similar to Document is not yet available.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Error.err0010">
            <summary>
              Looks up a localized string similar to Forms is not yet available.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Error.err0011">
            <summary>
              Looks up a localized string similar to This page is not yet available.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Error.err0012">
            <summary>
              Looks up a localized string similar to Unable to load DLL &apos;pdfium.dll&apos;: The specified module could not be found.  Please make sure that you copy it to the application folder.  Alternatively, you can specify the full path to the pdfium.dll file using specificPath parameter in the initialization method.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Properties.Error.TrialMsg">
            <summary>
              Looks up a localized string similar to Trial version. Please visit http://patagames.com.
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.Exceptions.BadFormatException">
            <summary>
            The exception that is thrown when the PDF file is invalid.
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.Exceptions.PdfiumException">
            <summary>
            Represents errors that occur inside Pdfium SDK.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Exceptions.PdfiumException.#ctor(System.UInt32,System.String)">
            <summary>
            Initializes a new instance of the PdfiumException class.
            </summary>
            <param name="errorCode"></param>
            <param name="message"></param>
        </member>
        <member name="P:Patagames.Pdf.Net.Exceptions.PdfiumException.ErrorCode">
            <summary>
            Gets a code that provide additional information about the exception.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Exceptions.BadFormatException.#ctor">
            <summary>
            Initializes a new instance of the BadFormatException class.
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.Exceptions.PdfFileNotFoundException">
            <summary>
            The exception that is thrown when an attempt to access a file that does not exist on disk fails.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Exceptions.PdfFileNotFoundException.#ctor">
            <summary>
            Initializes a new instance of the PdfFileNotFoundException class.
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.Exceptions.InvalidPasswordException">
            <summary>
            This exception is commonly raised when the password for a PDF file does not match.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Exceptions.InvalidPasswordException.#ctor">
            <summary>
            Initializes a new instance of the InvalidPasswordException class.
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.Exceptions.PageNotFoundException">
            <summary>
             The exception that is thrown when the requested page was not found in PDF document
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Exceptions.PageNotFoundException.#ctor">
            <summary>
            Initializes a new instance of the PageNotFoundException class.
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.Exceptions.UnknownErrorException">
            <summary>
            Represents a fatal runtime error that occurs inside Pdfium SDK.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Exceptions.UnknownErrorException.#ctor">
            <summary>
            Initializes a new instance of the UnknownErrorException class.
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.Exceptions.UnsupportedSecuritySchemeException">
            <summary>
            Unsupported security scheme exception.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.Exceptions.UnsupportedSecuritySchemeException.#ctor">
            <summary>
            Initializes a new instance of the UnknownErrorException class.
            </summary>
        </member>
        <member name="T:Patagames.Pdf.GetBlockCallback">
            <summary>
            A function pointer for getting a block of data from specific position.
            </summary>
            <param name="param">custom user data</param>
            <param name="position">Position is specified by byte offset from beginning of the file.</param>
            <param name="buf">buffer for data allocated inside Pdfium SDK</param>
            <param name="size">buffer size</param>
            <returns>should be true if successful, false for error.</returns>
            <remarks>Required: Yes. Position is specified by byte offset from beginning of the file. It may be possible for FPDFSDK to call this function multiple times for same position.</remarks>
        </member>
        <member name="T:Patagames.Pdf.FPDF_FILEACCESS">
            <summary>
            Class for custom file access.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FPDF_FILEACCESS.FileLen">
            <summary>
            File length, in bytes.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FPDF_FILEACCESS.GetBlock">
            <summary>
            User callback function. See <see cref="T:Patagames.Pdf.GetBlockCallback"/> delegate for detail
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="F:Patagames.Pdf.FPDF_FILEACCESS.Param">
            <summary>
            A custom pointer for all implementation specific data.
            This pointer will be used as the first parameter to getBlockCallback callback.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.FPDF_FILEACCESS.#ctor(System.UInt32,System.Byte[])">
            <summary>
            Initialize a new instance of the FPDF_FILEACCESS class using file length and user data
            </summary>
            <param name="FileLen">File length, in bytes.</param>
            <param name="param">A custom pointer for all implementation specific data.</param>
        </member>
        <member name="T:Patagames.Pdf.WriteBlockCallback">
            <summary>
            Output a block of data in your custom way.
            </summary>
            <param name="pThis">Pointer to the structure itself</param>
            <param name="buffer">Pointer to a buffer to output</param>
            <param name="buflen">The size of the buffer</param>
            <returns>Should be non-zero if successful, zero for error</returns>
            <remarks>Required: Yes. Called by function <see cref="M:Patagames.Pdf.Pdfium.FPDF_SaveAsCopy(System.IntPtr,Patagames.Pdf.FPDF_FILEWRITE,Patagames.Pdf.Enums.SaveFlags)"/> and <see cref="M:Patagames.Pdf.Pdfium.FPDF_SaveWithVersion(System.IntPtr,Patagames.Pdf.FPDF_FILEWRITE,Patagames.Pdf.Enums.SaveFlags,System.Int32)"/></remarks>
        </member>
        <member name="T:Patagames.Pdf.FPDF_FILEWRITE">
            <summary>
             Class for custom file write
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FPDF_FILEWRITE.Version">
            <summary>
            Version number of the interface. Currently must be 1.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FPDF_FILEWRITE.WriteBlock">
            <summary>
            UserCallbackFunction. See <see cref="T:Patagames.Pdf.WriteBlockCallback"/> delegate for detail
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="T:Patagames.Pdf.ReleaseCallback">
            <summary>
            Give implementation a chance to release any data after the interface is no longer used
            </summary>
            <param name="pThis">Pointer to the interface structure itself</param>
            <remarks>Required: No. Called by Pdfium SDK during the final cleanup process.</remarks>
        </member>
        <member name="T:Patagames.Pdf.FFI_InvalidateCallback">
            <summary>
            Invalidate the client area within the specified rectangle.
            </summary>
            <param name="pThis">Pointer to the interface structure itself.</param>
            <param name="page">Handle to the page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> function.</param>
            <param name="left">Left position of the client area in PDF page coordinate.</param>
            <param name="top">Top  position of the client area in PDF page coordinate.</param>
            <param name="right">Right position of the client area in PDF page  coordinate.</param>
            <param name="bottom">Bottom position of the client area in PDF page coordinate.</param>
            <remarks>Required" Yes. All positions are measured in PDF "user space". Implementation should call <see cref="M:Patagames.Pdf.Pdfium.FPDF_RenderPageBitmap(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,Patagames.Pdf.Enums.PageRotate,Patagames.Pdf.Enums.RenderFlags)"/> function for repainting a specified page area.</remarks>
        </member>
        <member name="T:Patagames.Pdf.FFI_OutputSelectedRectCallback">
            <summary>
            When user is taking the mouse to select texts on a form field, this callback function will keep returning the selected areas to the implementation.
            </summary>
            <param name="pThis">Pointer to the interface structure itself.</param>
            <param name="page">Handle to the page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> function.</param>
            <param name="left">Left position of the client area in PDF page coordinate.</param>
            <param name="top">Top  position of the client area in PDF page coordinate.</param>
            <param name="right">Right position of the client area in PDF page  coordinate.</param>
            <param name="bottom">Bottom position of the client area in PDF page coordinate.</param>
            <remarks>Required: No. This CALLBACK function is useful for implementing special text selection effect. Implementation should
            first records the returned rectangles, then draw them one by one at the painting period, last,remove all 
            the recorded rectangles when finish painting.</remarks>
        </member>
        <member name="T:Patagames.Pdf.FFI_SetCursorCallback">
            <summary>
            Set the Cursor shape
            </summary>
            <param name="pThis">Pointer to the interface structure itself.</param>
            <param name="nCursorType">Cursor type. see Flags for Cursor type for the details.</param>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="T:Patagames.Pdf.TimerCallback">
            <summary>
            Declares of a pointer type to the callback function for the <see cref="F:Patagames.Pdf.FPDF_FORMFILLINFO.FFI_SetTimer"/> method.
            </summary>
            <param name="idEvent">dentifier of the timer.</param>
        </member>
        <member name="T:Patagames.Pdf.FFI_SetTimerCallback">
            <summary>
            This method installs a system timer. A time-out value is specified, 
            and every time a time-out occurs, the system passes a message to
            the TimerProc callback function. 
            </summary>
            <param name="pThis">Pointer to the interface structure itself.</param>
            <param name="uElapse">Specifies the time-out value, in milliseconds.</param>
            <param name="lpTimerFunc">A pointer to the callback function-TimerCallback.</param>
            <returns>The timer identifier of the new timer if the function is successful.
            An application passes this value to the <see cref="F:Patagames.Pdf.FPDF_FORMFILLINFO.FFI_KillTimer"/> method to kill 
            the timer. Nonzero if it is successful; otherwise, it is zero.</returns>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="T:Patagames.Pdf.FFI_KillTimerCallback">
            <summary>
            This method kills the timer event identified by nIDEvent, set by an earlier call to <see cref="F:Patagames.Pdf.FPDF_FORMFILLINFO.FFI_SetTimer"/>.
            </summary>
            <param name="pThis">Pointer to the interface structure itself.</param>
            <param name="nTimerID">The timer ID return by <see cref="F:Patagames.Pdf.FPDF_FORMFILLINFO.FFI_SetTimer"/> function.</param>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="T:Patagames.Pdf.FFI_GetLocalTimeCallback">
            <summary>
            This method receives the current local time on the system. 
            </summary>
            <param name="pThis">Pointer to the interface structure itself.</param>
            <returns><see cref="T:Patagames.Pdf.FPDF_SYSTEMTIME"/> structure filled by current time</returns>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="T:Patagames.Pdf.FFI_OnChangeCallback">
            <summary>
            This method will be invoked to notify implementation when the value of any FormField on the document had been changed.
            </summary>
            <param name="pThis">Pointer to the interface structure itself.</param>
            <remarks>Required: No.</remarks>
        </member>
        <member name="T:Patagames.Pdf.FFI_GetPageCallback">
            <summary>
            This method receives the page pointer associated with a specified page index.
            </summary>
            <param name="pThis">Pointer to the interface structure itself.</param>
            <param name="document">Handle to document. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadDocument(System.String,System.String)"/> function.</param>
            <param name="nPageIndex">Index number of the page. 0 for the first page.</param>
            <returns>Handle to the page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> function.</returns>
            <remarks>Required: Yes. In some cases, the document-level JavaScript action may refer to a page which hadn't been loaded yet.
            To successfully run the javascript action, implementation need to load the page for SDK.</remarks>
        </member>
        <member name="T:Patagames.Pdf.FFI_GetCurrentPageCallback">
            <summary>
            This method receives the current page pointer.
            </summary>
            <param name="pThis">Pointer to the interface structure itself.</param>
            <param name="document">Handle to document. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadDocument(System.String,System.String)"/> function.</param>
            <returns>Handle to the page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> function.</returns>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="T:Patagames.Pdf.FFI_GetRotationCallback">
            <summary>
            This method receives currently rotation of the page view.
            </summary>
            <param name="pThis">Pointer to the interface structure itself.</param>
            <param name="page">Handle to page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> function.</param>
            <returns>The page rotation. Should be 0(0 degree),1(90 degree),2(180 degree),3(270 degree), in a clockwise direction.</returns>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="T:Patagames.Pdf.FFI_DoURIActionCallback">
            <summary>
            This action resolves to a uniform resource identifier. 
            </summary>
            <param name="pThis">Pointer to the interface structure itself.</param>
            <param name="bsURI">A byte string which indicates the uniform resource identifier, terminated by 0.</param>
            <remarks>required: No. See the URI actions description of <a href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF Reference, Version 1.7</a> for more details.</remarks>
            <seealso><a href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF Reference 1.7</a></seealso>
        </member>
        <member name="T:Patagames.Pdf.FFI_ExecuteNamedActionCallback">
            <summary>
            This method will execute an named action.
            </summary>
            <param name="pThis">Pointer to the interface structure itself.</param>
            <param name="namedAction">A byte string which indicates the named action, terminated by 0.</param>
            <remarks>See the named actions description of <a href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF Reference, Version 1.7</a> for more details.
            Required: Yes.</remarks>
            <seealso><a href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF Reference 1.7</a></seealso>
        </member>
        <member name="T:Patagames.Pdf.FFI_SetTextFieldFocusCallback">
            <summary>
            This method will be called when a text field is getting or losing a focus.
            </summary>
            <param name="pThis">Pointer to the interface structure itself.</param>
            <param name="value">The string value of the form field, in UTF-16LE format.</param>
            <param name="valueLen">The length of the string value, number of characters (not bytes).</param>
            <param name="is_focus">True if the form field is getting a focus, False for losing a focus.</param>
            <remarks>required: No. Currently,only support text field and combobox field.</remarks>
        </member>
        <member name="T:Patagames.Pdf.FFI_DoGoToActionCallback">
            <summary>
            This action changes the view to a specified destination.
            </summary>
            <param name="pThis">Pointer to the interface structure itself.</param>
            <param name="nPageIndex">The index of the PDF page.</param>
            <param name="zoomMode">The zoom mode for viewing page.See ZoomTypes. </param>
            <param name="fPosArray">The float array which carries the position info</param>
            <param name="sizeofArray">The size of float array.</param>
            <remarks>Required: No. See the Destinations description of <a href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF Reference, Version 1.7</a> in 8.2.1 for more details.</remarks>
            <seealso><a href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF Reference 1.7</a></seealso>
        </member>
        <member name="T:Patagames.Pdf.FPDF_FORMFILLINFO">
            <summary>
            Class for manipulates with PDF forms
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FPDF_FORMFILLINFO.Version">
            <summary>
            Version number of the interface. Currently must be 1.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FPDF_FORMFILLINFO.Release">
            <summary>
            Application defined callback function. See <see cref="T:Patagames.Pdf.ReleaseCallback"/> delegate for detail
            </summary>
            <remarks>Required: No.</remarks>
        </member>
        <member name="F:Patagames.Pdf.FPDF_FORMFILLINFO.FFI_Invalidate">
            <summary>
            Application defined callback function. See <see cref="T:Patagames.Pdf.FFI_InvalidateCallback"/> delegate for detail
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="F:Patagames.Pdf.FPDF_FORMFILLINFO.FFI_OutputSelectedRect">
            <summary>
            Application defined callback function. See <see cref="T:Patagames.Pdf.FFI_OutputSelectedRectCallback"/> delegate for detail
            </summary>
            <remarks>Required: No.</remarks>
        </member>
        <member name="F:Patagames.Pdf.FPDF_FORMFILLINFO.FFI_SetCursor">
            <summary>
            Application defined callback function. See <see cref="T:Patagames.Pdf.FFI_SetCursorCallback"/> delegate for detail
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="F:Patagames.Pdf.FPDF_FORMFILLINFO.FFI_SetTimer">
            <summary>
            Application defined callback function. See <see cref="T:Patagames.Pdf.FFI_SetTimerCallback"/> delegate for detail
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="F:Patagames.Pdf.FPDF_FORMFILLINFO.FFI_KillTimer">
            <summary>
            Application defined callback function. See <see cref="T:Patagames.Pdf.FFI_KillTimerCallback"/> delegate for detail
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="F:Patagames.Pdf.FPDF_FORMFILLINFO.FFI_GetLocalTime">
            <summary>
            Application defined callback function. See <see cref="T:Patagames.Pdf.FFI_GetLocalTimeCallback"/> delegate for detail
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="F:Patagames.Pdf.FPDF_FORMFILLINFO.FFI_OnChange">
            <summary>
            Application defined callback function. See <see cref="T:Patagames.Pdf.FFI_OnChangeCallback"/> delegate for detail
            </summary>
            <remarks>Required: No.</remarks>
        </member>
        <member name="F:Patagames.Pdf.FPDF_FORMFILLINFO.FFI_GetPage">
            <summary>
            Application defined callback function. See <see cref="T:Patagames.Pdf.FFI_GetPageCallback"/> delegate for detail
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="F:Patagames.Pdf.FPDF_FORMFILLINFO.FFI_GetCurrentPage">
            <summary>
            Application defined callback function. See <see cref="T:Patagames.Pdf.FFI_GetCurrentPageCallback"/> delegate for detail
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="F:Patagames.Pdf.FPDF_FORMFILLINFO.FFI_GetRotation">
            <summary>
            Application defined callback function. See <see cref="T:Patagames.Pdf.FFI_GetRotationCallback"/> delegate for detail
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="F:Patagames.Pdf.FPDF_FORMFILLINFO.FFI_ExecuteNamedAction">
            <summary>
            Application defined callback function. See <see cref="T:Patagames.Pdf.FFI_ExecuteNamedActionCallback"/> delegate for detail
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="F:Patagames.Pdf.FPDF_FORMFILLINFO.FFI_SetTextFieldFocus">
            <summary>
            Application defined callback function. See <see cref="T:Patagames.Pdf.FFI_SetTextFieldFocusCallback"/> delegate for detail
            </summary>
            <remarks>Required: No.</remarks>
        </member>
        <member name="F:Patagames.Pdf.FPDF_FORMFILLINFO.FFI_DoURIAction">
            <summary>
            Application defined callback function. See <see cref="T:Patagames.Pdf.FFI_DoURIActionCallback"/> delegate for detail
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="F:Patagames.Pdf.FPDF_FORMFILLINFO.FFI_DoGoToAction">
            <summary>
            Application defined callback function. See <see cref="T:Patagames.Pdf.FFI_DoGoToActionCallback"/> delegate for detail
            </summary>
            <remarks>Required: No.</remarks>
        </member>
        <member name="F:Patagames.Pdf.FPDF_FORMFILLINFO.m_pJsPlatform">
            <summary>
            pointer to <see cref="T:Patagames.Pdf.IPDF_JSPLATFORM"/> interface
            </summary>
        </member>
        <member name="T:Patagames.Pdf.ReleaseFontsCallback">
            <summary>
            Give implementation a chance to release any data after the interface is no longer used
            </summary>
            <param name="pThis">Pointer to the interface structure itself</param>
            <remarks>Required: No. Called by Pdfium SDK during the final cleanup process.</remarks>
        </member>
        <member name="T:Patagames.Pdf.EnumFontsCallback">
            <summary>
            Enumerate all fonts installed on the system
            </summary>
            <param name="pThis">Pointer to the interface structure itself</param>
            <param name="pMapper">An opaque pointer to internal font mapper, used when calling <see cref="M:Patagames.Pdf.Pdfium.FPDF_AddInstalledFont(System.IntPtr,System.String,Patagames.Pdf.Enums.CharacterSetTypes)"/></param>
            <remarks>Required: No. Implementation should call <see cref="M:Patagames.Pdf.Pdfium.FPDF_AddInstalledFont(System.IntPtr,System.String,Patagames.Pdf.Enums.CharacterSetTypes)"/> function for each font found.
            Only TrueType/OpenType and Type1 fonts are accepted by Pdfium SDK.</remarks>
        </member>
        <member name="T:Patagames.Pdf.MapFontCallback">
            <summary>
            Use the system font mapper to get a font handle from requested parameters
            </summary>
            <param name="pThis">Pointer to the interface structure itself</param>
            <param name="weight">Weight of the requested font. 400 is normal and 700 is bold.</param>
            <param name="bItalic">Italic option of the requested font, TRUE or FALSE.</param>
            <param name="charset">Character set identifier for the requested font. See above defined constants.</param>
            <param name="pitch_family">A combination of flags. See above defined constants.</param>
            <param name="face">Typeface name. Currently use system local encoding only.</param>
            <param name="bExact">Pointer to an boolean value receiving the indicator whether mapper found the exact match. If mapper is not sure whether it's exact match, ignore this paramter.</param>
            <returns>An opaque pointer for font handle, or IntPtr.Zero if system mapping is not supported.</returns>
            <remarks>
            Required only if <see cref="F:Patagames.Pdf.FPDF_SYSFONTINFO.GetFont"/> method is not implemented.
            If the system supports native font mapper (like Windows), implementation can implement this method to get a font handle. 
            Otherwise, Pdfium SDK will do the mapping and then call GetFont method.
            Only TrueType/OpenType and Type1 fonts are accepted by Pdfium SDK.
            </remarks>
        </member>
        <member name="T:Patagames.Pdf.GetFontCallback">
            <summary>
            Get a handle to a particular font by its internal ID
            </summary>
            <param name="pThis">Pointer to the interface structure itself</param>
            <param name="face">Typeface name. Currently use system local encoding only.</param>
            <returns>An opaque pointer for font handle.</returns>
            <remarks>Required only if <see cref="F:Patagames.Pdf.FPDF_SYSFONTINFO.MapFont"/> method is not implemented.
            If the system mapping not supported, Pdfium SDK will do the font mapping and use this method to get a font handle.</remarks>
        </member>
        <member name="T:Patagames.Pdf.GetFontDataCallback">
            <summary>
            Get font data from a font
            </summary>
            <param name="pThis">Pointer to the interface structure itself</param>
            <param name="hFont">Font handle returned by <see cref="F:Patagames.Pdf.FPDF_SYSFONTINFO.MapFont"/> or <see cref="F:Patagames.Pdf.FPDF_SYSFONTINFO.GetFont"/> method</param>
            <param name="table">TrueType/OpenType table identifier (refer to TrueType specification). 0 for the whole font file.</param>
            <param name="buffer">The buffer receiving the font data. Can be NULL if not provided</param>
            <param name="buf_size">Buffer size, can be zero if not provided</param>
            <returns>Number of bytes needed, if buffer not provided or not large enough, or number of bytes written into buffer otherwise.</returns>
            <remarks>Required: Yes. Can read either full font file, or a particular TrueType/OpenType table</remarks>
        </member>
        <member name="T:Patagames.Pdf.GetFaceNameCallback">
            <summary>
            Get face name from a font handle
            </summary>
            <param name="pThis">Pointer to the interface structure itself</param>
            <param name="hFont">Font handle returned by <see cref="F:Patagames.Pdf.FPDF_SYSFONTINFO.MapFont"/> or <see cref="F:Patagames.Pdf.FPDF_SYSFONTINFO.GetFont"/> method</param>
            <param name="buffer">The buffer receiving the face name. Can be NULL if not provided</param>
            <param name="buf_size">Buffer size, can be zero if not provided</param>
            <returns>Number of bytes needed, if buffer not provided or not large enough, or number of bytes written into buffer otherwise.</returns>
            <remarks>Required: No.</remarks>
        </member>
        <member name="T:Patagames.Pdf.GetFontCharsetCallback">
            <summary>
            Get character set information for a font handle
            </summary>
            <param name="pThis">Pointer to the interface structure itself</param>
            <param name="hFont">Font handle returned by <see cref="F:Patagames.Pdf.FPDF_SYSFONTINFO.MapFont"/> or <see cref="F:Patagames.Pdf.FPDF_SYSFONTINFO.GetFont"/> method</param>
            <returns>Character set identifier. See defined constants above.</returns>
            <remarks>Required: No.</remarks>
        </member>
        <member name="T:Patagames.Pdf.DeleteFontCallback">
            <summary>
            Delete a font handle
            </summary>
            <param name="pThis">Pointer to the interface structure itself</param>
            <param name="hFont">Font handle returned by <see cref="F:Patagames.Pdf.FPDF_SYSFONTINFO.MapFont"/> or <see cref="F:Patagames.Pdf.FPDF_SYSFONTINFO.GetFont"/> method</param>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="T:Patagames.Pdf.FPDF_SYSFONTINFO">
            <summary>
            Interface for getting system font information and font mapping
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FPDF_SYSFONTINFO.Version">
            <summary>
            Version number of the interface. Currently must be 1.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FPDF_SYSFONTINFO.Release">
            <summary>
            Application defined callback function. See <see cref="T:Patagames.Pdf.ReleaseCallback"/> delegate for detail
            </summary>
            <remarks>Required: No.</remarks>
        </member>
        <member name="F:Patagames.Pdf.FPDF_SYSFONTINFO.EnumFonts">
            <summary>
            Application defined callback function. See <see cref="T:Patagames.Pdf.EnumFontsCallback"/> delegate for detail
            </summary>
            <remarks>Required: No.</remarks>
        </member>
        <member name="F:Patagames.Pdf.FPDF_SYSFONTINFO.MapFont">
            <summary>
            Application defined callback function. See <see cref="T:Patagames.Pdf.MapFontCallback"/> delegate for detail
            </summary>
            <remarks>Required only if <see cref="F:Patagames.Pdf.FPDF_SYSFONTINFO.GetFont"/> method is not implemented.</remarks>
        </member>
        <member name="F:Patagames.Pdf.FPDF_SYSFONTINFO.GetFont">
            <summary>
            Application defined callback function. See <see cref="T:Patagames.Pdf.GetFontCallback"/> delegate for detail
            </summary>
            <remarks>Required only if <see cref="F:Patagames.Pdf.FPDF_SYSFONTINFO.MapFont"/> method is not implemented</remarks>
        </member>
        <member name="F:Patagames.Pdf.FPDF_SYSFONTINFO.GetFontData">
            <summary>
            Application defined callback function. See <see cref="T:Patagames.Pdf.GetFontDataCallback"/> delegate for detail
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="F:Patagames.Pdf.FPDF_SYSFONTINFO.GetFaceName">
            <summary>
            Application defined callback function. See <see cref="T:Patagames.Pdf.GetFaceNameCallback"/> delegate for detail
            </summary>
            <remarks>Required: No.</remarks>
        </member>
        <member name="F:Patagames.Pdf.FPDF_SYSFONTINFO.GetFontCharset">
            <summary>
            Application defined callback function. See <see cref="T:Patagames.Pdf.GetFontCharsetCallback"/> delegate for detail
            </summary>
            <remarks>Required: No.</remarks>
        </member>
        <member name="F:Patagames.Pdf.FPDF_SYSFONTINFO.DeleteFont">
            <summary>
            Application defined callback function. See <see cref="F:Patagames.Pdf.FPDF_SYSFONTINFO.DeleteFont"/> delegate for detail
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="T:Patagames.Pdf.FPDF_SYSTEMTIME">
            <summary>
            Declares of a struct type to the local system time.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FPDF_SYSTEMTIME.wYear">
            <summary>
            years since 1900
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FPDF_SYSTEMTIME.wMonth">
            <summary>
            months since January - [0,11]
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FPDF_SYSTEMTIME.wDayOfWeek">
            <summary>
            days since Sunday - [0,6]
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FPDF_SYSTEMTIME.wDay">
            <summary>
            day of the month - [1,31]
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FPDF_SYSTEMTIME.wHour">
            <summary>
            hours since midnight - [0,23]
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FPDF_SYSTEMTIME.wMinute">
            <summary>
            minutes after the hour - [0,59]
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FPDF_SYSTEMTIME.wSecond">
            <summary>
            seconds after the minute - [0,59] 
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FPDF_SYSTEMTIME.wMilliseconds">
            <summary>
            milliseconds after the second - [0,999]
            </summary>
        </member>
        <member name="T:Patagames.Pdf.FS_MATRIX">
            <summary>
            Matrix for transformation
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FS_MATRIX.a">
            <summary>
            Coefficient a.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FS_MATRIX.b">
            <summary>
            Coefficient b.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FS_MATRIX.c">
            <summary>
            Coefficient c.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FS_MATRIX.d">
            <summary>
            Coefficient d.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FS_MATRIX.e">
            <summary>
            Coefficient e.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FS_MATRIX.f">
            <summary>
            Coefficient f.
            </summary>
        </member>
        <member name="T:Patagames.Pdf.FS_QUADPOINTSF">
            <summary>
            Structure for quadrilateral points
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FS_QUADPOINTSF.x1">
            <summary>
            x coordinate of the first point.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FS_QUADPOINTSF.y1">
            <summary>
            y coordinate of the first point.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FS_QUADPOINTSF.x2">
            <summary>
            x coordinate of the second point.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FS_QUADPOINTSF.y2">
            <summary>
            y coordinate of the second point.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FS_QUADPOINTSF.x3">
            <summary>
            x coordinate of the third point.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FS_QUADPOINTSF.y3">
            <summary>
            y coordinate of the third point.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FS_QUADPOINTSF.x4">
            <summary>
            x coordinate of the fourth point
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FS_QUADPOINTSF.y4">
            <summary>
            y coordinate of the fourth point
            </summary>
        </member>
        <member name="T:Patagames.Pdf.FS_RECTF">
            <summary>
            Rectangle area(float) in device or page coordination system.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FS_RECTF.left">
            <summary>
            The x-coordinate of the left-top corner.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FS_RECTF.top">
            <summary>
            The y-coordinate of the left-top corner.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FS_RECTF.right">
            <summary>
            The x-coordinate of the right-bottom corner.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FS_RECTF.bottom">
            <summary>
            The y-coordinate of the right-bottom corner.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_RECTF.Width">
            <summary>
            Gets the width of current rectangle
            </summary>
        </member>
        <member name="P:Patagames.Pdf.FS_RECTF.Height">
            <summary>
            Gets the height of current rectangle
            </summary>
        </member>
        <member name="T:Patagames.Pdf.AddSegmentCallback">
            <summary>
            Add a section to be downloaded.
            </summary>
            <param name="pThis">Pointer to the interface structure itself.</param>
            <param name="offset">The offset of the hint reported to be downloaded.</param>
            <param name="size">The size of the hint reported to be downloaded.</param>
            <remarks>Required: Yes. Called by Pdfium SDK to report some downloading hints for download manager.
            The position and size of section may be not accurate, part of the section might be already available.
            The download manager must deal with that to maximize download efficiency.</remarks>
        </member>
        <member name="T:Patagames.Pdf.FX_DOWNLOADHINTS">
            <summary>
            Download hints interface. Used to receive hints for further downloading.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FX_DOWNLOADHINTS.Version">
            <summary>
            Version number of the interface. Currently must be 1.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FX_DOWNLOADHINTS.AddSegment">
            <summary>
            User callback function. See <see cref="T:Patagames.Pdf.AddSegmentCallback"/> delegate for detail
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="T:Patagames.Pdf.IsDataAvailableCallback">
            <summary>
            Report whether the specified data section is available. A section is available only if all bytes in the section is available.
            </summary>
            <param name="pThis">Pointer to the interface structure itself.</param>
            <param name="offset">The offset of the data section in the file.</param>
            <param name="size">The size of the data section</param>
            <returns>true means the specified data section is available.</returns>
            <remarks>Required: Yes. Called by Pdfium SDK to check whether the data section is ready.</remarks>
        </member>
        <member name="T:Patagames.Pdf.FX_FILEAVAIL">
            <summary>
            Interface for checking whether the section of the file is available. 
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FX_FILEAVAIL.Version">
            <summary>
            Version number of the interface. Currently must be 1.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.FX_FILEAVAIL.IsDataAvailable">
            <summary>
            User callback function. See <see cref="T:Patagames.Pdf.IsDataAvailableCallback"/> delegate for detail
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="T:Patagames.Pdf.NeedToPauseNowCallback">
            <summary>
            Check if we need to pause a progressive process now.
            </summary>
            <param name="pThis">Pointer to the interface structure itself</param>
            <returns>True for pause now, False for continue.</returns>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="T:Patagames.Pdf.IFSDK_PAUSE">
            <summary>
            IFPDF_RENDERINFO interface. Used for progressive rendering
            </summary>
        </member>
        <member name="F:Patagames.Pdf.IFSDK_PAUSE.Version">
            <summary>
            Version number of the interface. Currently must be 1.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.IFSDK_PAUSE.needToPauseNowCallback">
            <summary>
            UserCallback function. See <see cref="T:Patagames.Pdf.NeedToPauseNowCallback"/> delegate for detail
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="F:Patagames.Pdf.IFSDK_PAUSE.userData">
            <summary>
            A user defined data pointer, used by user's application. Can be NULL.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.IFSDK_PAUSE.#ctor(System.Byte[])">
            <summary>
            Initialize a new instance of the <see cref="T:Patagames.Pdf.IFSDK_PAUSE"/> class using callback function and user data
            </summary>
            <param name="userdata">user data passed to interface</param>
        </member>
        <member name="T:Patagames.Pdf.app_alert_callback">
            <summary>
            pop up a dialog to show warning or hint.
            </summary>
            <param name="pThis">Pointer to the interface structure itself</param>
            <param name="Msg">A string containing the message to be displayed.</param>
            <param name="Title">The title of the dialog.</param>
            <param name="Type">The type of button group. 0-OK(default); 1-OK,Cancel; 2-Yes,NO; 3-Yes, NO, Cancel.</param>
            <param name="Icon">The icon type</param>
            <returns>The return value could be the folowing type: 1-OK; 2-Cancel; 3-NO; 4-Yes;</returns>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="T:Patagames.Pdf.app_beep_callback">
            <summary>
            Causes the system to play a sound. 
            </summary>
            <param name="pThis">Pointer to the interface structure itself</param>
            <param name="nType">The sound type. 0 - Error; 1 - Warning; 2 - Question; 3 - Status; 4 - Default (default value)</param>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="T:Patagames.Pdf.app_response_callback">
            <summary>
            Displays a dialog box containing a question and an entry field for the user to reply to the question.
            </summary>
            <param name="pThis">Pointer to the interface structure itself</param>
            <param name="Question">The question to be posed to the user.</param>
            <param name="Title">The title of the dialog box.</param>
            <param name="Default">A default value for the answer to the question. If not specified, no default value is presented.</param>
            <param name="cLabel">A short string to appear in front of and on the same line as the edit text field.</param>
            <param name="Password">If true, indicates that the user's response should show as asterisks (*) or bullets (?) to mask the response, which might be sensitive information. The default is false.</param>
            <param name="buffer">A string buffer allocated by SDK, to receive the user's response.</param>
            <param name="buflen">The length of the buffer, number of bytes. Currently, It's always be 2048.</param>
            <returns>Number of bytes the complete user input would actually require, not including trailing zeros, regardless of the value of the length parameter or the presence of the response buffer.</returns>
            <remarks>Required: Yes.
            No matter on what platform, the response buffer should be always written using UTF-16LE encoding. If a response buffer is
            present and the size of the user input exceeds the capacity of the buffer as specified by the length parameter, only the
            first "length" bytes of the user input are to be written to the buffer.
            </remarks>
        </member>
        <member name="T:Patagames.Pdf.Doc_getFilePath_callback">
            <summary>
            Get the file path of the current document. 
            </summary>
            <param name="pThis">Pointer to the interface structure itself</param>
            <param name="filePath">The string buffer to receive the file path. Can be NULL.</param>
            <param name="length">The length of the buffer, number of bytes. Can be 0.</param>
            <returns>Number of bytes the filePath consumes, including trailing zeros.</returns>
            <remarks>
            Required: Yes.
            The filePath should be always input in local encoding.
            The return value always indicated number of bytes required for the buffer, even when there is
            no buffer specified, or the buffer size is less then required. In this case, the buffer will not be modified.
            </remarks>
        </member>
        <member name="T:Patagames.Pdf.Doc_mail_callback">
            <summary>
            Mails the data buffer as an attachment to all recipients, with or without user interaction. 
            </summary>
            <param name="pThis">Pointer to the interface structure itself</param>
            <param name="mailData">Pointer to the data buffer to be sent.Can be NULL.</param>
            <param name="length">The size,in bytes, of the buffer pointed by mailData parameter.Can be 0.</param>
            <param name="bUI">If true, the rest of the parameters are used in a compose-new-message window that is displayed to the user. If false, the cTo parameter is required and all others are optional.</param>
            <param name="To">A semicolon-delimited list of recipients for the message.</param>
            <param name="Subject">The subject of the message. The length limit is 64 KB.</param>
            <param name="Cc">A semicolon-delimited list of CC recipients for the message.</param>
            <param name="Bcc">A semicolon-delimited list of BCC recipients for the message.</param>
            <param name="Msg">The content of the message. The length limit is 64 KB.</param>
            <remarks>Required: Yes. If the parameter mailData is NULL or length is 0, the current document will be mailed as an attachment to all recipients.</remarks>
        </member>
        <member name="T:Patagames.Pdf.Doc_print_callback">
            <summary>
            Prints all or a specific number of pages of the document.
            </summary>
            <param name="pThis">Pointer to the interface structure itself.</param>
            <param name="bUI">If true, will cause a UI to be presented to the user to obtain printing information and confirm the action.</param>
            <param name="nStart">A 0-based index that defines the start of an inclusive range of pages.</param>
            <param name="nEnd">A 0-based index that defines the end of an inclusive page range.</param>
            <param name="bSilent">If true, suppresses the cancel dialog box while the document is printing. The default is false.</param>
            <param name="bShrinkToFit">If true, the page is shrunk (if necessary) to fit within the imageable area of the printed page.</param>
            <param name="bPrintAsImage">If true, print pages as an image.</param>
            <param name="bReverse">If true, print from nEnd to nStart.</param>
            <param name="bAnnotations">If true (the default), annotations are printed.</param>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="T:Patagames.Pdf.Doc_submitForm_callback">
            <summary>
            Send the form data to a specified URL.
            </summary>
            <param name="pThis">Pointer to the interface structure itself</param>
            <param name="formData">Pointer to the data buffer to be sent.</param>
            <param name="length">The size,in bytes, of the buffer pointed by formData parameter.</param>
            <param name="Url">The URL to send to.</param>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="T:Patagames.Pdf.Doc_gotoPage_callback">
            <summary>
            Jump to a specified page.
            </summary>
            <param name="pThis">Pointer to the interface structure itself</param>
            <param name="nPageNum">The specified page number, zero for the first page.</param>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="T:Patagames.Pdf.Field_browse_callback">
            <summary>
            Show a file selection dialog, and return the selected file path.
            </summary>
            <param name="pThis">Pointer to the interface structure itself.</param>
            <param name="filePath">Pointer to the data buffer to receive the file path.Can be NULL.</param>
            <param name="length">The length of the buffer, number of bytes. Can be 0.</param>
            <returns>Number of bytes the filePath consumes, including trailing zeros.</returns>
            <remarks>Required: Yes. The filePath shoule be always input in local encoding.</remarks>
        </member>
        <member name="T:Patagames.Pdf.IPDF_JSPLATFORM">
            <summary>
            class that provides functionality of JS PDF forms
            </summary>
        </member>
        <member name="F:Patagames.Pdf.IPDF_JSPLATFORM.Version">
            <summary>
            Version number of the interface. Currently must be 1.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.IPDF_JSPLATFORM.app_alert">
            <summary>
            Application defined callback function. See <see cref="T:Patagames.Pdf.app_alert_callback"/> delegate for detail
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="F:Patagames.Pdf.IPDF_JSPLATFORM.app_beep">
            <summary>
            Application defined callback function. See <see cref="T:Patagames.Pdf.app_beep_callback"/> delegate for detail
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="F:Patagames.Pdf.IPDF_JSPLATFORM.app_response">
            <summary>
            Application defined callback function. See <see cref="T:Patagames.Pdf.app_response_callback"/> delegate for detail
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="F:Patagames.Pdf.IPDF_JSPLATFORM.Doc_getFilePath">
            <summary>
            Application defined callback function. See <see cref="T:Patagames.Pdf.Doc_getFilePath_callback"/> delegate for detail
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="F:Patagames.Pdf.IPDF_JSPLATFORM.Doc_mail">
            <summary>
            Application defined callback function. See <see cref="T:Patagames.Pdf.Doc_mail_callback"/> delegate for detail
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="F:Patagames.Pdf.IPDF_JSPLATFORM.Doc_print">
            <summary>
             Application defined callback function. See <see cref="T:Patagames.Pdf.Doc_print_callback"/> delegate for detail
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="F:Patagames.Pdf.IPDF_JSPLATFORM.Doc_submitForm">
            <summary>
            Application defined callback function. See <see cref="T:Patagames.Pdf.Doc_submitForm_callback"/> delegate for detail
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="F:Patagames.Pdf.IPDF_JSPLATFORM.Doc_gotoPage">
            <summary>
            Application defined callback function. See <see cref="T:Patagames.Pdf.Doc_gotoPage_callback"/> delegate for detail
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="F:Patagames.Pdf.IPDF_JSPLATFORM.Field_browse">
            <summary>
            Application defined callback function. See <see cref="T:Patagames.Pdf.Field_browse_callback"/> delegate for detail
            </summary>
            <remarks>Required: Yes.</remarks>
        </member>
        <member name="F:Patagames.Pdf.IPDF_JSPLATFORM.m_pFormfillinfo">
            <summary>
            pointer to <see cref="T:Patagames.Pdf.FPDF_FORMFILLINFO"/> interface.
            </summary>
        </member>
        <member name="T:Patagames.Pdf.Net.PdfDocument">
            <summary>
            Represents a PDF document.
            </summary>
            <threadsafety>Any public static (Shared in Visual Basic) members of this type are thread safe. Any instance members are not guaranteed to be thread safe.</threadsafety>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfDocument.#ctor(System.IntPtr,Patagames.Pdf.Net.PdfAvailabilityProvider,Patagames.Pdf.Net.PdfCustomLoader)">
            <summary>
            Initializes a new instance of the PdfDocument class.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfDocument.Dispose">
            <summary>
            Releases all resources used by the PdfDocument.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfDocument.Load(System.String,Patagames.Pdf.Net.PdfForms,System.String)">
            <summary>
            Open and load a PDF document from a file.
            </summary>
            <param name="path">Path to the PDF file (including extension)</param>
            <param name="forms">Instance of <see cref="T:Patagames.Pdf.Net.PdfForms"/> class that will be associated with loaded document</param>
            <param name="password">A string used as the password for PDF file. If no password needed, empty or NULL can be used.</param>
            <returns>Instance of PDFDocument class</returns>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.UnknownErrorException">unknown error</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.PdfFileNotFoundException">file not found or could not be opened</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.BadFormatException">file not in PDF format or corrupted</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.InvalidPasswordException">password required or incorrect password</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.UnsupportedSecuritySchemeException">unsupported security scheme</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.PdfiumException">Error occured in PDFium. See ErrorCode for detail</exception>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfDocument.Load(System.Byte[],Patagames.Pdf.Net.PdfForms,System.String)">
            <summary>
            Open and load a PDF document from a memory.
            </summary>
            <param name="content">Pointer to a buffer containing the PDF document</param>
            <param name="forms">Instance of <see cref="T:Patagames.Pdf.Net.PdfForms"/> class that will be associated with loaded document</param>
            <param name="password">A string used as the password for PDF file. If no password needed, empty or NULL can be used.</param>
            <returns>Instance of PDFDocument class</returns>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.UnknownErrorException">Unknown error</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.PdfFileNotFoundException">File not found or could not be opened</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.BadFormatException">File not in PDF format or corrupted</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.InvalidPasswordException">Password required or incorrect password</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.UnsupportedSecuritySchemeException">unsupported security scheme</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.PdfiumException">Error occured in Pdfium. See ErrorCode for detail</exception>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfDocument.Load(System.IO.Stream,Patagames.Pdf.Net.PdfForms,System.String)">
            <summary>
            Loads the PDF document from the specified stream.
            </summary>
            <param name="stream">The stream containing the PDF document to load. The stream must support seeking.</param>
            <param name="forms">Instance of <see cref="T:Patagames.Pdf.Net.PdfForms"/> class that will be associated with loaded document</param>
            <param name="password">A string used as the password for PDF file. If no password needed, empty or NULL can be used.</param>
            <returns>Instance of PDFDocument class</returns>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.UnknownErrorException">unknown error</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.PdfFileNotFoundException">file not found or could not be opened</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.BadFormatException">file not in PDF format or corrupted</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.InvalidPasswordException">password required or incorrect password</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.UnsupportedSecuritySchemeException">unsupported security scheme</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.PdfiumException">Error occured in PDFium. See ErrorCode for detail</exception>
            <remarks><note type="note">The application should maintain the stream resources being valid until the PDF document close.</note></remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfDocument.Load(Patagames.Pdf.Net.PdfCustomLoader)">
            <summary>
            Loads the PDF document from the specified custom descriptor.
            </summary>
            <param name="loader">Custom access descriptor for loading PDF document.</param>
            <returns>Instance of PDFDocument class</returns>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.UnknownErrorException">unknown error</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.PdfFileNotFoundException">file not found or could not be opened</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.BadFormatException">file not in PDF format or corrupted</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.InvalidPasswordException">password required or incorrect password</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.UnsupportedSecuritySchemeException">unsupported security scheme</exception>
            <exception cref="T:Patagames.Pdf.Net.Exceptions.PdfiumException">Error occured in PDFium. See ErrorCode for detail</exception>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfDocument.Save(System.String,Patagames.Pdf.Enums.SaveFlags,System.Int32)">
            <summary>
            Saves a copy of PDF document to the specified file name
            </summary>
            <param name="path">Path to the new PDF file</param>
            <param name="flags">The creating flags.</param>
            <param name="version">The PDF file Version. File Version: 14 for 1.4, 15 for 1.5, ...</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfDocument.Save(System.IO.Stream,Patagames.Pdf.Enums.SaveFlags,System.Int32)">
            <summary>
            Saves a copy of PDF document to the stream
            </summary>
            <param name="stream">The stream to write to.</param>
            <param name="flags">The creating flags.</param>
            <param name="version">The PDF file Version. File Version: 14 for 1.4, 15 for 1.5, ...</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfDocument.Save(Patagames.Pdf.Enums.SaveFlags,System.Int32)">
            <summary>
             Saves the copy of PDF document in custom way.
            </summary>
            <param name="flags">The creating flags.</param>
            <param name="version">The PDF file Version. File Version: 14 for 1.4, 15 for 1.5, ...</param>
            <remarks>Before calling this method the application should be subscribed to the WriteBlock event.
            SDK will fire this event for transmission of the next data block of PDF document.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfDocument.GetMetaText(System.String)">
            <summary>
            Get a text from metadata of the document.
            </summary>
            <param name="tag">The tag for the meta data. Currently, It can be "Title", "Author", "Subject",
            "Keywords", "Creator", "Producer", "CreationDate", or "ModDate". For
            detailed explanation of these tags and their respective values, please refer
            to <a href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf"> PDF Reference 1.6</a>, section 10.2.1, "Document Information Dictionary".
            </param>
            <returns>The text from metadata of the document.</returns>
            <seealso><a href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF Reference 1.7</a></seealso>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfDocument.CreateNew(Patagames.Pdf.Net.PdfForms)">
            <summary>
            Create a new PDF document.
            </summary>
            <returns>A instance of PDFDocument class represented a new PDF document. If failed, null is returned</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfDocument.CopyViewerPreferences(Patagames.Pdf.Net.PdfDocument)">
            <summary>
            Copy the viewer preferences from other PDF document to current.
            </summary>
            <param name="sourceDoc">PDF document with the viewer preferences.</param>
            <returns>True for success, False for failure.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfDocument.GetPageSizeByIndex(System.Int32)">
            <summary>
            Get the size of a page by index.
            </summary>
            <param name="pageIndex">Page index, zero for the first page.</param>
            <returns>True for success. False for error (document or page not found)</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfDocument.DoDocumentAAction(Patagames.Pdf.Enums.DocumentActionTypes)">
            <summary>
            This method is required for performing the document's additional-action.
            </summary>
            <param name="aaType">The type of the additional-actions. See <see cref="T:Patagames.Pdf.Enums.DocumentActionTypes"/> for detail</param>
        </member>
        <member name="E:Patagames.Pdf.Net.PdfDocument.DocumentLoaded">
            <summary>
            Occurs when the document is successfully loaded
            </summary>
        </member>
        <member name="E:Patagames.Pdf.Net.PdfDocument.WriteBlock">
            <summary>
            SDK fire this event for transmission of the next data block of PDF document from <see cref="M:Patagames.Pdf.Net.PdfDocument.Save(Patagames.Pdf.Enums.SaveFlags,System.Int32)"/> method. 
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfDocument.AvailabilityProvider">
            <summary>
            Gets <see cref="T:Patagames.Pdf.Net.PdfAvailabilityProvider"/> object if document was loaded from availability provider.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfDocument.Handle">
            <summary>
            Gets the Pdfium SDK handle that the document is bound to
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfDocument.FormFill">
            <summary>
            Gets a form fill environment object.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfDocument.Pages">
            <summary>
            Gets the collection of Pages found in the PDF document.
            </summary>
            <remarks>Page loaded into memory when you first access to any method or a property of an object and unloaded from memory when calling the Dispose method</remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfDocument.Bookmarks">
            <summary>
            Gets the collection of bookmarks found in the PDF document.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfDocument.NamedDestinations">
            <summary>
            Gets the collection of named destinations found in the PDF document.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfDocument.Title">
            <summary>
            The document’s title. 
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfDocument.Author">
            <summary>
            The name of the person who created the document. 
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfDocument.Subject">
            <summary>
            The subject of the document. 
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfDocument.Keywords">
            <summary>
            Keywords associated with the document. 
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfDocument.Creator">
            <summary>
            If the document was converted to PDF from another format, the name of the application (for example, Adobe FrameMaker®) that created the original document from which it was converted. 
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfDocument.Producer">
            <summary>
            If the document was converted to PDF from another format, the name of the application (for example, Acrobat Distiller) that converted it to PDF. 
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfDocument.CreationDate">
            <summary>
            The date and time the document was created, in human-readable form (see Section 3.8.3, “Dates” in PDF Refernce 1.7). 
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfDocument.ModificationDate">
            <summary>
            The date and time the document was most recently modified, in human-readable form (see Section 3.8.3, “Dates”  in PDF Refernce 1.7). 
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfDocument.Trapped">
            <summary>
            A name object indicating whether the document has been modified to include trapping information (see Section 10.10.5, “Trapping Support” in PDF Reference 1.7).
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfDocument.Version">
            <summary>
            Gets the file version of the specific PDF document. 14 for 1.4, 15 for 1.5, ...
            </summary>
            <remarks>If the document is created by method <see cref="M:Patagames.Pdf.Net.PdfDocument.CreateNew(Patagames.Pdf.Net.PdfForms)"/>, then return value would always zero.</remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfDocument.Permission">
            <summary>
            Gets permission flags. Please refer to <see cref="T:Patagames.Pdf.Enums.PdfUserAccessPermission"/> for detailed description.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfDocument.SecurityRevision">
            <summary>
            Gets the security handler revision number. Please refer to <a href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF Reference</a> for detailed description.
            </summary>
            <seealso><a href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF Reference 1.7</a></seealso>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfDocument.PagesMode">
            <summary>
             Gets the document's PageMode(How the document should be displayed when opened) 
            </summary>
            <returns>The flags for page mode.</returns>
        </member>
        <member name="T:Patagames.Pdf.Pdfium">
            <summary>
            Class with imported from pdfium.dll functions and structures
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_InitLibrary(System.String,System.String)">
            <summary>
            Initialize the Pdfium SDK library
            </summary>
            <param name="licenseKey">Your license kuy oe null for trial</param>
            <param name="specificPath">Path to the pdfium.dll. See remarks sections for detail.</param>
            <remarks>
            <para>You have to call this function before you can call any PDF processing functions.</para>
            <para>In some cases, library initializer can not find pdfim.dll library to download.
            A typical example of this situation is a Web application.
            Web apps is running in a IIS working directory, unlike the classical apps. As a consequence, standard LoadLibrary function can not find the dll during loading process.
            </para>
            <para>In this case, you must explicitly specify the full path to the pdfium.dll file through specificPath parameter in the initialization method.</para>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_DestroyLibrary">
            <summary>
            Release all resources allocated by the Pdfium library
            </summary>
            <remarks>You can call this function to release all memory blocks allocated by the library. After this function called, you should not call any PDF processing functions.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_GetDecryptedKey">
            <summary>
            Initialize the Pdfium SDK library
            </summary>
            <remarks>You have to call this function before you can call any PDF processing functions.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_GetLastError">
            <summary>
            Get last error code when an SDK function failed.
            </summary>
            <returns>A 32-bit integer indicating error codes (defined below).
            0 no error
            1 unknown error
            2 file not found or could not be opened
            3 file not in PDF format or corrupted
            4 password required or incorrect password
            5 unsupported security scheme
            6 page not found or content error
            </returns>
            <remarks>If the previous SDK call succeeded, the return value of this function is not defined. </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFAction_GetFilePath(System.IntPtr)">
            <summary>
            Get file path of an remote goto action
            </summary>
            <param name="action">Handle to the action. Must be a RMEOTEGOTO or LAUNCH action.
            Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFBookmark_GetAction(System.IntPtr)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFLink_GetAction(System.IntPtr)"/> function.</param>
            <returns>Return file path of an remote goto action </returns>
            <remarks>This method is obsolete and will be removed in a future release of the Pdfium .Net SDK</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFText_GetFont(System.IntPtr,System.Int32)">
            <summary>
            Get font of a particular character
            </summary>
            <param name="text_page">Handle to a text page information structure. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFText_LoadPage(System.IntPtr)"/> function.</param>
            <param name="index">Zero-based index of the character</param>
            <returns>A handle to the font used by the particular character. This handle can be used in 
            FPDFFont_xxx functions for more information about the font</returns>
            <remarks>This method is obsolete and will be removed in a future release of the Pdfium .Net SDK</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObj_NewTextObj">
            <summary>
            Create a new Text Object.
            </summary>
            <returns>Handle of text object.</returns>
            <remarks>This method is obsolete and will be removed in a future release of the Pdfium .Net SDK</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObj_NewTextObjEx(System.String,System.Int32,System.IntPtr)">
            <summary>
            Create a new Text Object.
            </summary>
            <param name="text">Pointer to a string. The text you want to add in a text object.</param>
            <param name="size">The length of the string</param>
            <param name="font">Handle to the font. It could be FPDFTextObj_GetFont, FPDFFont_AddTrueType 
            and FPDFFont_AddStandardFont".</param>
            <returns>Handle of text object.</returns>
            <remarks>This method is obsolete and will be removed in a future release of the Pdfium .Net SDK</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObj_NewPathObj">
            <summary>
            Create a new path Object.
            </summary>
            <returns>Handle of path object.</returns>
            <remarks>This method is obsolete and will be removed in a future release of the Pdfium .Net SDK</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_AllocMemory(System.UInt32)">
            <summary>
            Allocated memory block in FPDFSDK. This memory can be freed by <see cref="M:Patagames.Pdf.Pdfium.FPDF_FreeMemory(System.IntPtr)"/> function.
            </summary>
            <param name="size">Byte size of requested memory block. Can not be zero.</param>
            <returns>The allocated pointer. IntPtr.Zero if memory not available.</returns>
            <remarks>
            <para>This method is obsolete and will be removed in a future release of the Pdfium .Net SDK</para>
            Some FPDFSDK interface may require application to allocate memory for internal use of
            FPDFSDK. In this case application must call this function to allocate memory, don't use
            malloc() or other memory allocator. If an error handler installed and exception/long jump is
            used in the out of memory handling, this function might never return if no memory available.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_FreeMemory(System.IntPtr)">
            <summary>
            Free a memory area allocated by Pdfium SDK.
            </summary>
            <param name="handle">The pointer. Should not be IntPtr.Zero.</param>
            <returns>The allocated pointer. IntPtr.Zero if memory not available.</returns>
            <remarks>
            <para>This method is obsolete and will be removed in a future release of the Pdfium .Net SDK</para>
            In case FPDFSDK allocated some memory for user application, the user application must free
            it to avoid memory leakage. And the application must call FPDF_FreeMemory function to do
            that. Do NOT use c/c++ memory free() function or other similar functions.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFDoc_GetPageMode(System.IntPtr)">
            <summary>
             Get the document's PageMode(How the document should be displayed when opened) 
            </summary>
            <param name="document">Handle to document. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadDocument(System.String,System.String)"/> function.</param>
            <returns>The flags for page mode.</returns>
            <example><code>
            public void FPDFDoc_GetPageMode()
            {
            	IntPtr doc = Pdfium.FPDF_LoadDocument(@"Files\test001.pdf");
            	var mode = Pdfium.FPDFDoc_GetPageMode(doc);
            	Pdfium.FPDF_CloseDocument(doc);		
            }
            </code>
            </example>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FSDK_SetUnSpObjProcessHandler(Patagames.Pdf.UNSUPPORT_INFO)">
            <summary>
            Setup A UnSupport Object process handler for Pdfium sdk. 
            </summary>
            <param name="unsp_info">Pointer to a UNSUPPORT_INFO structure.</param>
            <returns>True for success or False if any error occurs.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPage_Flatten(System.IntPtr,Patagames.Pdf.Enums.FlattenFlags)">
             <summary>
             Flat a pdf page, annotations or form fields will become part of the page contents.
             </summary>
             <param name="page">Handle to the page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/>function.</param>
             <param name="flag">the flag for the use of flatten result. Zero for normal display, 1 for print.</param>
             <returns>The result flag of the function, See flags above ( FLATTEN_FAIL, FLATTEN_SUCCESS, FLATTEN_NOTHINGTODO ).</returns>
             <remarks>Current Version on all fails return zero.</remarks>
             <example><code>
             public void FPDFPage_Flatten()
             {
             	IntPtr doc = Pdfium.FPDF_LoadDocument(@"Files\test001.pdf");
             	IntPtr page = Pdfium.FPDF_LoadPage(doc, 0);
            
             	var ret = Pdfium.FPDFPage_Flatten(page, FlattenFlags.FlatPrint);
             	if (ret != FlattenResults.Success)
            			throw new Exception();
            
             	ret = Pdfium.FPDFPage_Flatten(page, FlattenFlags.NormalDisplay);
             	if (ret != FlattenResults.NothingTodo)
             		throw new Exception();
             
             	Pdfium.FPDF_ClosePage(page);
             	Pdfium.FPDF_CloseDocument(doc);
             }
             </code></example>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_RenderPageBitmap_Start(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,Patagames.Pdf.Enums.PageRotate,Patagames.Pdf.Enums.RenderFlags,Patagames.Pdf.IFSDK_PAUSE)">
             <summary>
             Start to render page contents to a device independent bitmap progressively.
             </summary>
             <param name="bitmap">Handle to the device independent bitmap (as the output buffer). Bitmap handle can be created by <see cref="M:Patagames.Pdf.Pdfium.FPDFBitmap_Create(System.Int32,System.Int32,System.Boolean)"/> function.</param>
             <param name="page">Handle to the page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> function</param>
             <param name="start_x">Left pixel position of the display area in the bitmap coordinate.</param>
             <param name="start_y">Top pixel position of the display area in the bitmap coordinate.</param>
             <param name="size_x">Horizontal size (in pixels) for displaying the page.</param>
             <param name="size_y">Vertical size (in pixels) for displaying the page.</param>
             <param name="rotate">Page orientation: 0 (normal), 1 (rotated 90 degrees clockwise), 2 (rotated 180 degrees), 3 (rotated 90 degrees counter-clockwise).</param>
             <param name="flag">0 for normal display, or combination of flags defined above.</param>
             <param name="pause">The <see cref="T:Patagames.Pdf.IFSDK_PAUSE"/> interface.A callback mechanism allowing the page rendering process</param>
             <returns>Rendering Status. See flags for progressive process status for the details.</returns>
             <example><code>
             public void ProgressiveRenderPage()
             {
             	IntPtr doc = Pdfium.FPDF_LoadDocument(@"Files\test001.pdf");
             	IntPtr page = Pdfium.FPDF_LoadPage(doc, 0);
             
             	double width, height;
             	Pdfium.FPDF_GetPageSizeByIndex(doc, 0, out width, out height);
             	IntPtr bitmap = Pdfium.FPDFBitmap_Create((int)width, (int)height, true);
             
             	bool needPause = true;
            
             	IFSDK_PAUSE pause = new IFSDK_PAUSE();
             	pause.needToPauseNowCallback = (pthis) =&gt;
             	{
             		return needPause;
             	};
             
             	var ret = Pdfium.FPDF_RenderPageBitmap_Start(bitmap, page, 0, 0, (int)width, (int)height, PageRotate.Normal, RenderFlags.None, pause);
             	if (ret == ProgressiveRenderingStatuses.RenderFailed)
             		throw new Exception();
             	else if (ret == ProgressiveRenderingStatuses.RenderTobeContinued)
             	{
             		needPause = false;
             		ret = Pdfium.FPDF_RenderPage_Continue(page, pause);
             	}
             
             	if (ret == ProgressiveRenderingStatuses.RenderDone)
             		Pdfium.FPDF_RenderPage_Close(page);
             	else
             		throw new Exception();
             		
             	IntPtr buffer = Pdfium.FPDFBitmap_GetBuffer(bitmap);
             	int stride = Pdfium.FPDFBitmap_GetStride(bitmap);
             	using (System.Drawing.Bitmap bmp = new System.Drawing.Bitmap((int)width, (int)height, stride, System.Drawing.Imaging.PixelFormat.Format32bppArgb, buffer))
             	{
             		bmp.Save("FPDF_RenderPage_Continue.png", System.Drawing.Imaging.ImageFormat.Png);
             	}
              
             	Pdfium.FPDFBitmap_Destroy(bitmap);
             	Pdfium.FPDF_ClosePage(page);
             	Pdfium.FPDF_CloseDocument(doc);
             }
             </code></example>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_RenderPage_Continue(System.IntPtr,Patagames.Pdf.IFSDK_PAUSE)">
            <summary>
            Continue rendering a PDF page.
            </summary>
            <param name="page">Handle to the page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> function.</param>
            <param name="pause">The <see cref="T:Patagames.Pdf.IFSDK_PAUSE"/> interface.A callback mechanism allowing the page rendering 
            process to be paused before it's finished. This can be NULL if you don't want to pause.</param>
            <returns>The rendering status. See flags for progressive process status for the details.</returns>
            <remarks>
            In Version 2236 of Pdfium this method is always returns RenderFailed if pause is NULL
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_RenderPage_Close(System.IntPtr)">
            <summary>
            Release the resource allocate during page rendering. Need to be called after finishing rendering or cancel the rendering.
            </summary>
            <param name="page">Handle to the page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> function.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFText_GetCharIndexFromTextIndex(System.IntPtr,System.Int32)">
            <summary>
            Get the actually char index in text_page's internal char list.
            </summary>
            <param name="text_page">Handle to a text page information structure. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFText_LoadPage(System.IntPtr)"/> function.</param>
            <param name="index">The index of the text in the string get from <see cref="M:Patagames.Pdf.Pdfium.FPDFText_GetText(System.IntPtr,System.Int32,System.Int32)"/></param>
            <returns>The index of the character in internal charlist. -1 for error</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPage_SetMediaBox(System.IntPtr,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Set "MediaBox" entry to the page dictionary.
            </summary>
            <param name="page">Handle to a page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> function.</param>
            <param name="left">The left of the rectangle.</param>
            <param name="bottom">The bottom of the rectangle.</param>
            <param name="right">The right of the rectangle.</param>
            <param name="top">The top of the rectangle.</param>
            <remarks>The media box defines the boundaries of the physical medium on which the
            page is to be printed. It may include any extended area surrounding the
            finished page for bleed, printing marks, or other such purposes. It may also 
            <a href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF reference 1.7.pdf</a> SECTION 10.10 Prepress Support 963
            include areas close to the edges of the medium that cannot be marked because
            of physical limitations of the output device. Content falling outside this boundary
            can safely be discarded without affecting the meaning of the PDF file.</remarks>
            <seealso><a href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF Reference 1.7</a></seealso>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPage_SetCropBox(System.IntPtr,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Set "CropBox" entry to the page dictionary.	
            </summary>
            <param name="page">Handle to a page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> function</param>
            <param name="left">The left of the rectangle.</param>
            <param name="bottom">The bottom of the rectangle.</param>
            <param name="right">The right of the rectangle.</param>
            <param name="top">The top of the rectangle.</param>
            <remarks>The crop box defines the region to which the contents of the page are to be
            clipped (cropped) when displayed or printed. Unlike the other boxes, the crop
            box has no defined meaning in terms of physical page geometry or intended
            use; it merely imposes clipping on the page contents. However, in the absence
            of additional information (such as imposition instructions specified in a JDF or
            PJTF job ticket), the crop box determines how the page’s contents are to be positioned
            on the output medium. The default value is the page’s media box. 
            See <a href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF reference 1.7.pdf</a> for more details
            </remarks>
            <seealso><a href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF Reference 1.7</a></seealso>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPage_GetMediaBox(System.IntPtr,System.Single@,System.Single@,System.Single@,System.Single@)">
            <summary>
            Get "MediaBox" entry from the page dictionary.	
            </summary>
            <param name="page">Handle to a page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> function</param>
            <param name="left">Pointer to a double value receiving the left of the rectangle.</param>
            <param name="bottom">Pointer to a double value receiving the bottom of the rectangle.</param>
            <param name="right">Pointer to a double value receiving the right of the rectangle.</param>
            <param name="top">Pointer to a double value receiving the top of the rectangle.</param>
            <returns>True if success, else False</returns>
            <remarks>The media box defines the boundaries of the physical medium on which the
            page is to be printed. It may include any extended area surrounding the
            finished page for bleed, printing marks, or other such purposes. It may also 
            include areas close to the edges of the medium that cannot be marked because
            of physical limitations of the output device. Content falling outside this boundary
            can safely be discarded without affecting the meaning of the PDF file.</remarks>
            <seealso><a href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF Reference 1.7 SECTION 10.10 Prepress Support 963</a></seealso>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPage_GetCropBox(System.IntPtr,System.Single@,System.Single@,System.Single@,System.Single@)">
            <summary>
            Get "CropBox" entry from the page dictionary.		
            </summary>
            <param name="page">Handle to a page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> function</param>
            <param name="left">Pointer to a double value receiving the left of the rectangle.</param>
            <param name="bottom">Pointer to a double value receiving the bottom of the rectangle.</param>
            <param name="right">Pointer to a double value receiving the right of the rectangle.</param>
            <param name="top">Pointer to a double value receiving the top of the rectangle.</param>
            <returns>True if success,else False</returns>
            <remarks>The crop box defines the region to which the contents of the page are to be
            clipped (cropped) when displayed or printed. Unlike the other boxes, the crop
            box has no defined meaning in terms of physical page geometry or intended
            use; it merely imposes clipping on the page contents. However, in the absence
            of additional information (such as imposition instructions specified in a JDF or
            PJTF job ticket), the crop box determines how the page’s contents are to be positioned
            on the output medium. The default value is the page’s media box. 
            See <a href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF reference 1.7.pdf</a> for more details
            </remarks>
            <seealso><a href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF Reference 1.7</a></seealso>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPage_TransFormWithClip(System.IntPtr,Patagames.Pdf.FS_MATRIX@,Patagames.Pdf.FS_RECTF@)">
            <summary>
            Transform the whole page with a specified matrix, then clip the page content region.
            </summary>
            <param name="page">A page handle. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> function</param>
            <param name="matrix">The transform matrix</param>
            <param name="clip_rect">A rectangle page area to be clipped</param>
            <returns>True if success,else false</returns>
            <remarks>This function will transform the whole page, and would take effect to all the objects in the page.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObj_TransformClipPath(System.IntPtr,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Transform (scale, rotate, shear, move) the clip path of page object.
            </summary>
            <param name="page_object">page_object - Handle to a page object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_NewImgeObj(System.IntPtr)"/> function.</param>
            <param name="a">The coefficient "a" of the matrix</param>
            <param name="b">The coefficient "b" of the matrix</param>
            <param name="c">The coefficient "c" of the matrix</param>
            <param name="d">The coefficient "d" of the matrix</param>
            <param name="e">The coefficient "e" of the matrix</param>
            <param name="f">The coefficient "f" of the matrix</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_CreateClipPath(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Create a new clip path, with a rectangle inserted.
            </summary>
            <param name="left">The left of the clip box.</param>
            <param name="bottom">The bottom of the clip box.</param>
            <param name="right">The right of the clip box.</param>
            <param name="top">The top of the clip box.</param>
            <returns>a handle to the clip path.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_DestroyClipPath(System.IntPtr)">
            <summary>
            Destroy the clip path.
            </summary>
            <param name="clip_path">A handle to the clip path. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_CreateClipPath(System.Single,System.Single,System.Single,System.Single)"/> function.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPage_InsertClipPath(System.IntPtr,System.IntPtr)">
            <summary>
            Clip the page content, the page content that outside the clipping region become invisible.
            </summary>
            <param name="page">A page handle. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> function</param>
            <param name="clip_path">A handle to the clip path.  Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_CreateClipPath(System.Single,System.Single,System.Single,System.Single)"/> function.</param>
            <remarks>A clip path will be inserted before the page content stream or content array. 
            In this way, the page content will be clipped by this clip path.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFBookmark_GetFirstChild(System.IntPtr,System.IntPtr)">
            <summary>
            Get first child of a bookmark item, or first top level bookmark item.
            </summary>
            <param name="document">Handle to the document. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadDocument(System.String,System.String)"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadMemDocument(System.Byte[],System.Int32,System.String)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadCustomDocument(Patagames.Pdf.FPDF_FILEACCESS,System.String)"/> functions.</param>
            <param name="bookmark">Handle to the current bookmark. Can be IntPtr.Zero if you want to get the first top level item.</param>
            <returns>Handle to the first child or top level bookmark item. IntPtr.Zero if no child or top level bookmark found</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFBookmark_GetNextSibling(System.IntPtr,System.IntPtr)">
            <summary>
            Get next bookmark item on the same level.
            </summary>
            <param name="document">Handle to the document. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadDocument(System.String,System.String)"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadMemDocument(System.Byte[],System.Int32,System.String)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadCustomDocument(Patagames.Pdf.FPDF_FILEACCESS,System.String)"/> functions.</param>
            <param name="bookmark">Handle to the current bookmark. Cannot be IntPtr.Zero</param>
            <returns>Handle to the next bookmark item on the same level. IntPtr.Zero if this is the last bookmark on this level.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFBookmark_Find(System.IntPtr,System.String)">
            <summary>
            Find a bookmark in the document, using the bookmark title
            </summary>
            <param name="document">Handle to the document. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadDocument(System.String,System.String)"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadMemDocument(System.Byte[],System.Int32,System.String)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadCustomDocument(Patagames.Pdf.FPDF_FILEACCESS,System.String)"/> functions</param>
            <param name="title">The string for the bookmark title to be searched. Can't be NULL.</param>
            <returns>Handle to the found bookmark item. IntPtr.Zero if the title can't be found.</returns>
            <remarks>It always returns the first found bookmark if more than one bookmarks have the same title. </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFBookmark_GetTitle(System.IntPtr)">
            <summary>
            Get title of a bookmark
            </summary>
            <param name="bookmark">Handle to the bookmark.</param>
            <returns> return title of a bookmark</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFBookmark_GetAction(System.IntPtr)">
            <summary>
            Get the action associated with a bookmark item
            </summary>
            <param name="bookmark">Handle to the bookmark</param>
            <returns>Handle to the action data. IntPtr.Zero if no action is associated with this bookmark.
            In this case, the application should try <see cref="M:Patagames.Pdf.Pdfium.FPDFBookmark_GetDest(System.IntPtr,System.IntPtr)"/></returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFBookmark_GetDest(System.IntPtr,System.IntPtr)">
            <summary>
            Get the destination associated with a bookmark item
            </summary>
            <param name="document">Handle to the document. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadDocument(System.String,System.String)"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadMemDocument(System.Byte[],System.Int32,System.String)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadCustomDocument(Patagames.Pdf.FPDF_FILEACCESS,System.String)"/></param>
            <param name="bookmark">Handle to the bookmark</param>
            <returns>Handle to the destination data. IntPtr.Zero if no destination is associated with this bookmark</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFAction_GetType(System.IntPtr)">
            <summary>
            Get type of an action
            </summary>
            <param name="action">Handle to the action </param>
            <returns>
            A type number as defined below
            0 - Unsupported action type. 
            1 - Go to a destination within current document. 
            2 - Go to a destination within another document.
            3 - Universal Resource Identifier, including web pages and other Internet based resources. 
            4 - Launch an application or open a file. 
            </returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFAction_GetDest(System.IntPtr,System.IntPtr)">
            <summary>
            Get destination of an action
            </summary>
            <param name="document">Handle to the document. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadDocument(System.String,System.String)"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadMemDocument(System.Byte[],System.Int32,System.String)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadCustomDocument(Patagames.Pdf.FPDF_FILEACCESS,System.String)"/> functions.</param>
            <param name="action">Handle to the action. It must be a GOTO or REMOTEGOTO action</param>
            <returns>Handle to the destination data</returns>
            <remarks>In case of remote goto action, the application should first use <see cref="M:Patagames.Pdf.Pdfium.FPDFAction_GetFilePath(System.IntPtr)"/> 
            to get file path, then load that particular document, and use its document handle to call this function</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFAction_GetURIPath(System.IntPtr,System.IntPtr)">
            <summary>
            Get URI path of a URI action 
            </summary>
            <param name="document">Handle to the document. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadDocument(System.String,System.String)"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadMemDocument(System.Byte[],System.Int32,System.String)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadCustomDocument(Patagames.Pdf.FPDF_FILEACCESS,System.String)"/> functions.</param>
            <param name="action">Handle to the action. Must be a URI action </param>
            URI path of a URI action
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFDest_GetPageIndex(System.IntPtr,System.IntPtr)">
            <summary>
            Get page index of a destination 
            </summary>
            <param name="document">Handle to the document. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadDocument(System.String,System.String)"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadMemDocument(System.Byte[],System.Int32,System.String)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadCustomDocument(Patagames.Pdf.FPDF_FILEACCESS,System.String)"/> functions.</param>
            <param name="destination">Handle to the destination. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFAction_GetDest(System.IntPtr,System.IntPtr)"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDFBookmark_GetDest(System.IntPtr,System.IntPtr)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFLink_GetDest(System.IntPtr,System.IntPtr)"/> functions.</param>
            <returns>The page index. Starting from 0 for the first page</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFLink_GetLinkAtPoint(System.IntPtr,System.Double,System.Double)">
            <summary>
            Find a link at specified point on a document page
            </summary>
            <param name="page">Handle to the document page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> function</param>
            <param name="x">The x coordinate of the point, specified in page coordinate system</param>
            <param name="y">The y coordinate of the point, specified in page coordinate system</param>
            <returns>Handle to the link. IntPtr.Zero if there’s no link at that point.</returns>
            <remarks>The point coordinate are specified in page coordinate system. 
            You can convert coordinate from screen system to page system using <see cref="M:Patagames.Pdf.Pdfium.FPDF_DeviceToPage(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,Patagames.Pdf.Enums.PageRotate,System.Int32,System.Int32,System.Double@,System.Double@)"/> function</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFLink_GetDest(System.IntPtr,System.IntPtr)">
            <summary>
            Get destination info of a link.
            </summary>
            <param name="page">Handle to the document. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> function.</param>
            <param name="link">Handle to the link. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFLink_GetLinkAtPoint(System.IntPtr,System.Double,System.Double)"/> function</param>
            <returns>Handle to the destination. IntPtr.Zero if there is no destination associated with the link, 
            in this case the application should try <see cref="M:Patagames.Pdf.Pdfium.FPDFLink_GetAction(System.IntPtr)"/> </returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFLink_GetAction(System.IntPtr)">
            <summary>
            Get action info of a link
            </summary>
            <param name="link">Handle to the link. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFLink_GetLinkAtPoint(System.IntPtr,System.Double,System.Double)"/></param>
            <returns>Handle to the action. IntPtr.Zero if there is no action associated with the link.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFLink_Enumerate(System.IntPtr,System.Int32@,System.IntPtr@)">
            <summary>
            This function would enumerate all the link annotations in a single PDF page.
            </summary>
            <param name="page">Handle to the page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> function</param>
            <param name="start_pos">The start position to enumerate the link annotations, which should be specified to start 
            from -	0 for the first call, and would receive the next position for enumerating to start from.</param>
            <param name="link_annot">Receive the link handle</param>
            <returns>TRUE if succceed, else False;</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFLink_GetAnnotRect(System.IntPtr,Patagames.Pdf.FS_RECTF@)">
            <summary>
            Get the annotation rectangle. (Specified by the Ў°RectЎ± entry of annotation dictionary).
            </summary>
            <param name="link_annot">Handle to the link annotation.</param>
            <param name="rect">The annotation rect.</param>
            <returns>TRUE if succceed, else False;</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFLink_CountQuadPoints(System.IntPtr)">
            <summary>
            Get the count of quadrilateral points to the link annotation
            </summary>
            <param name="link_annot">Handle to the link annotation received by <see cref="M:Patagames.Pdf.Pdfium.FPDFLink_Enumerate(System.IntPtr,System.Int32@,System.IntPtr@)"/> function.</param>
            <returns>The count of quadrilateral points.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFLink_GetQuadPoints(System.IntPtr,System.Int32,Patagames.Pdf.FS_QUADPOINTSF@)">
            <summary>
            Get the quadrilateral points for the specified index in the link annotation.
            </summary>
            <param name="link_annot">Handle to the link annotation received by <see cref="M:Patagames.Pdf.Pdfium.FPDFLink_Enumerate(System.IntPtr,System.Int32@,System.IntPtr@)"/> function.</param>
            <param name="quadIndex">The specified quad points index</param>
            <param name="quadPoints">Receive the quadrilateral points</param>
            <returns>True if succeed, else False</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_GetMetaText(System.IntPtr,Patagames.Pdf.Enums.DocumentTags)">
            <summary>
            Get a text from metadata of the document.
            </summary>
            <param name="document">A document handle. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadDocument(System.String,System.String)"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadMemDocument(System.Byte[],System.Int32,System.String)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadCustomDocument(Patagames.Pdf.FPDF_FILEACCESS,System.String)"/> functions.</param>
            <param name="tag">The tag for the meta data. Currently, It can be "Title", "Author", "Subject",
            "Keywords", "Creator", "Producer", "CreationDate", or "ModDate". For
            detailed explanation of these tags and their respective values, please refer
            to <a href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF Reference 1.6</a>, section 10.2.1, "Document Information Dictionary".
            </param>
            <returns>The text from metadata of the document.</returns>
            <overloads>Get a text from metadata of the document.</overloads>
            <seealso><a href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF Reference 1.7</a></seealso>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_GetMetaText(System.IntPtr,System.String)">
            <summary>
            Get a text from metadata of the document. 
            </summary>
            <param name="document">A document handle. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadDocument(System.String,System.String)"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadMemDocument(System.Byte[],System.Int32,System.String)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadCustomDocument(Patagames.Pdf.FPDF_FILEACCESS,System.String)"/> functions.</param>
            <param name="tag">The tag for the meta data. Currently, It can be "Title", "Author", "Subject",
            "Keywords", "Creator", "Producer", "CreationDate", or "ModDate". For
            detailed explanation of these tags and their respective values, please refer
            to <a href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf"> PDF Reference 1.6</a>, section 10.2.1, "Document Information Dictionary".
            </param>
            <returns>The text from metadata of the document.</returns>
            <seealso><a href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF Reference 1.7</a></seealso>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_CreateNewDocument">
            <summary>
            Create a new PDF document.
            </summary>
            <returns>A handle to a document. If failed, IntPtr.Zero is returned</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPage_New(System.IntPtr,System.Int32,System.Double,System.Double)">
            <summary>
            Construct an empty page
            </summary>
            <param name="document">Handle to document. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadDocument(System.String,System.String)"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadMemDocument(System.Byte[],System.Int32,System.String)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadCustomDocument(Patagames.Pdf.FPDF_FILEACCESS,System.String)"/> functions.</param>
            <param name="page_index">The index of a page</param>
            <param name="width">The page width</param>
            <param name="height">The page height.</param>
            <returns>The handle to a page. IntPtr.Zero if any error occurs.</returns>
            <remarks>Loaded page can be deleted by <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_Delete(System.IntPtr,System.Int32)"/> functions</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPage_Delete(System.IntPtr,System.Int32)">
            <summary>
            Delete a PDF page.
            </summary>
            <param name="document">Handle to document. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadDocument(System.String,System.String)"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadMemDocument(System.Byte[],System.Int32,System.String)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadCustomDocument(Patagames.Pdf.FPDF_FILEACCESS,System.String)"/>.</param>
            <param name="page_index">The index of a page.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPage_GetRotation(System.IntPtr)">
            <summary>
            Get the page rotation. One of following values will be returned：0(0), 1(90), 2(180), 3(270).
            </summary>
            <param name="page">Handle to a page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_New(System.IntPtr,System.Int32,System.Double,System.Double)"/>.</param>
            <returns>The PDF page rotation</returns>
            <remarks>The PDF page rotates clockwise.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPage_SetRotation(System.IntPtr,Patagames.Pdf.Enums.PageRotate)">
            <summary>
            Set page rotation. One of following values will be set: 0(0), 1(90), 2(180), 3(270).
            </summary>
            <param name="page">Handle to a page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_New(System.IntPtr,System.Int32,System.Double,System.Double)"/>.</param>
            <param name="rotate">The value of the PDF page rotation</param>
            <remarks>The PDF page rotates clockwise. When it’s done, the content in this pagewill be changed. 
            You must call the <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> to reload the page</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPage_InsertObject(System.IntPtr,System.IntPtr)">
            <summary>
            Insert an object to the page. The page object is automatically freed.
            </summary>
            <param name="page">Handle to a page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_New(System.IntPtr,System.Int32,System.Double,System.Double)"/>.</param>
            <param name="page_object">Handle to a page object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_NewTextObj"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_NewTextObjEx(System.String,System.Int32,System.IntPtr)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_NewPathObj"/>.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPage_CountObject(System.IntPtr)">
            <summary>
            Get number of page objects inside the page
            </summary>
            <param name="page">Handle to a page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_New(System.IntPtr,System.Int32,System.Double,System.Double)"/>.</param>
            <returns>The number of the page object.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPage_GetObject(System.IntPtr,System.Int32)">
            <summary>
            Get page object by index
            </summary>
            <param name="page">Handle to a page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_New(System.IntPtr,System.Int32,System.Double,System.Double)"/>.</param>
            <param name="index">The index of a page object.</param>
            <returns>The handle of the page object. IntPtr.Zero for failed</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPage_HasTransparency(System.IntPtr)">
            <summary>
            Check that whether the content of specified PDF page contains transparency.
            </summary>
            <param name="page">Handle to a page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_New(System.IntPtr,System.Int32,System.Double,System.Double)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/>.</param>
            <returns>TRUE means that the PDF page does contains transparency. Otherwise, returns FALSE</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPage_GenerateContent(System.IntPtr)">
            <summary>
            Generate PDF Page content. 
            </summary>
            <param name="page">Handle to a page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_New(System.IntPtr,System.Int32,System.Double,System.Double)"/></param>
            <returns>True if successful, false otherwise.</returns>
            <remarks>Before you save the page to a file, or reload the page, you must call the <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_GenerateContent(System.IntPtr)"/> function. Or the changed information will be lost.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObj_HasTransparency(System.IntPtr)">
            <summary>
            Check that whether the specified PDF page object contains transparency.
            </summary>
            <param name="page_object">Handle to a page object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_NewTextObj"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_NewTextObjEx(System.String,System.Int32,System.IntPtr)"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_NewPathObj"/> and etc.</param>
            <returns>TRUE means that the PDF page object does contains transparency. Otherwise, returns FALSE.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObj_Transform(System.IntPtr,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Transform (scale, rotate, shear, move) page object.
            </summary>
            <param name="page_object">Handle to a page object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_NewTextObj"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_NewTextObjEx(System.String,System.Int32,System.IntPtr)"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_NewPathObj"/> and etc.</param>
            <param name="a">The coefficient "a" of the matrix</param>
            <param name="b">The coefficient "b" of the matrix</param>
            <param name="c">The coefficient "c" of the matrix</param>
            <param name="d">The coefficient "d" of the matrix</param>
            <param name="e">The coefficient "e" of the matrix</param>
            <param name="f">The coefficient "f" of the matrix</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPage_TransformAnnots(System.IntPtr,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Transform (scale, rotate, shear, move) all annots in a page.
            </summary>
            <param name="page">Handle to a page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_New(System.IntPtr,System.Int32,System.Double,System.Double)"/> and others</param>
            <param name="a">The coefficient "a" of the matrix</param>
            <param name="b">The coefficient "b" of the matrix</param>
            <param name="c">The coefficient "c" of the matrix</param>
            <param name="d">The coefficient "d" of the matrix</param>
            <param name="e">The coefficient "e" of the matrix</param>
            <param name="f">The coefficient "f" of the matrix</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObj_NewImgeObj(System.IntPtr)">
            <summary>
            Create a new Image Object.
            </summary>
            <param name="document">Handle to document. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadDocument(System.String,System.String)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDF_CreateNewDocument"/> function.</param>
            <returns>Handle of image object</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFImageObj_SetMatrix(System.IntPtr,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Set the matrix of an image object
            </summary>
            <param name="image_object">Handle of image object returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_NewImgeObj(System.IntPtr)"/>.</param>
            <param name="a">The coefficient "a" of the matrix</param>
            <param name="b">The coefficient "b" of the matrix</param>
            <param name="c">The coefficient "c" of the matrix</param>
            <param name="d">The coefficient "d" of the matrix</param>
            <param name="e">The coefficient "e" of the matrix</param>
            <param name="f">The coefficient "f" of the matrix</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFImageObj_LoadJpegFile(System.IntPtr,System.Int32,System.IntPtr,Patagames.Pdf.FPDF_FILEACCESS)">
            <summary>
            Load Image from a JPEG image file and then set it to an image object.
            </summary>
            <param name="pages">Pointers to the start of all loaded pages, could be IntPtr.Zero.</param>
            <param name="nCount">Number of pages, could be 0.</param>
            <param name="image_object">Handle of image object returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_NewImgeObj(System.IntPtr)"/>.</param>
            <param name="fileAccess">The custom file access handler, which specifies the JPEG image file.</param>
            <returns>Jpeg file handle if successful, IntPtr.Zero otherwise.</returns>
            <remarks>The image object might already has an associated image, which is shared and cached by the loaded pages, In this case, we need to clear the cache of image for all the loaded pages. 
            Pass pages and count to this API to clear the image cache. The image must be destroyed by calling <see cref="M:Patagames.Pdf.Pdfium.FPDFImageObj_DestroyJpegFile(System.IntPtr)"/></remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFImageObj_DestroyJpegFile(System.IntPtr)">
            <summary>
            Destroy an jpeg image object and release all related buffers 
            </summary>
            <param name="jpegHandle">Handle to the jpeg. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFImageObj_LoadJpegFile(System.IntPtr,System.Int32,System.IntPtr,Patagames.Pdf.FPDF_FILEACCESS)"/> function.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFImageObj_SetBitmap(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
            <summary>
            Set the bitmap to an image object.
            </summary>
            <param name="pages">Pointer's to the start of all loaded pages.</param>
            <param name="nCount">Number of pages.</param>
            <param name="image_object">Handle of image object returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_NewImgeObj(System.IntPtr)"/>.</param>
            <param name="bitmap">The handle of the bitmap which you want to set it to the image object.</param>
            <returns>TRUE if successful, FALSE otherwise.</returns>
            <remarks>See remarks of <see cref="M:Patagames.Pdf.Pdfium.FPDFImageObj_LoadJpegFile(System.IntPtr,System.Int32,System.IntPtr,Patagames.Pdf.FPDF_FILEACCESS)"/> function for details.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_ImportPages(System.IntPtr,System.IntPtr,System.String,System.Int32)">
            <summary>
            Import some pages to a PDF document.
            </summary>
            <param name="dest_doc">The destination document which add the pages.</param>
            <param name="src_doc">A document to be imported.</param>
            <param name="pagerange">A page range string, Such as "1,3,5-7". If this parameter is NULL, it would import all pages in src_doc.</param>
            <param name="index">The page index wanted to insert from.</param>
            <returns>TRUE for succeed, FALSE for Failed.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_CopyViewerPreferences(System.IntPtr,System.IntPtr)">
            <summary>
            Copy the viewer preferences from one PDF document to another
            </summary>
            <param name="dest_doc">Handle to document to write the viewer preferences to.</param>
            <param name="src_doc">Handle to document with the viewer preferences.</param>
            <returns>TRUE for success, FALSE for failure.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_SaveAsCopy(System.IntPtr,Patagames.Pdf.FPDF_FILEWRITE,Patagames.Pdf.Enums.SaveFlags)">
            <summary>
            Saves the copy of specified document in custom way.
            </summary>
            <param name="document">Handle to document. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadDocument(System.String,System.String)"/> and <see cref="M:Patagames.Pdf.Pdfium.FPDF_CreateNewDocument"/>.</param>
            <param name="saveData">A pointer to a custom file write structure</param>
            <param name="flag">The creating flags.</param>
            <returns>TRUE for succeed, FALSE for failed.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_SaveWithVersion(System.IntPtr,Patagames.Pdf.FPDF_FILEWRITE,Patagames.Pdf.Enums.SaveFlags,System.Int32)">
            <summary>
            Same as function <see cref="M:Patagames.Pdf.Pdfium.FPDF_SaveAsCopy(System.IntPtr,Patagames.Pdf.FPDF_FILEWRITE,Patagames.Pdf.Enums.SaveFlags)"/>, except the file Version of the saved document could be specified by user.
            </summary>
            <param name="document">Handle to document. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadDocument(System.String,System.String)"/> and <see cref="M:Patagames.Pdf.Pdfium.FPDF_CreateNewDocument"/>.</param>
            <param name="saveData">A pointer to a custom file write structure</param>
            <param name="flag">The creating flags.</param>
            <param name="fileVersion">The PDF file Version. File Version: 14 for 1.4, 15 for 1.5, ...</param>
            <returns>TRUE if succeed, FALSE if failed.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFText_LoadPage(System.IntPtr)">
            <summary>
            Prepare information about all characters in a page.
            </summary>
            <param name="page">Handle to the page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> function</param>
            <returns>A handle to the text page information structure. IntPtr.Zero if something goes wrong.</returns>
            <remarks>Application must call <see cref="M:Patagames.Pdf.Pdfium.FPDFText_ClosePage(System.IntPtr)"/> to release the text page information. 
            If you didn’t purchase Text Module , this function will return IntPtr.Zero.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFText_ClosePage(System.IntPtr)">
            <summary>
            Release all resources allocated for a text page information structure
            </summary>
            <param name="text_page">Handle to a text page information structure. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFText_LoadPage(System.IntPtr)"/> function</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFText_CountChars(System.IntPtr)">
            <summary>
            Get number of characters in a page
            </summary>
            <param name="text_page">Handle to a text page information structure returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFText_LoadPage(System.IntPtr)"/> function</param>
            <returns>Number of characters in the page. Return -1 for error.
            Generated characters, like additional space characters, new line characters, are also
            counted.</returns>
            <remarks>Characters in a page form a "stream", inside the stream, each character has an index.
            We will use the index parameters in many of FPDFTEXT functions. The first character in the
            page has an index value of zero.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFText_GetUnicode(System.IntPtr,System.Int32)">
            <summary>
            Get Unicode of a character in a page
            </summary>
            <param name="text_page">Handle to a text page information structure. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFText_LoadPage(System.IntPtr)"/> function.</param>
            <param name="index">Zero-based index of the character</param>
            <returns>The Unicode of the particular character.
            If a character is not encoded in Unicode and Pdfium engine can't convert to Unicode,
            the return value will be zero.</returns>
            <overloads>Get Unicode of a character in a page</overloads>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFText_GetUnicodeEx(System.IntPtr,System.Int32)">
            <summary>
            Get Unicode of a character in a page
            </summary>
            <param name="text_page">Handle to a text page information structure. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFText_LoadPage(System.IntPtr)"/> function.</param>
            <param name="index">Zero-based index of the character</param>
            <returns>The Unicode of the particular character.
            If a character is not encoded in Unicode and Pdfium engine can't convert to Unicode,
            the return value will be zero character (\0).</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFText_GetFontSize(System.IntPtr,System.Int32)">
            <summary>
            Get the font size of a particular character
            </summary>
            <param name="text_page">Handle to a text page information structure. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFText_LoadPage(System.IntPtr)"/> function</param>
            <param name="index">Zero-based index of the character.</param>
            <returns>The font size of the particular character, measured in points (about 1/72 inch). This is the typographic size of the font (so called "em size").</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFText_GetCharBox(System.IntPtr,System.Int32,System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>
            Get bounding box of a particular character
            </summary>
            <param name="text_page">Handle to a text page information structure. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFText_LoadPage(System.IntPtr)"/> function</param>
            <param name="index">Zero-based index of the character.</param>
            <param name="left">Pointer to a double number receiving left position of the character box</param>
            <param name="right">Pointer to a double number receiving right position of the character box.</param>
            <param name="bottom">Pointer to a double number receiving bottom position of the character box</param>
            <param name="top">Pointer to a double number receiving top position of the character box.</param>
            <remarks>All positions are measured in PDF "user space"</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFText_GetCharIndexAtPos(System.IntPtr,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Get the index of a character at or nearby a certain position on the page
            </summary>
            <param name="text_page">Handle to a text page information structure. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFText_LoadPage(System.IntPtr)"/> function</param>
            <param name="x">X position in PDF "user space"</param>
            <param name="y">Y position in PDF "user space"</param>
            <param name="xTolerance">An x-axis tolerance value for character hit detection, in point unit.</param>
            <param name="yTolerance">A y-axis tolerance value for character hit detection, in point unit</param>
            <returns>The zero-based index of the character at, or nearby the point (x,y).
            If there is no character at or nearby the point, return value will be -1.
            If an error occurs, -3 will be returned.
            </returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFText_GetText(System.IntPtr,System.Int32,System.Int32)">
            <summary>
            Extract unicode text string from the page
            </summary>
            <param name="text_page">Handle to a text page information structure. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFText_LoadPage(System.IntPtr)"/> function.</param>
            <param name="start_index">Index for the start characters</param>
            <param name="count">Number of characters to be extracted</param>
            <returns>Unicode text string from the page</returns>
            <remarks>This function ignores characters without unicode information</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFText_CountRects(System.IntPtr,System.Int32,System.Int32)">
            <summary>
            Count number of rectangular areas occupied by a segment of texts.
            </summary>
            <param name="text_page">Handle to a text page information structure. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFText_LoadPage(System.IntPtr)"/> function</param>
            <param name="start_index">Index for the start characters</param>
            <param name="count">Number of characters</param>
            <returns>Number of rectangles. Zero for error</returns>
            <remarks>This function, along with <see cref="M:Patagames.Pdf.Pdfium.FPDFText_GetRect(System.IntPtr,System.Int32,System.Double@,System.Double@,System.Double@,System.Double@)"/> can be used by applications to detect the position
            on the page for a text segment, so proper areas can be highlighted or something. FPDFTEXT
            will automatically merge small character boxes into bigger one if those characters are on the
            same line and use same font settings.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFText_GetRect(System.IntPtr,System.Int32,System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>
            Get a rectangular area from the result generated by <see cref="M:Patagames.Pdf.Pdfium.FPDFText_CountRects(System.IntPtr,System.Int32,System.Int32)"/>.
            </summary>
            <param name="text_page">Handle to a text page information structure. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFText_LoadPage(System.IntPtr)"/> function</param>
            <param name="rect_index">Zero-based index for the rectangle</param>
            <param name="left">Pointer to a double value receiving the rectangle left boundary.</param>
            <param name="top">Pointer to a double value receiving the rectangle top boundary</param>
            <param name="right">Pointer to a double value receiving the rectangle right boundary.</param>
            <param name="bottom">Pointer to a double value receiving the rectangle bottom boundary</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFText_GetBoundedText(System.IntPtr,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Extract unicode text within a rectangular boundary on the page
            </summary>
            <param name="text_page">Handle to a text page information structure. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFText_LoadPage(System.IntPtr)"/> function.</param>
            <param name="left">Left boundary</param>
            <param name="top">Top boundary</param>
            <param name="right">Right boundary</param>
            <param name="bottom">Bottom boundary.</param>
            <returns>Unicode text within a rectangular boundary on the page</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFText_FindStart(System.IntPtr,System.String,Patagames.Pdf.Enums.FindFlags,System.Int32)">
            <summary>
            Start a search.
            </summary>
            <param name="text_page">Handle to a text page information structure. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFText_LoadPage(System.IntPtr)"/> function.</param>
            <param name="findwhat">A unicode match pattern</param>
            <param name="flags">Option flags. See <see cref="T:Patagames.Pdf.Enums.FindFlags"/> for details </param>
            <param name="start_index">Start from this character. -1 for end of the page</param>
            <returns>A handle for the search context. <see cref="M:Patagames.Pdf.Pdfium.FPDFText_FindClose(System.IntPtr)"/> must be called to release this handle</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFText_FindNext(System.IntPtr)">
            <summary>
            Search in the direction from page start to end.
            </summary>
            <param name="search_handle">A search context handle returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFText_FindStart(System.IntPtr,System.String,Patagames.Pdf.Enums.FindFlags,System.Int32)"/></param>
            <returns>Whether a match is found</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFText_FindPrev(System.IntPtr)">
            <summary>
            Search in the direction from page end to start.
            </summary>
            <param name="search_handle">A search context handle returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFText_FindStart(System.IntPtr,System.String,Patagames.Pdf.Enums.FindFlags,System.Int32)"/></param>
            <returns>Whether a match is found.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFText_GetSchResultIndex(System.IntPtr)">
            <summary>
            Get the starting character index of the search result.
            </summary>
            <param name="search_handle">A search context handle returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFText_FindStart(System.IntPtr,System.String,Patagames.Pdf.Enums.FindFlags,System.Int32)"/>.</param>
            <returns>Index for the starting character</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFText_GetSchCount(System.IntPtr)">
            <summary>
            Get the number of matched characters in the search result
            </summary>
            <param name="search_handle">A search context handle returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFText_FindStart(System.IntPtr,System.String,Patagames.Pdf.Enums.FindFlags,System.Int32)"/>.</param>
            <returns>Number of matched characters</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFText_FindClose(System.IntPtr)">
            <summary>
            Release a search context
            </summary>
            <param name="search_handle">A search context handle returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFText_FindStart(System.IntPtr,System.String,Patagames.Pdf.Enums.FindFlags,System.Int32)"/></param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFLink_LoadWebLinks(System.IntPtr)">
            <summary>
            Prepare information about weblinks in a page
            </summary>
            <param name="text_page">Handle to a text page information structure. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFText_LoadPage(System.IntPtr)"/> function</param>
            <returns>A handle to the page's links information structure. IntPtr.Zero if something goes wrong</returns>
            <remarks>
            Weblinks are those links implicitly embedded in PDF pages. PDF also has a type of annotation
            called "link", FPDFTEXT doesn't deal with that kind of link. FPDFTEXT weblink feature is
            useful for automatically detecting links in the page contents. For example, things like
            "http://www.patagames.com" will be detected, so applications can allow user to click on those
            characters to activate the link, even the PDF doesn't come with link annotations.
            <see cref="M:Patagames.Pdf.Pdfium.FPDFLink_CloseWebLinks(System.IntPtr)"/> must be called to release resources.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFLink_CountWebLinks(System.IntPtr)">
            <summary>
            Count number of detected web links.
            </summary>
            <param name="link_page">Handle returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFLink_LoadWebLinks(System.IntPtr)"/>.</param>
            <returns>Number of detected web links.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFLink_GetURL(System.IntPtr,System.Int32)">
            <summary>
            Fetch the URL information for a detected web link.
            </summary>
            <param name="link_page">Handle returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFLink_LoadWebLinks(System.IntPtr)"/>.</param>
            <param name="link_index">Zero-based index for the link</param>
            <returns>URL information for a detected web link</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFLink_CountRects(System.IntPtr,System.Int32)">
            <summary>
            Count number of rectangular areas for the link.
            </summary>
            <param name="link_page">Handle returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFLink_LoadWebLinks(System.IntPtr)"/>.</param>
            <param name="link_index">Zero-based index for the link.</param>
            <returns>Number of rectangular areas for the link.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFLink_GetRect(System.IntPtr,System.Int32,System.Int32,System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>
            Fetch the boundaries of a rectangle for a link
            </summary>
            <param name="link_page">Handle returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFLink_LoadWebLinks(System.IntPtr)"/>.</param>
            <param name="link_index">Zero-based index for the link</param>
            <param name="rect_index">Zero-based index for a rectangle</param>
            <param name="left">Pointer to a double value receiving the rectangle left boundary</param>
            <param name="top">Pointer to a double value receiving the rectangle top boundar</param>
            <param name="right">Pointer to a double value receiving the rectangle right boundary</param>
            <param name="bottom">Pointer to a double value receiving the rectangle bottom boundary</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFLink_CloseWebLinks(System.IntPtr)">
            <summary>
            Release resources used by weblink feature.
            </summary>
            <param name="link_page">Handle returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFLink_LoadWebLinks(System.IntPtr)"/>.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_LoadDocument(System.String,System.String)">
            <summary>
            Open and load a PDF document.
            </summary>
            <param name="file_path">Path to the PDF file (including extension)</param>
            <param name="password">A string used as the password for PDF file. If no password needed, empty or NULL can be used</param>
            <returns>A handle to the loaded document. If failed, IntPtr.Zero is returned</returns>
            <remarks>Loaded document can be closed by <see cref="M:Patagames.Pdf.Pdfium.FPDF_CloseDocument(System.IntPtr)"/>.
            If this function fails, you can use <see cref="M:Patagames.Pdf.Pdfium.FPDF_GetLastError"/> to retrieve the reason why it fails.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_LoadMemDocument(System.Byte[],System.Int32,System.String)">
            <summary>
            Open and load a PDF document from memory.
            </summary>
            <param name="file_content">Pointer to a buffer containing the PDF document.</param>
            <param name="content_size">Number of bytes in the PDF document.</param>
            <param name="password">A string used as the password for PDF file. If no password needed, empty or NULL can be used</param>
            <returns>A handle to the loaded document. If failed, IntPtr.Zero is returned.</returns>
            <remarks>
            The memory buffer must remain valid when the document is open. Loaded document can be
            closed by <see cref="M:Patagames.Pdf.Pdfium.FPDF_CloseDocument(System.IntPtr)"/>. If this function fails, you can use <see cref="M:Patagames.Pdf.Pdfium.FPDF_GetLastError"/> to
            retrieve the reason why it fails.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_LoadCustomDocument(Patagames.Pdf.FPDF_FILEACCESS,System.String)">
            <summary>
            Load PDF document from a custom access descriptor.
            </summary>
            <param name="pFileAccess">A structure for access the file.</param>
            <param name="password">Optional password for decrypting the PDF file.</param>
            <returns>A handle to the loaded document. If failed, IntPtr.Zero is returned.</returns>
            <remarks>The application should maintain the file resources being valid until the PDF document close.
            Loaded document can be closed by <see cref="M:Patagames.Pdf.Pdfium.FPDF_CloseDocument(System.IntPtr)"/>.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_GetFileVersion(System.IntPtr,System.Int32@)">
            <summary>
            Get the file Version of the specific PDF document.
            </summary>
            <param name="doc">Handle to document. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadDocument(System.String,System.String)"/>, <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadMemDocument(System.Byte[],System.Int32,System.String)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadCustomDocument(Patagames.Pdf.FPDF_FILEACCESS,System.String)"/></param>
            <param name="fileVersion">The PDF file Version. File Version: 14 for 1.4, 15 for 1.5, ...</param>
            <returns>TRUE if this call succeed, If failed, FALSE is returned.</returns>
            <remarks>If the document is created by function <see cref="M:Patagames.Pdf.Pdfium.FPDF_CreateNewDocument"/>, then this function would always fail.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_GetDocPermissions(System.IntPtr)">
            <summary>
            Get file permission flags of the document.
            </summary>
            <param name="document">Handle to document. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadDocument(System.String,System.String)"/> function.</param>
            <returns>A 32-bit integer indicating permission flags. Please refer to <a href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF Reference</a> for detailed description. If the document is not protected, 0xffffffff will be returned.</returns>
            <seealso><a href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF Reference 1.7</a></seealso>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_GetSecurityHandlerRevision(System.IntPtr)">
            <summary>
            Get the revision for security handler.
            </summary>
            <param name="document">Handle to document. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadDocument(System.String,System.String)"/> function.</param>
            <returns>The security handler revision number. Please refer to <a href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF Reference</a> for detailed description. If the document is not protected, -1 will be returned.</returns>
            <seealso><a href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF Reference 1.7</a></seealso>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_CloseDocument(System.IntPtr)">
            <summary>
            Close a loaded PDF document.
            </summary>
            <param name="document">Handle to the loaded document. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadDocument(System.String,System.String)"/> function.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_GetPageCount(System.IntPtr)">
            <summary>
            Get total number of pages in a document
            </summary>
            <param name="document">Handle to document. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadDocument(System.String,System.String)"/> function.</param>
            <returns>Total number of pages in the document.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)">
            <summary>
            Load a page inside a document.
            </summary>
            <param name="document">Handle to document. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadDocument(System.String,System.String)"/> function.</param>
            <param name="page_index">Index number of the page. 0 for the first page.</param>
            <returns>A handle to the loaded page. If failed, IntPtr.Zero is returned.</returns>
            <remarks>Loaded page can be rendered to devices using <see cref="M:Patagames.Pdf.Pdfium.FPDF_RenderPage(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,Patagames.Pdf.Enums.PageRotate,Patagames.Pdf.Enums.RenderFlags)"/> function. 
            Loaded page can be closed by <see cref="M:Patagames.Pdf.Pdfium.FPDF_ClosePage(System.IntPtr)"/>.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_GetPageWidth(System.IntPtr)">
            <summary>
            Get page width
            </summary>
            <param name="page">Handle to the page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> function.</param>
            <returns>Page width (excluding non-displayable area) measured in points. One point is 1/72 inch (around 0.3528 mm)</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_GetPageHeight(System.IntPtr)">
            <summary>
            Get page height
            </summary>
            <param name="page">Handle to the page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> function.</param>
            <returns>Page height (excluding non-displayable area) measured in points. One point is 1/72 inch (around 0.3528 mm)</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_GetPageSizeByIndex(System.IntPtr,System.Int32,System.Double@,System.Double@)">
            <summary>
            Get the size of a page by index.
            </summary>
            <param name="document">Handle to document. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadDocument(System.String,System.String)"/> function.</param>
            <param name="page_index">Page index, zero for the first page.</param>
            <param name="width">Pointer to a double value receiving the page width (in points).</param>
            <param name="height">Pointer to a double value receiving the page height (in points).</param>
            <returns>True for success. False for error (document or page not found)</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_RenderPage(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,Patagames.Pdf.Enums.PageRotate,Patagames.Pdf.Enums.RenderFlags)">
            <summary>
            Render contents in a page to a device (screen, bitmap, or printer). This function is only supported on Windows system.
            </summary>
            <param name="hdc">Handle to device context</param>
            <param name="page">Handle to the page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> function.</param>
            <param name="start_x">Left pixel position of the display area in the device coordinate</param>
            <param name="start_y">Top pixel position of the display area in the device coordinate</param>
            <param name="size_x">Horizontal size (in pixels) for displaying the page.</param>
            <param name="size_y">Vertical size (in pixels) for displaying the page</param>
            <param name="rotate">Page orientation: 0 (normal), 1 (rotated 90 degrees clockwise), 2 (rotated 180 degrees), 3 (rotated 90 degrees counter-clockwise)</param>
            <param name="flags">0 for normal display, or combination of flags defined below
            0x01 Set if annotations are to be rendered
            0x02 Set if using text rendering optimized for LCD display
            0x04 Set if you don't want to use GDI+
            Applicable to desktop Windows systems only.
            0x08 Grayscale output
            0x80 Set if you want to get some debug info.
            0x100 Set if you don't want to catch exception
            </param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_RenderPageBitmap(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,Patagames.Pdf.Enums.PageRotate,Patagames.Pdf.Enums.RenderFlags)">
            <summary>
            Render contents in a page to a device-independent bitmap
            </summary>
            <param name="bitmap">Handle to the device independent bitmap (as the output buffer). Bitmap handle can be created by <see cref="M:Patagames.Pdf.Pdfium.FPDFBitmap_Create(System.Int32,System.Int32,System.Boolean)"/> function.</param>
            <param name="page">Handle to the page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> function.</param>
            <param name="start_x">Left pixel position of the display area in the device coordinate</param>
            <param name="start_y">Top pixel position of the display area in the device coordinate</param>
            <param name="size_x">Horizontal size (in pixels) for displaying the page.</param>
            <param name="size_y">Vertical size (in pixels) for displaying the page</param>
            <param name="rotate">Page orientation: 0 (normal), 1 (rotated 90 degrees clockwise), 2 (rotated 180 degrees), 3 (rotated 90 degrees counter-clockwise)</param>
            <param name="flags">0 for normal display, or combination of flags defined below
            0x01 Set if annotations are to be rendered
            0x02 Set if using text rendering optimized for LCD display
            0x04 Set if you don't want to use GDI+
            Applicable to desktop Windows systems only.
            0x08 Grayscale output
            0x80 Set if you want to get some debug info.
            0x100 Set if you don't want to catch exception
            </param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_ClosePage(System.IntPtr)">
            <summary>
            Close a loaded PDF page.
            </summary>
            <param name="page">Handle to the loaded page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> function.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_DeviceToPage(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,Patagames.Pdf.Enums.PageRotate,System.Int32,System.Int32,System.Double@,System.Double@)">
            <summary>
            Convert the screen coordinate of a point to page coordinate.
            </summary>
            <param name="page">Handle to the page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> function.</param>
            <param name="start_x">Left pixel position of the display area in the device coordinate</param>
            <param name="start_y">Top pixel position of the display area in the device coordinate</param>
            <param name="size_x">Horizontal size (in pixels) for displaying the page</param>
            <param name="size_y">Vertical size (in pixels) for displaying the page</param>
            <param name="rotate">Page orientation: 0 (normal), 1 (rotated 90 degrees clockwise),2 (rotated 180 degrees), 3 (rotated 90 degrees counter-clockwise).</param>
            <param name="device_x">X value in device coordinate, for the point to be converted</param>
            <param name="device_y">Y value in device coordinate, for the point to be converted</param>
            <param name="page_x">A pointer to a double value receiving the converted X value in page coordinate</param>
            <param name="page_y">A pointer to a double value receiving the converted Y value in page coordinate</param>
            <remarks>The page coordinate system has its origin at left-bottom corner of the page, with X axis goes
            along the bottom side to the right, and Y axis goes along the left side upward. NOTE: this
            coordinate system can be altered when you zoom, scroll, or rotate a page, however, a point on
            the page should always have the same coordinate values in the page coordinate system.
            The device coordinate system is device dependant. For screen device, its origin is at left-top
            corner of the window. However this origin can be altered by Windows coordinate
            transformation utilities. You must make sure the start_x, start_y, size_x, size_y and rotate
            parameters have exactlysame values as you used in <see cref="M:Patagames.Pdf.Pdfium.FPDF_RenderPage(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,Patagames.Pdf.Enums.PageRotate,Patagames.Pdf.Enums.RenderFlags)"/> function call.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_PageToDevice(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,Patagames.Pdf.Enums.PageRotate,System.Double,System.Double,System.Int32@,System.Int32@)">
            <summary>
            Convert the page coordinate of a point to screen coordinate
            </summary>
            <param name="page">Handle to the page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> function.</param>
            <param name="start_x">Left pixel position of the display area in the device coordinate</param>
            <param name="start_y">Top pixel position of the display area in the device coordinate</param>
            <param name="size_x">Horizontal size (in pixels) for displaying the page</param>
            <param name="size_y">Vertical size (in pixels) for displaying the page</param>
            <param name="rotate">Page orientation: 0 (normal), 1 (rotated 90 degrees clockwise),2 (rotated 180 degrees), 3 (rotated 90 degrees counter-clockwise).</param>
            <param name="page_x">X value in page coordinate, for the point to be converted</param>
            <param name="page_y">Y value in page coordinate, for the point to be converted</param>
            <param name="device_x">A pointer to an integer value receiving the result X value in device coordinate</param>
            <param name="device_y">A pointer to an integer value receiving the result Y value in device coordinate</param>
            <remarks>See remarks of <see cref="M:Patagames.Pdf.Pdfium.FPDF_DeviceToPage(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,Patagames.Pdf.Enums.PageRotate,System.Int32,System.Int32,System.Double@,System.Double@)"/> function</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFBitmap_Create(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Create a Pdfium Device-Independent Bitmap (FXDIB)
            </summary>
            <param name="width">Number of pixels in a horizontal line of the bitmap. Must be greater than 0.</param>
            <param name="height">Number of pixels in a vertical line of the bitmap. Must be greater than 0.</param>
            <param name="isUseAlpha">A flag indicating whether alpha channel is used.</param>
            <returns>The created bitmap handle, or IntPtr.Zero if parameter error or out of memory.</returns>
            <remarks>An FXDIB always use 4 byte per pixel. The first byte of a pixel is always double word aligned.
            Each pixel contains red (R), green (G), blue (B) and optionally alpha (A) values. The byte order
            is BGRx (the last byte unused if no alpha channel) or BGRA. The pixels in a horizontal line
            (also called scan line) are stored side by side, with left most pixel stored first (with lower
            memory address). Each scan line uses width*4 bytes. Scan lines are stored one after another,
            with top most scan line stored first. There is no gap between adjacent scan lines.
            This function allocates enough memory for holding all pixels in the bitmap, but it doesn't
            initialize the buffer. Applications can use <see cref="M:Patagames.Pdf.Pdfium.FPDFBitmap_FillRect(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)"/> to fill the bitmap using any
            color.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFBitmap_CreateEx(System.Int32,System.Int32,Patagames.Pdf.Enums.FXDIBFormats,System.IntPtr,System.Int32)">
            <summary>
            Create a Pdfium Device-Independent Bitmap (FXDIB)
            </summary>
            <param name="width">Number of pixels in a horizontal line of the bitmap. Must be greater than 0.</param>
            <param name="height">Number of pixels in a vertical line of the bitmap. Must be greater than 0</param>
            <param name="format">A number indicating for bitmap format, as defined below
            1 Gray scale bitmap, one byte per pixel
            2 3 bytes per pixel, byte order: blue, green, red
            3 4 bytes per pixel, byte order: blue, green, red, unused
            4 4 bytes per pixel, byte order: blue, green, red, alpha</param>
            <param name="first_scan">A pointer to the first byte of first scan line, for external buffer only. If this parameter is IntPtr.Zero, then the SDK will create its own buffer.</param>
            <param name="stride">Number of bytes for each scan line, for external buffer only</param>
            <returns>The created bitmap handle, or IntPtr.Zero if parameter error or out of memory</returns>
            <remarks>Similar to <see cref="M:Patagames.Pdf.Pdfium.FPDFBitmap_Create(System.Int32,System.Int32,System.Boolean)"/> function, with more formats and external buffer supported.
            Bitmap created by this function can be used in any place that a FPDF_BITMAP handle is
            required. If external scanline buffer is used, then the application should destroy the buffer by
            itself. <see cref="M:Patagames.Pdf.Pdfium.FPDFBitmap_Destroy(System.IntPtr)"/> function will not destroy the buffer.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFBitmap_CreateEx(System.Int32,System.Int32,Patagames.Pdf.Enums.BitmapFormats,System.IntPtr,System.Int32)">
            <summary>
            Create a Pdfium Device-Independent Bitmap (FXDIB) with extended formats
            </summary>
            <param name="width">Number of pixels in a horizontal line of the bitmap. Must be greater than 0.</param>
            <param name="height">Number of pixels in a vertical line of the bitmap. Must be greater than 0</param>
            <param name="format">A number indicating for bitmap format, as defined in <see cref="T:Patagames.Pdf.Enums.BitmapFormats"/> enumeration</param>
            <param name="first_scan">A pointer to the first byte of first scan line, for external buffer only. If this parameter is IntPtr.Zero, then the SDK will create its own buffer.</param>
            <param name="stride">Number of bytes for each scan line, for external buffer only</param>
            <returns>The created bitmap handle, or IntPtr.Zero if parameter error or out of memory</returns>
            <remarks>
            Similar to <see cref="M:Patagames.Pdf.Pdfium.FPDFBitmap_Create(System.Int32,System.Int32,System.Boolean)"/> function, with more formats and external buffer supported.
            Bitmap created by this function can be used in any place that a FPDF_BITMAP handle is
            required. If external scanline buffer is used, then the application should destroy the buffer by
            itself. <see cref="M:Patagames.Pdf.Pdfium.FPDFBitmap_Destroy(System.IntPtr)"/> function will not destroy the buffer.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFBitmap_FillRect(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Fill a rectangle area in an FXDIB
            </summary>
            <param name="bitmap">The handle to the bitmap. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFBitmap_Create(System.Int32,System.Int32,System.Boolean)"/> function.</param>
            <param name="left">The left side position. Starting from 0 at the left-most pixel.</param>
            <param name="top">The top side position. Starting from 0 at the top-most scan line.</param>
            <param name="width">Number of pixels to be filled in each scan line</param>
            <param name="height">Number of scan lines to be filled.</param>
            <param name="color">A 32-bit value specifing the color, in 8888 ARGB format</param>
            <remarks>This function set the color and (optionally) alpha value in specified region of the bitmap. NOTE:
            If alpha channel is used, this function does NOT composite the background with the source
            color, instead the background will be replaced by the source color and alpha. If alpha channel
            is not used, the "alpha" parameter is ignored.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFBitmap_GetBuffer(System.IntPtr)">
            <summary>
            Get data buffer of an FXDIB
            </summary>
            <param name="bitmap">Handle to the bitmap. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFBitmap_Create(System.Int32,System.Int32,System.Boolean)"/> function.</param>
            <returns>The pointer to the first byte of the bitmap buffer.</returns>
            <remarks>Applications can use this function to get the bitmap buffer pointer, then manipulate any color and/or alpha values for any pixels in the bitmap.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFBitmap_GetWidth(System.IntPtr)">
            <summary>
            Get width of an FXDIB
            </summary>
            <param name="bitmap">Handle to the bitmap. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFBitmap_Create(System.Int32,System.Int32,System.Boolean)"/> function.</param>
            <returns>The number of pixels in a horizontal line of the bitmap.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFBitmap_GetHeight(System.IntPtr)">
            <summary>
            Get height of an FXDIB
            </summary>
            <param name="bitmap">Handle to the bitmap. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFBitmap_Create(System.Int32,System.Int32,System.Boolean)"/> function.</param>
            <returns>The number of pixels in a vertical line of the bitmap.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFBitmap_GetStride(System.IntPtr)">
            <summary>
            Get number of bytes for each scan line in the bitmap buffer
            </summary>
            <param name="bitmap">Handle to the bitmap. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFBitmap_Create(System.Int32,System.Int32,System.Boolean)"/> function.</param>
            <returns>The number of bytes for each scan line in the bitmap buffer.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFBitmap_Destroy(System.IntPtr)">
            <summary>
            Destroy an FXDIB and release all related buffers 
            </summary>
            <param name="bitmap">Handle to the bitmap. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFBitmap_Create(System.Int32,System.Int32,System.Boolean)"/> function.</param>
            <remarks>This function will not destroy any external buffer.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_VIEWERREF_GetPrintScaling(System.IntPtr)">
            <summary>
            Whether the PDF document prefers to be scaled or not.
            </summary>
            <param name="document">Handle to the loaded document.</param>
            <returns>True if PDF document prefers to be scaled</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_VIEWERREF_GetNumCopies(System.IntPtr)">
            <summary>
            Returns the number of copies to be printed.
            </summary>
            <param name="document">Handle to the loaded document.</param>
            <returns>The number of copies to be printed.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_VIEWERREF_GetPrintPageRange(System.IntPtr)">
            <summary>
            Page numbers to initialize print dialog box when file is printed.
            </summary>
            <param name="document">Handle to the loaded document.</param>
            <returns>The print page range to be used for printing.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_VIEWERREF_GetDuplex(System.IntPtr)">
            <summary>
            Returns the paper handling option to be used when printing from print dialog.
            </summary>
            <param name="document">Handle to the loaded document.</param>
            <returns>The paper handling option to be used when printing.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_CountNamedDests(System.IntPtr)">
            <summary>
            Get the count of named destinations in the PDF document.
            </summary>
            <param name="document">Handle to a document</param>
            <returns>The count of named destinations.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_GetNamedDestByName(System.IntPtr,System.String)">
            <summary>
            Get a special dest handle by the name.
            </summary>
            <param name="document">Handle to the loaded document.</param>
            <param name="name">The name of a special named dest.</param>
            <returns>The handle of the dest.</returns>
            <remarks>This method have problem with non english national character encoding</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_GetNamedDest(System.IntPtr,System.Int32,System.String@)">
            <summary>
            Get the specified named destinations of the PDF document by index.
            </summary>
            <param name="document">Handle to a document</param>
            <param name="index">The index of named destination.</param>
            <param name="name">Retrieve the name of named destinations</param>
            <returns>The destination handle of a named destination, or IntPtr.Zero if no named destination corresponding to |index|.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_SetSandBoxPolicy(Patagames.Pdf.Enums.SandboxPolicies,System.Boolean)">
            <summary>
            Set the policy for the sandbox environment.
            </summary>
            <param name="policy">The specified policy for setting, for example:FPDF_POLICY_MACHINETIME_ACCESS.</param>
            <param name="enable">True for enable, False for disable the policy.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFAvail_Create(Patagames.Pdf.FX_FILEAVAIL,Patagames.Pdf.FPDF_FILEACCESS)">
            <summary>
            Create a document availability provider.
            </summary>
            <param name="file_avail">Pointer to file availability interface to check availability of file data.</param>
            <param name="file">Pointer to a file access interface for reading data from file.</param>
            <returns>A handle to the document availability provider. IntPtr.Zero for error.</returns>
            <remarks>Application must call <see cref="M:Patagames.Pdf.Pdfium.FPDFAvail_Destroy(System.IntPtr)"/> when done with the availability provider.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFAvail_Destroy(System.IntPtr)">
            <summary>
            Destroy a document availibity provider.
            </summary>
            <param name="avail">Handle to document availability provider returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFAvail_Create(Patagames.Pdf.FX_FILEAVAIL,Patagames.Pdf.FPDF_FILEACCESS)"/></param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFAvail_IsDocAvail(System.IntPtr,Patagames.Pdf.FX_DOWNLOADHINTS)">
            <summary>
            Check whether the document is ready for loading, if not, get download hints.
            </summary>
            <param name="avail">Handle to document availability provider returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFAvail_Create(Patagames.Pdf.FX_FILEAVAIL,Patagames.Pdf.FPDF_FILEACCESS)"/></param>
            <param name="hints">Pointer to a download hints interface, receiving generated hints</param>
            <returns>True for page is fully available, False for page not yet available.</returns>
            <remarks>
            The application should call this function whenever new data arrived, and process all the
            generated download hints if any, until the function returns non-zero value. Then the application can call <see cref="M:Patagames.Pdf.Pdfium.FPDFAvail_GetDocument(System.IntPtr,System.String)"/> to get a document handle.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFAvail_GetDocument(System.IntPtr,System.String)">
            <summary>
            Get document from the availability provider.
            </summary>
            <param name="avail">Handle to document availability provider returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFAvail_Create(Patagames.Pdf.FX_FILEAVAIL,Patagames.Pdf.FPDF_FILEACCESS)"/></param>
            <param name="password">Optional password for decrypting the PDF file.</param>
            <returns>Handle to the document.</returns>
            <remarks>
            After <see cref="M:Patagames.Pdf.Pdfium.FPDFAvail_IsDocAvail(System.IntPtr,Patagames.Pdf.FX_DOWNLOADHINTS)"/> returns TRUE, the application should call this function to
            get the document handle. To close the document, use <see cref="M:Patagames.Pdf.Pdfium.FPDF_CloseDocument(System.IntPtr)"/> function.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFAvail_GetFirstPageNum(System.IntPtr)">
            <summary>
            Get page number for the first available page in a linearized PDF
            </summary>
            <param name="document">A document handle returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFAvail_GetDocument(System.IntPtr,System.String)"/></param>
            <returns>Zero-based index for the first available page.</returns>
            <remarks>For most linearized PDFs, the first available page would be just the first page, however,
            some PDFs might make other page to be the first available page.
            For non-linearized PDF, this function will always return zero.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFAvail_IsPageAvail(System.IntPtr,System.Int32,Patagames.Pdf.FX_DOWNLOADHINTS)">
            <summary>
            Check whether a page is ready for loading, if not, get download hints.
            </summary>
            <param name="avail">Handle to document availability provider returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFAvail_Create(Patagames.Pdf.FX_FILEAVAIL,Patagames.Pdf.FPDF_FILEACCESS)"/></param>
            <param name="page_index">Index number of the page. 0 for the first page.</param>
            <param name="hints">Pointer to a download hints interface, receiving generated hints</param>
            <returns>True for page is fully available, False for page not yet available.</returns>
            <remarks>
            This function call be called only after <see cref="M:Patagames.Pdf.Pdfium.FPDFAvail_GetDocument(System.IntPtr,System.String)"/> if called.
            The application should call this function whenever new data arrived, and process all the
            generated download hints if any, until the function returns non-zero value. Then the 
            application can perform page loading.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFAvail_IsFormAvail(System.IntPtr,Patagames.Pdf.FX_DOWNLOADHINTS)">
            <summary>
            Check whether Form data is ready for init, if not, get download hints.
            </summary>
            <param name="avail">Handle to document availability provider returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFAvail_Create(Patagames.Pdf.FX_FILEAVAIL,Patagames.Pdf.FPDF_FILEACCESS)"/></param>
            <param name="hints">Pointer to a download hints interface, receiving generated hints</param>
            <returns>
            Non-zero for Form data is fully available, 0 for Form data not yet available.
            Details: -1 - error, the input parameter not correct, such as hints is null.
            0 - data not available
            1 - data available
            2 - no form data.	
            </returns>
            <remarks>
            This function call be called only after <see cref="M:Patagames.Pdf.Pdfium.FPDFAvail_GetDocument(System.IntPtr,System.String)"/> if called. 
            The application should call this function whenever new data arrived, and process all the
            generated download hints if any, until the function returns non-zero value. Then the 
            application can perform page loading. Recommend to call <see cref="M:Patagames.Pdf.Pdfium.FPDFDOC_InitFormFillEnvironment(System.IntPtr,Patagames.Pdf.FPDF_FORMFILLINFO,Patagames.Pdf.IPDF_JSPLATFORM)"/>
            after the function returns non-zero value.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFAvail_IsLinearized(System.IntPtr)">
            <summary>
            To check whether a document is Linearized PDF file.
            </summary>
            <param name="avail">Handle to document availability provider returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFAvail_Create(Patagames.Pdf.FX_FILEAVAIL,Patagames.Pdf.FPDF_FILEACCESS)"/></param>
            <returns>
            IsLinearized is a linearize file.
            NotLinearized is not a linearize file.
            UnknownLinearized don't know whether the file is a linearize file.
            </returns>
            <remarks>
            return IsLinearized means the document is linearized PDF else not.
            It return IsLinearized/NotLinearized state as soon as we have first 1K data. If the file's size less than
            1K,we don't known whether the PDF is a linearized file.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFDOC_InitFormFillEnvironment(System.IntPtr,Patagames.Pdf.FPDF_FORMFILLINFO,Patagames.Pdf.IPDF_JSPLATFORM)">
            <summary>
            Init form fill environment. 
            </summary>
            <param name="document">Handle to document. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadDocument(System.String,System.String)"/> function.</param>
            <param name="formInfo">Pointer to a <see cref="T:Patagames.Pdf.FPDF_FORMFILLINFO"/> structure.</param>
            <param name="jsPlatform">Pointer to a <see cref="T:Patagames.Pdf.IPDF_JSPLATFORM"/> structure.</param>
            <returns>Return handle to the form fill module. IntPtr.Zero means fails. </returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFDOC_ExitFormFillEnvironment(System.IntPtr)">
            <summary>
            Exit form fill environment. 
            </summary>
            <param name="form_handle">Handle to the form fill module. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFDOC_InitFormFillEnvironment(System.IntPtr,Patagames.Pdf.FPDF_FORMFILLINFO,Patagames.Pdf.IPDF_JSPLATFORM)"/>.</param>
            <returns></returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FORM_OnAfterLoadPage(System.IntPtr,System.IntPtr)">
            <summary>
            This method is required for implementing all the form related functions. Should be invoked after user 
            successfully loaded a PDF page, and method <see cref="M:Patagames.Pdf.Pdfium.FPDFDOC_InitFormFillEnvironment(System.IntPtr,Patagames.Pdf.FPDF_FORMFILLINFO,Patagames.Pdf.IPDF_JSPLATFORM)"/> had been invoked.
            </summary>
            <param name="page">Handle to the page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> function.</param>
            <param name="form_handle">Handle to the form fill module. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFDOC_InitFormFillEnvironment(System.IntPtr,Patagames.Pdf.FPDF_FORMFILLINFO,Patagames.Pdf.IPDF_JSPLATFORM)"/>.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FORM_OnBeforeClosePage(System.IntPtr,System.IntPtr)">
            <summary>
            This method is required for implementing all the form related functions. Should be invoked before user close the PDF page.
            </summary>
            <param name="page">Handle to the page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> function.</param>
            <param name="form_handle">Handle to the form fill module. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFDOC_InitFormFillEnvironment(System.IntPtr,Patagames.Pdf.FPDF_FORMFILLINFO,Patagames.Pdf.IPDF_JSPLATFORM)"/>.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FORM_DoDocumentJSAction(System.IntPtr)">
            <summary>
            This method is required for performing Document-level JavaScript action. It should be invoked after the PDF document had been loaded.
            </summary>
            <param name="form_handle">Handle to the form fill module. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFDOC_InitFormFillEnvironment(System.IntPtr,Patagames.Pdf.FPDF_FORMFILLINFO,Patagames.Pdf.IPDF_JSPLATFORM)"/>.</param>
            <remarks>If there is Document-level JavaScript action embedded in the document, this method will execute the javascript action;
            otherwise, the method will do nothing.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FORM_DoDocumentOpenAction(System.IntPtr)">
            <summary>
            This method is required for performing open-action when the document is opened.
            </summary>
            <param name="form_handle">Handle to the form fill module. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFDOC_InitFormFillEnvironment(System.IntPtr,Patagames.Pdf.FPDF_FORMFILLINFO,Patagames.Pdf.IPDF_JSPLATFORM)"/>.</param>
            <remarks>This method will do nothing if there is no open-actions embedded in the document. </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FORM_DoDocumentAAction(System.IntPtr,Patagames.Pdf.Enums.DocumentActionTypes)">
            <summary>
            This method is required for performing the document's additional-action.
            </summary>
            <param name="form_handle">Handle to the form fill module. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFDOC_InitFormFillEnvironment(System.IntPtr,Patagames.Pdf.FPDF_FORMFILLINFO,Patagames.Pdf.IPDF_JSPLATFORM)"/>.</param>
            <param name="aatype"> The type of the additional-actions. See <see cref="T:Patagames.Pdf.Enums.DocumentActionTypes"/> for detail</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FORM_DoPageAAction(System.IntPtr,System.IntPtr,Patagames.Pdf.Enums.PageActionTypes)">
            <summary>
            This method is required for performing the page object's additional-action when opened or closed.
            </summary>
            <param name="page">Handle to the page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> function.</param>
            <param name="form_handle">Handle to the form fill module. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFDOC_InitFormFillEnvironment(System.IntPtr,Patagames.Pdf.FPDF_FORMFILLINFO,Patagames.Pdf.IPDF_JSPLATFORM)"/>.</param>
            <param name="aatype">The type of the page object's additional-actions. See <see cref="T:Patagames.Pdf.Enums.PageActionTypes"/> for details.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FORM_OnMouseMove(System.IntPtr,System.IntPtr,System.Int32,System.Double,System.Double)">
            <summary>
            You can call this member function when the mouse cursor moves.
            </summary>
            <param name="form_handle">Handle to the form fill module. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFDOC_InitFormFillEnvironment(System.IntPtr,Patagames.Pdf.FPDF_FORMFILLINFO,Patagames.Pdf.IPDF_JSPLATFORM)"/>.</param>
            <param name="page">Handle to the page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> function.</param>
            <param name="modifier">Indicates whether various virtual keys are down. </param>
            <param name="page_x">Specifies the x-coordinate of the cursor in PDF user space.</param>
            <param name="page_y">Specifies the y-coordinate of the cursor in PDF user space.</param>
            <returns>TRUE indicates success; otherwise false.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FORM_OnLButtonDown(System.IntPtr,System.IntPtr,System.Int32,System.Double,System.Double)">
            <summary>
            You can call this member function when the user presses the left mouse button.
            </summary>
            <param name="form_handle">Handle to the form fill module. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFDOC_InitFormFillEnvironment(System.IntPtr,Patagames.Pdf.FPDF_FORMFILLINFO,Patagames.Pdf.IPDF_JSPLATFORM)"/>.</param>
            <param name="page">Handle to the page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> function.</param>
            <param name="modifier">Indicates whether various virtual keys are down. </param>
            <param name="page_x">Specifies the x-coordinate of the cursor in PDF user space.</param>
            <param name="page_y">Specifies the y-coordinate of the cursor in PDF user space.</param>
            <returns>TRUE indicates success; otherwise false.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FORM_OnLButtonUp(System.IntPtr,System.IntPtr,System.Int32,System.Double,System.Double)">
            <summary>
            You can call this member function when the user releases the left mouse button.
            </summary>
            <param name="form_handle">Handle to the form fill module. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFDOC_InitFormFillEnvironment(System.IntPtr,Patagames.Pdf.FPDF_FORMFILLINFO,Patagames.Pdf.IPDF_JSPLATFORM)"/>.</param>
            <param name="page">Handle to the page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> function.</param>
            <param name="modifier">Indicates whether various virtual keys are down. </param>
            <param name="page_x">Specifies the x-coordinate of the cursor in PDF user space.</param>
            <param name="page_y">Specifies the y-coordinate of the cursor in PDF user space.</param>
            <returns>TRUE indicates success; otherwise false.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FORM_OnKeyDown(System.IntPtr,System.IntPtr,Patagames.Pdf.Enums.FWL_VKEYCODE,Patagames.Pdf.Enums.KeyboardModifiers)">
            <summary>
            You can call this member function when a nonsystem key is pressed. A nonsystem key is a key that is pressed when the ALT key is not pressed.
            </summary>
            <param name="form_handle">Handle to the form fill module. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFDOC_InitFormFillEnvironment(System.IntPtr,Patagames.Pdf.FPDF_FORMFILLINFO,Patagames.Pdf.IPDF_JSPLATFORM)"/>.</param>
            <param name="page">Handle to the page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> function.</param>
            <param name="keyCode">Indicates whether various virtual keys are down. </param>
            <param name="modifier">Contains the scan code, key-transition code, previous key state, and context code.</param>
            <returns>TRUE indicates success; otherwise false.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FORM_OnKeyUp(System.IntPtr,System.IntPtr,Patagames.Pdf.Enums.FWL_VKEYCODE,Patagames.Pdf.Enums.KeyboardModifiers)">
            <summary>
            You can call this member function when a nonsystem key is released. 
            </summary>
            <param name="form_handle">Handle to the form fill module. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFDOC_InitFormFillEnvironment(System.IntPtr,Patagames.Pdf.FPDF_FORMFILLINFO,Patagames.Pdf.IPDF_JSPLATFORM)"/>.</param>
            <param name="page">Handle to the page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> function.</param>
            <param name="keyCode">Indicates whether various virtual keys are released. </param>
            <param name="modifier">Contains the scan code, key-transition code, previous key state, and context code.</param>
            <returns>TRUE indicates success; otherwise false.</returns>
            <remarks>In Version 2236 of Pdfium this method is not implemented and always returns False</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FORM_OnChar(System.IntPtr,System.IntPtr,System.Int32,Patagames.Pdf.Enums.KeyboardModifiers)">
            <summary>
            You can call this member function when a keystroke translates to a nonsystem character.
            </summary>
            <param name="form_handle">Handle to the form fill module. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFDOC_InitFormFillEnvironment(System.IntPtr,Patagames.Pdf.FPDF_FORMFILLINFO,Patagames.Pdf.IPDF_JSPLATFORM)"/>.</param>
            <param name="page">Handle to the page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> function.</param>
            <param name="nChar">The character code value of the key.</param>
            <param name="modifier">Contains the scan code, key-transition code, previous key state, and context code.</param>
            <returns>TRUE indicates success; otherwise false.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FORM_ForceToKillFocus(System.IntPtr)">
            <summary>
            You can call this member function to force to kill the focus of the form field which got focus.
            It would kill the focus on the form field, save the value of form field if it's changed by user.
            </summary>
            <param name="form_handle">Handle to the form fill module. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFDOC_InitFormFillEnvironment(System.IntPtr,Patagames.Pdf.FPDF_FORMFILLINFO,Patagames.Pdf.IPDF_JSPLATFORM)"/>.</param>
            <returns>TRUE indicates success; otherwise false.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDPage_HasFormFieldAtPoint(System.IntPtr,System.IntPtr,System.Double,System.Double)">
            <summary>
            Check the form field position by point.
            </summary>
            <param name="form_handle">Handle to the form fill module. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFDOC_InitFormFillEnvironment(System.IntPtr,Patagames.Pdf.FPDF_FORMFILLINFO,Patagames.Pdf.IPDF_JSPLATFORM)"/>.</param>
            <param name="page">Handle to the page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> function.</param>
            <param name="page_x">X position in PDF "user space".</param>
            <param name="page_y">Y position in PDF "user space".</param>
            <returns>Return the type of the formfiled; -1 indicates no fields.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_SetFormFieldHighlightColor(System.IntPtr,Patagames.Pdf.Enums.FormFieldTypes,System.Int32)">
            <summary>
            Set the highlight color of specified or all the form fields in the document.
            </summary>
            <param name="form_handle">Handle to the form fill module. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFDOC_InitFormFillEnvironment(System.IntPtr,Patagames.Pdf.FPDF_FORMFILLINFO,Patagames.Pdf.IPDF_JSPLATFORM)"/>.</param>
            <param name="field_type">A 32-bit integer indicating the type of a form field.</param>
            <param name="color">The highlight color of the form field.Constructed by 0xxxrrggbb.</param>
            <remarks>When the parameter fieldType is set to zero, the highlight color will be applied to all the form fields in the document.
            Please refresh the client window to show the highlight immediately if necessary.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_SetFormFieldHighlightAlpha(System.IntPtr,System.Byte)">
            <summary>
            Set the transparency of the form field highlight color in the document.
            </summary>
            <param name="form_handle">Handle to the form fill module. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFDOC_InitFormFillEnvironment(System.IntPtr,Patagames.Pdf.FPDF_FORMFILLINFO,Patagames.Pdf.IPDF_JSPLATFORM)"/>.</param>
            <param name="alpha">The transparency of the form field highlight color. between 0-255.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_RemoveFormFieldHighlight(System.IntPtr)">
            <summary>
            Remove the form field highlight color in the document.
            </summary>
            <param name="form_handle">Handle to the form fill module. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFDOC_InitFormFillEnvironment(System.IntPtr,Patagames.Pdf.FPDF_FORMFILLINFO,Patagames.Pdf.IPDF_JSPLATFORM)"/>.</param>
            <remarks>Please refresh the client window to remove the highlight immediately if necessary.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_FFLDraw(System.IntPtr,System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,Patagames.Pdf.Enums.PageRotate,Patagames.Pdf.Enums.RenderFlags)">
            <summary>
            Render FormFeilds on a page to a device independent bitmap. 
            </summary>
            <param name="form_handle">Handle to the form fill module. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFDOC_InitFormFillEnvironment(System.IntPtr,Patagames.Pdf.FPDF_FORMFILLINFO,Patagames.Pdf.IPDF_JSPLATFORM)"/>.</param>
            <param name="bitmap">Handle to the device independent bitmap (as the output buffer). Bitmap handle can be created by <see cref="M:Patagames.Pdf.Pdfium.FPDFBitmap_Create(System.Int32,System.Int32,System.Boolean)"/> function.</param>
            <param name="page">Handle to the page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/> function.</param>
            <param name="start_x">Left pixel position of the display area in the device coordinate.</param>
            <param name="start_y">Top pixel position of the display area in the device coordinate.</param>
            <param name="size_x">Horizontal size (in pixels) for displaying the page.</param>
            <param name="size_y">Vertical size (in pixels) for displaying the page.</param>
            <param name="rotate">Page orientation: 0 (normal), 1 (rotated 90 degrees clockwise), 2 (rotated 180 degrees), 3 (rotated 90 degrees counter-clockwise).</param>
            <param name="flags">0 for normal display, or combination of flags defined above.</param>
            <remarks>
            This method is designed to only render annotations and FormFields on the page. 
            Without FPDF_ANNOT specified for flags, Rendering functions such as <see cref="M:Patagames.Pdf.Pdfium.FPDF_RenderPageBitmap(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,Patagames.Pdf.Enums.PageRotate,Patagames.Pdf.Enums.RenderFlags)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDF_RenderPageBitmap_Start(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,Patagames.Pdf.Enums.PageRotate,Patagames.Pdf.Enums.RenderFlags,Patagames.Pdf.IFSDK_PAUSE)"/> will only render page contents(without annotations) to a bitmap.
            In order to implement the FormFill functions,Implementation should call this method after rendering functions finish rendering the page contents.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_AddInstalledFont(System.IntPtr,System.String,Patagames.Pdf.Enums.CharacterSetTypes)">
            <summary>
            Add a system font to the list in Pdfium SDK.
            </summary>
            <param name="mapper">Opaque pointer to Pdfium font mapper</param>
            <param name="face">The font face name</param>
            <param name="charset">Font character set. See <see cref="T:Patagames.Pdf.Enums.CharacterSetTypes"/>.</param>
            <remarks>This function is only called during the system font list building process.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_SetSystemFontInfo(Patagames.Pdf.FPDF_SYSFONTINFO)">
            <summary>
            Set the system font info interface into Pdfium SDK
            </summary>
            <param name="pFontInfo">Pointer to a <see cref="T:Patagames.Pdf.FPDF_SYSFONTINFO"/> structure</param>
            <remarks>Platform support implementation should implement required methods of <see cref="T:Patagames.Pdf.FPDF_SYSFONTINFO"/> interface,
            then call this function during SDK initialization process.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDF_GetDefaultSystemFontInfo">
            <summary>
            Get default system font info interface for current platform
            </summary>
            <returns>Pointer to a <see cref="T:Patagames.Pdf.FPDF_SYSFONTINFO"/> structure describing the default interface.
            Or NULL if the platform doesn't have a default interface.
            Application should call <see cref="M:Patagames.Pdf.Pdfium.FPDF_FreeMemory(System.IntPtr)"/> to free the returned pointer.</returns>
            <remarks>For some platforms Pdfium SDK implement a default Version of system font info interface.
            The default implementation can be used in <see cref="M:Patagames.Pdf.Pdfium.FPDF_SetSystemFontInfo(Patagames.Pdf.FPDF_SYSFONTINFO)"/> function.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObj_GetType(System.IntPtr)">
            <summary>
            Gets page object type.
            </summary>
            <param name="page_object">Handle to a page object.</param>
            <returns>Returns one of the FPDF_PAGEOBJ_xxxx constants defined following.
            <para>FPDF_PAGEOBJ_TEXT 1</para>
            <para>FPDF_PAGEOBJ_PATH 2</para>
            <para>FPDF_PAGEOBJ_IMAGE 3</para>
            <para>FPDF_PAGEOBJ_SHADING 4</para>
            <para>FPDF_PAGEOBJ_FORM 5</para>
            </returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)">
            <summary>
            Create new page object specified by type
            </summary>
            <param name="type">Types of page object</param>
            <returns>Handle to a page object</returns>
            <remarks>
            Currently, It can be "PDFPAGE_TEXT", "PDFPAGE_IMAGE", "PDFPAGE_PATH",
            "PDFPAGE_SHADING", "PDFPAGE_FORM"
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObj_Copy(System.IntPtr,System.IntPtr)">
            <summary>
            Copy page object information from one to another
            </summary>
            <param name="dstPage_obj">Handle to destination page object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_GetObject(System.IntPtr,System.Int32)"/></param>
            <param name="srcPage_obj">Handle to source page object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_GetObject(System.IntPtr,System.Int32)"/></param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObj_Clone(System.IntPtr)">
            <summary>
            Create a new page object based on this page object.
            </summary>
            <param name="srcPage_obj">Handle to a page object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_GetObject(System.IntPtr,System.Int32)"/></param>
            <returns>Handle to a page object.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObj_RemoveClipPath(System.IntPtr)">
            <summary>
            Remove a clip from the page object.
            </summary>
            <param name="page_obj">Handle to a page object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_GetObject(System.IntPtr,System.Int32)"/></param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObj_AppendClipPath(System.IntPtr,System.IntPtr,Patagames.Pdf.Enums.FillModes,System.Boolean)">
            <summary>
            Append a path to the current clip
            </summary>
            <param name="page_obj">Handle to a page object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_GetObject(System.IntPtr,System.Int32)"/></param>
            <param name="path">Handle to a path.</param>
            <param name="type">The fill mode types defined following. FPDF_FILL_NULL= 0, FPDF_FILL_ALTERNATE = 1, FPDF_FILL_WINDING = 2</param>
            <param name="bAutoMerge">True for auto merge</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObj_CopyClipPath(System.IntPtr,System.IntPtr)">
            <summary>
            Copy clip path from one page object to another
            </summary>
            <param name="dstPageObject">Handle to a destination page object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_GetObject(System.IntPtr,System.Int32)"/></param>
            <param name="srcPageObject">Handle to a source page object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_GetObject(System.IntPtr,System.Int32)"/></param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObj_GetBBox(System.IntPtr,Patagames.Pdf.FS_MATRIX,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Get page object bounding box.
            </summary>
            <param name="page_obj">Handle to a page object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_GetObject(System.IntPtr,System.Int32)"/></param>
            <param name="pMatrix">Modify bounding box before return. Can be null</param>
            <param name="left">Pointer to a double value receiving the left of a rectangle (in points).</param>
            <param name="top">Pointer to a double value receiving the bottom of a rectangle (in points).</param>
            <param name="right">Pointer to a double value receiving the right of a rectangle (in points).</param>
            <param name="bottom">Pointer to a double value receiving the top of a rectangle (in points).</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObj_GetFillColor(System.IntPtr)">
            <summary>
            Get the fill color of a page object.
            </summary>
            <param name="page_obj">Handle to a page object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_Create(Patagames.Pdf.Enums.PageObjectTypes)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_GetObject(System.IntPtr,System.Int32)"/></param>
            <returns>The fill color of a page object. Constructed by 0xaarrggbb.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObj_GetStrokeColor(System.IntPtr)">
            <summary>
            Get the stroke color of a page object.
            </summary>
            <param name="page_obj">Handle of page object, could be text_object, path_object and uncolored images.</param>
            <returns>The stroke color of a page object. Constructed by 0xaarrggb</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObj_SetFillColor(System.IntPtr,System.Int32)">
            <summary>
            Set the fill color of a page object.
            </summary>
            <param name="page_obj">Handle of page object, could be text_object, path_object and uncolored images.</param>
            <param name="argb">The fill color of a page object. Constructed by 0xaarrggbb.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFPageObj_SetStrokeColor(System.IntPtr,System.Int32)">
            <summary>
            Set the stroke color of a page object.
            </summary>
            <param name="page_obj">Handle of page object, could be text_object, path_object and uncolored images.</param>
            <param name="argb">The stroke color of a page object. Constructed by 0xaarrggbb.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFImageObj_GetCloneBitmap(System.IntPtr)">
            <summary>
            Get the copy of bitmap from an image object.
            </summary>
            <param name="image_object">Handle of image object returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFPageObj_NewImgeObj(System.IntPtr)"/> or <see cref="M:Patagames.Pdf.Pdfium.FPDFPage_GetObject(System.IntPtr,System.Int32)"/>.</param>
            <returns>The handle of the bitmap.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFImageObj_Transform(System.IntPtr,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Transform (scale, rotate, shear, move) image object.
            </summary>
            <param name="image_obj"></param>
            <param name="a">The coefficient "a" of the matrix.</param>
            <param name="b">The coefficient "b" of the matrix.</param>
            <param name="c">The coefficient "c" of the matrix.</param>
            <param name="d">The coefficient "d" of the matrix.</param>
            <param name="e">The coefficient "e" of the matrix. (x position)</param>
            <param name="f">The coefficient "f" of the matrix. (y position)</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFImageObj_CalcBoundingBox(System.IntPtr)">
            <summary>
            Calculate bounding box
            </summary>
            <param name="image_obj"></param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFBitmap_GetFormat(System.IntPtr)">
            <summary>
            Gets bitmap format
            </summary>
            <param name="bitmap">Handle to the bitmap.</param>
            <returns>Bitmap format</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFBitmap_GetPitch(System.IntPtr)">
            <summary>
            Gets bitmap pitch
            </summary>
            <param name="bitmap">Handle to the bitmap.</param>
            <returns>Bitmap pitch</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FFPDFBitmap_GetPaletteSize(System.IntPtr)">
            <summary>
            Gets bitmap palette size
            </summary>
            <param name="bitmap">Handle to the bitmap.</param>
            <returns>Bitmap palette size</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FFPDFBitmap_GetPalette(System.IntPtr)">
            <summary>
            Gets bitmap palette
            </summary>
            <param name="bitmap">Handle to the bitmap.</param>
            <returns>Bitmap palette</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FFPDFBitmap_GetBPP(System.IntPtr)">
            <summary>
            Gets bit per pixel
            </summary>
            <param name="bitmap">Handle to the bitmap.</param>
            <returns>Number of bits per pixel</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FFPDFBitmap_IsAlphaMask(System.IntPtr)">
            <summary>
            Returns true if the bitmap has alpha mask 
            </summary>
            <param name="bitmap">Handle to bitmap</param>
            <returns>True if this image has alpha mask and False otherwise</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FFPDFBitmap_HasAlpha(System.IntPtr)">
            <summary>
            Returns true if this bitmap has alpha channel
            </summary>
            <param name="bitmap">Handle to bitmap</param>
            <returns>True if this image has alpha channel and False otherwise</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FFPDFBitmap_IsOpaqueImage(System.IntPtr)">
            <summary>
            Returns true if this bitmap is opaque
            </summary>
            <param name="bitmap">Handle to bitmap</param>
            <returns>True if this bitmap has is opaque</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FFPDFBitmap_IsCmykImage(System.IntPtr)">
            <summary>
            Returns true if this bitmap is cmyk image
            </summary>
            <param name="bitmap">Handle to bitmap</param>
            <returns>True if this bitmap is cmyk image</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FFPDFBitmap_GetPaletteEntry(System.IntPtr,System.Int32)">
            <summary>
            Gets the palette color at specified index.
            </summary>
            <param name="bitmap">Handle to bitmap</param>
            <param name="index">Palette index</param>
            <returns>The palette color constructed by 0xaarrggbb.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FFPDFBitmap_SetPaletteEntry(System.IntPtr,System.Int32,System.Int32)">
            <summary>
            Sets the palette color at specified index.
            </summary>
            <param name="bitmap">Handle to bitmap</param>
            <param name="index">Palette index</param>
            <param name="entry">Palette color constructed by 0xaarrggbb.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FFPDFBitmap_GetPaletteArgb(System.IntPtr,System.Int32)">
            <summary>
            Gets the palette color at specified index.
            </summary>
            <param name="bitmap">Handle to bitmap</param>
            <param name="index">Palette index</param>
            <returns>The palette color constructed by 0xaarrggbb.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FFPDFBitmap_SetPaletteArgb(System.IntPtr,System.Int32,System.Int32)">
            <summary>
            Sets the palette color at specified index.
            </summary>
            <param name="bitmap">Handle to bitmap</param>
            <param name="index">Palette index</param>
            <param name="argb">Palette color constructed by 0xaarrggbb.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FFPDFBitmap_CopyPalette(System.IntPtr,System.Int32[])">
            <summary>
            Copy specified palette o the bitmap
            </summary>
            <param name="bitmap">Handle to the bitmap</param>
            <param name="srcPal">Palette array</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FFPDFBitmap_Clone(System.IntPtr,Patagames.Pdf.FX_RECT)">
            <summary>
            Clone specified bitmap with specified clip
            </summary>
            <param name="bitmap">Handle to the bitmap</param>
            <param name="clip">Clipping rectangle</param>
            <returns>Handle to the new bitmap</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FFPDFBitmap_CloneConvert(System.IntPtr,Patagames.Pdf.Enums.BitmapFormats,Patagames.Pdf.FX_RECT)">
            <summary>
            Convert and clone specified bitmap with specified clip
            </summary>
            <param name="bitmap">Handle to the bitmap</param>
            <param name="format">Format for new bitmap</param>
            <param name="clip">Clipping rectangle</param>
            <returns>Handle to the new bitmap</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FFPDFBitmap_StretchTo(System.IntPtr,System.Int32,System.Int32,System.Int32,Patagames.Pdf.FX_RECT)">
            <summary>
            Stretch specified bitmap with specified clip
            </summary>
            <param name="bitmap">Handle to the bitmap</param>
            <param name="dest_width">With for destination bitmap</param>
            <param name="dest_height">Height for destination bitmap</param>
            <param name="flags">Flags</param>
            <param name="clip">Clipping rectangle</param>
            <returns>Handle to the new bitmap</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FFPDFBitmap_TransformTo(System.IntPtr,Patagames.Pdf.FS_MATRIX,System.Int32@,System.Int32@,System.Int32,Patagames.Pdf.FX_RECT)">
            <summary>
            Transform specified bitmap with specified matrix and clip
            </summary>
            <param name="bitmap">Handle to the bitmap</param>
            <param name="pMatrix">With for destination bitmap</param>
            <param name="left">Left</param>
            <param name="top">Top</param>
            <param name="flags">Flags</param>
            <param name="pClip">Clipping rectangle</param>
            <returns>Handle to the new bitmap</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FFPDFBitmap_GetAlphaMask(System.IntPtr,Patagames.Pdf.FX_RECT)">
            <summary>
            Gets alpha mask for specified bitmap
            </summary>
            <param name="bitmap">Handle to bitmap</param>
            <param name="pClip">clipping recangle</param>
            <returns>Handle to the bitmap contained alpha mask</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FFPDFBitmap_SwapXY(System.IntPtr,System.Boolean,System.Boolean,Patagames.Pdf.FX_RECT)">
            <summary>
            Swap X and Y in specified bitmap
            </summary>
            <param name="bitmap">Handle to the bitmap</param>
            <param name="bXFlip">True for flip by X</param>
            <param name="bYFlip"> True for flip by Y</param>
            <param name="pClip">Clipping rectangle</param>
            <returns>Handle to the new bitmap</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FFPDFBitmap_FlipImage(System.IntPtr,System.Boolean,System.Boolean)">
            <summary>
            Flip X and Y in specified bitmap
            </summary>
            <param name="bitmap">Handle to the bitmap</param>
            <param name="bXFlip">True for flip by X</param>
            <param name="bYFlip"> True for flip by Y</param>
            <returns>Handle to the new bitmap</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FFPDFBitmap_CopyAlphaMask(System.IntPtr,System.IntPtr,Patagames.Pdf.FX_RECT)">
            <summary>
            Copy alpha mask from one bitmap to another
            </summary>
            <param name="bitmap">Handle to the destination bitmap</param>
            <param name="alphaMask">Handle too the bitmap that cobtains alpha mask</param>
            <param name="pClip">Clippig rectangle</param>
            <returns>True for succsesful, false otherwise</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FORM_GetInterForm(System.IntPtr)">
            <summary>
            Initialize the interactive forms
            </summary>
            <param name="form_handle">Handle to the form fill module. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFDOC_InitFormFillEnvironment(System.IntPtr,Patagames.Pdf.FPDF_FORMFILLINFO,Patagames.Pdf.IPDF_JSPLATFORM)"/>.</param>
            <returns>The handle to the interactive forms object</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetFormNotify(System.IntPtr)">
            <summary>
            Gets Form Notify object
            </summary>
            <param name="interForm">Handle to interactive forms. Returned by <see cref="M:Patagames.Pdf.Pdfium.FORM_GetInterForm(System.IntPtr)"/> function.</param>
            <returns>Form Notify object which used for notification about changes in forms.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFInterForm_SetFormNotify(System.IntPtr,Patagames.Pdf.FPDF_FORMFILLNOTIFY)">
            <summary>
            Sets Form Notify object
            </summary>
            <param name="interForm">Handle to interactive forms. Returned by <see cref="M:Patagames.Pdf.Pdfium.FORM_GetInterForm(System.IntPtr)"/> function.</param>
            <param name="pNotify">Handle to Form Notify object which used for notification about changes in forms./&gt;</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFInterForm_CountFields(System.IntPtr,System.String)">
            <summary>
            Recursively calculates the number of Fields in an field's tree of the document
            </summary>
            <param name="interForm">Handle to interactive forms. Returned by <see cref="M:Patagames.Pdf.Pdfium.FORM_GetInterForm(System.IntPtr)"/> function.</param>
            <param name="csFieldName">The name of the parent field in the hierarchy of fields or null for the root.</param>
            <returns>Total number of all child fields for the parent field.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetField(System.IntPtr,System.Int32,System.String)">
            <summary>
            Gets field specified by a index and a parent field in the hierarchy of fields
            </summary>
            <param name="interForm">Handle to interactive forms. Returned by <see cref="M:Patagames.Pdf.Pdfium.FORM_GetInterForm(System.IntPtr)"/> function.</param>
            <param name="index">Index of Field ranging from 0 to <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_CountFields(System.IntPtr,System.String)"/></param>
            <param name="csFieldName">The name of the parent field in the hierarchy of fields or null for the root.</param>
            <returns>The Field object from the hierarchy of document's fields.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFInterForm_IsValidFormField(System.IntPtr,System.IntPtr)">
            <summary>
            Determines that specified Field is a valid Field from the hierarchy of documents fields
            </summary>
            <param name="interForm">Handle to interactive forms. Returned by <see cref="M:Patagames.Pdf.Pdfium.FORM_GetInterForm(System.IntPtr)"/> function.</param>
            <param name="field">Field objects. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetField(System.IntPtr,System.Int32,System.String)"/> function.</param>
            <returns>True if the specified Field is present in the list of fields of the document or False otherwise.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFInterForm_CountControls(System.IntPtr,System.String)">
            <summary>
            Get total number of controls in a specified field
            </summary>
            <param name="interForm">Handle to interactive forms. Returned by <see cref="M:Patagames.Pdf.Pdfium.FORM_GetInterForm(System.IntPtr)"/> function.</param>
            <param name="csFieldName">The name of the field in the hierarchy of fields.</param>
            <returns>Total number of controls in the field.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetControl(System.IntPtr,System.Int32,System.String)">
            <summary>
            Gets control specified by a index for specified field
            </summary>
            <param name="interForm">Handle to interactive forms. Returned by <see cref="M:Patagames.Pdf.Pdfium.FORM_GetInterForm(System.IntPtr)"/> function.</param>
            <param name="index">Index of Control ranging from 0 to <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_CountControls(System.IntPtr,System.String)"/></param>
            <param name="csFieldName">The name of the field in the hierarchy of fields.</param>
            <returns>The Control object.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFInterForm_IsValidFormControl(System.IntPtr,System.IntPtr)">
            <summary>
            Determines that specified Control is a valid Control
            </summary>
            <param name="interForm">Handle to interactive forms. Returned by <see cref="M:Patagames.Pdf.Pdfium.FORM_GetInterForm(System.IntPtr)"/> function.</param>
            <param name="control">Handle to the Control object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetControl(System.IntPtr,System.Int32,System.String)"/> function.</param>
            <returns>True if the specified Field is present in the list of fields of the document or False otherwise.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFInterForm_CountPageControls(System.IntPtr,System.IntPtr)">
            <summary>
            Get total number of controls on a specified page
            </summary>
            <param name="interForm">Handle to interactive forms. Returned by <see cref="M:Patagames.Pdf.Pdfium.FORM_GetInterForm(System.IntPtr)"/> function.</param>
            <param name="page">Handle to the page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/>function.</param>
            <returns>Total number of controls on a page.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetPageControl(System.IntPtr,System.IntPtr,System.Int32)">
            <summary>
            Gets control specified by a index for specified page 
            </summary>
            <param name="interForm">Handle to interactive forms. Returned by <see cref="M:Patagames.Pdf.Pdfium.FORM_GetInterForm(System.IntPtr)"/> function.</param>
            <param name="page">Handle to the page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/>function.</param>
            <param name="index">Index of Control ranging from 0 to <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_CountPageControls(System.IntPtr,System.IntPtr)"/></param>
            <returns>The Control object.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFInterForm_CountFieldsInCalculationOrder(System.IntPtr)">
            <summary>
            Get total number of fields with calculation actions
            </summary>
            <param name="interForm">Handle to interactive forms. Returned by <see cref="M:Patagames.Pdf.Pdfium.FORM_GetInterForm(System.IntPtr)"/> function.</param>
            <returns> Count total number of elements in array of indirect references to field dictionaries with calculation actions, defining the calculation order in which their values will be recalculated when the value of any field changes </returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetFieldInCalculationOrder(System.IntPtr,System.Int32)">
            <summary>
            Gets field with calculation actions specified by a index 
            </summary>
            <param name="interForm">Handle to interactive forms. Returned by <see cref="M:Patagames.Pdf.Pdfium.FORM_GetInterForm(System.IntPtr)"/> function.</param>
            <param name="index">Index of a field ranging from 0 to <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_CountFieldsInCalculationOrder(System.IntPtr)"/></param>
            <returns>Field from an array of indirect references to field dictionaries with calculation actions. </returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFInterForm_FindFieldInCalculationOrder(System.IntPtr,System.IntPtr)">
            <summary>
            Find specified field in an array of indirect references to field dictionaries with calculation actions.
            </summary>
            <param name="interForm">Handle to interactive forms. Returned by <see cref="M:Patagames.Pdf.Pdfium.FORM_GetInterForm(System.IntPtr)"/> function.</param>
            <param name="field">Handle to the Field. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetFieldInCalculationOrder(System.IntPtr,System.Int32)"/></param>
            <returns>Zero based index of a Field in fields array or -1 if no any fields was found.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFInterForm_ExportToFDF(System.IntPtr,System.String,System.Boolean)">
            <summary>
            Export fields into Forms Data Format (FDF) document
            </summary>
            <param name="interForm">Handle to interactive forms. Returned by <see cref="M:Patagames.Pdf.Pdfium.FORM_GetInterForm(System.IntPtr)"/> function.</param>
            <param name="pdf_path">Path to the source file: the PDF document file that this FDF file was exported from. </param>
            <param name="bSimpleFileSpec">True for simple file specification, false otherwise/</param>
            <returns>New PDF document which contain FDF</returns>
            <remarks>
            A PDF file can refer to the contents of another file by using a file specification (PDF 1.1), which can take either of two forms:
            <list type="bullet">
            <item>
            A simple file specification gives just the name of the target file in a standard format, independent of the naming conventions of any particular file system. It
            can take the form of either a string or a dictionary
            </item>
            <item>
            A full file specification includes information related to one or more specific file systems. It can only be represented as a dictionary. 
            </item>
            </list>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFInterForm_ImportFromFDF(System.IntPtr,System.IntPtr,System.Boolean)">
            <summary>
            Import fields from Forms Data Format (FDF) document
            </summary>
            <param name="interForm">Handle to interactive forms. Returned by <see cref="M:Patagames.Pdf.Pdfium.FORM_GetInterForm(System.IntPtr)"/> function.</param>
            <param name="Doc">Handle to PDF Doument which contain FDF</param>
            <param name="bNotify">True for notify application about changes in forms</param>
            <returns>True for success or False otherwise</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFInterForm_ResetForm(System.IntPtr,System.Boolean)">
            <summary>
            Resets forms to their default values
            </summary>
            <param name="interForm">Handle to interactive forms. Returned by <see cref="M:Patagames.Pdf.Pdfium.FORM_GetInterForm(System.IntPtr)"/> function.</param>
            <param name="bNotify">True for notify application about changes in forms</param>
            <returns>True for success or False otherwise</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFInterForm_ReloadForm(System.IntPtr)">
            <summary>
            Reload forms
            </summary>
            <param name="interForm">Handle to interactive forms. Returned by <see cref="M:Patagames.Pdf.Pdfium.FORM_GetInterForm(System.IntPtr)"/> function.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFInterForm_HasXFAForm(System.IntPtr)">
            <summary>
            Determines that the document contains XFA Forms
            </summary>
            <param name="interForm">Handle to interactive forms. Returned by <see cref="M:Patagames.Pdf.Pdfium.FORM_GetInterForm(System.IntPtr)"/> function.</param>
            <returns>True if PDF document contains XFA Forms, False otherwise</returns>
            <remarks>
            <para>PDF 1.5 introduces support for interactive forms based on the Adobe XML Forms Architecture (XFA). The XFA entry in the interactive forms dictionary specifies an XFA resource, which is an XML stream that contains the
            form information. The format of an XFA resource is described in the XML Data Package (XDP) Specification</para>
            <para>
            </para>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFInterForm_FixPageFields(System.IntPtr,System.IntPtr)">
            <summary>
            Fix page fields
            </summary>
            <param name="interForm">Handle to interactive forms. Returned by <see cref="M:Patagames.Pdf.Pdfium.FORM_GetInterForm(System.IntPtr)"/> function.</param>
            <param name="page">Handle to the page. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDF_LoadPage(System.IntPtr,System.Int32)"/>function.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormControl_GetType(System.IntPtr)">
            <summary>
            Get type of a field associated with specified control.
            </summary>
            <param name="frmControl">Handle to the Control object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetControl(System.IntPtr,System.Int32,System.String)"/> function.</param>
            <returns>type of a field associated with specified control.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormControl_GetField(System.IntPtr)">
            <summary>
            Get field associated with specified control.
            </summary>
            <param name="frmControl">Handle to the Control object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetControl(System.IntPtr,System.Int32,System.String)"/> function.</param>
            <returns>Field associated with specified control.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormControl_GetRect(System.IntPtr,System.Single@,System.Single@,System.Single@,System.Single@)">
            <summary>
            Get bounding rectanghle of specified control
            </summary>
            <param name="frmControl">Handle to the Control object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetControl(System.IntPtr,System.Int32,System.String)"/> function.</param>
            <param name="left">The left of the rectangle.</param>
            <param name="bottom">The bottom of the rectangle.</param>
            <param name="right">The right of the rectangle.</param>
            <param name="top">The top of the rectangle.</param>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormControl_GetExportValue(System.IntPtr)">
            <summary>
            Get a string describing the check status of the Checkbox or Radiobutton.
            </summary>
            <param name="frmControl">Handle to the Control object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetControl(System.IntPtr,System.Int32,System.String)"/> function.</param>
            <returns>string such as "", "Yes", "Off" etc. depended on control and its status.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormControl_IsChecked(System.IntPtr)">
            <summary>
            Gets whether the Checkbox or Radiobutton is checked.
            </summary>
            <param name="frmControl">Handle to the Control object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetControl(System.IntPtr,System.Int32,System.String)"/> function.</param>
            <returns>True if checkbox or Radiobutton is checked, False otherwise.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormControl_IsDefaultChecked(System.IntPtr)">
            <summary>
            Get a default state of the checkbox or Radiobutton.
            </summary>
            <param name="frmControl">Handle to the Control object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetControl(System.IntPtr,System.Int32,System.String)"/> function.</param>
            <returns>True if default state is checked, False otherwise.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormControl_GetHighlightingMode(System.IntPtr)">
            <summary>
            Get the highlighting mode of specified control
            </summary>
            <param name="frmControl">Handle to the Control object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetControl(System.IntPtr,System.Int32,System.String)"/> function.</param>
            <returns>One of the <see cref="T:Patagames.Pdf.Enums.FormHighlightingMode"/> value</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormControl_HasMKEntry(System.IntPtr,System.String)">
            <summary>
            Gets whether the control has MK entry.
            </summary>
            <param name="frmControl">Handle to the Control object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetControl(System.IntPtr,System.Int32,System.String)"/> function.</param>
            <param name="csEntry">MK entry. "R", "BC", "BG" and so on. See detils in <a href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF reference 1.7.pdf</a></param>
            <returns>True if entry exists, False otherwise</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormControl_GetRotation(System.IntPtr)">
            <summary>
            Get the number of degrees by which the control is rotated counterclockwise relative to the page. The value must be a multiple of 90.
            </summary>
            <param name="frmControl">Handle to the Control object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetControl(System.IntPtr,System.Int32,System.String)"/> function.</param>
            <returns>number of degrees by which the control is rotated counterclockwise relative to the page. The value must be a multiple of 90.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormControl_GetBorderColor(System.IntPtr,Patagames.Pdf.Enums.ColorTypes@)">
            <summary>
            Get the color of control's border in ARGB format
            </summary>
            <param name="frmControl">Handle to the Control object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetControl(System.IntPtr,System.Int32,System.String)"/> function.</param>
            <param name="iColorType">Color type.</param>
            <returns>Border color of control in ARGB format</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormControl_GetOriginalBorderColor(System.IntPtr,System.Int32)">
            <summary>
            Get the color of control's border in original PDF format
            </summary>
            <param name="frmControl">Handle to the Control object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetControl(System.IntPtr,System.Int32,System.String)"/> function.</param>
            <param name="index">Index of a color component, depended on color type.</param>
            <returns>Numbers in the range 0.0 to 1.0 specifying the color of the control's border</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormControl_GetOriginalBorderColorEx(System.IntPtr,Patagames.Pdf.Enums.ColorTypes@)">
            <summary>
            Get the color of control's border in original PDF format
            </summary>
            <param name="frmControl">Handle to the Control object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetControl(System.IntPtr,System.Int32,System.String)"/> function.</param>
            <param name="iColorType">Color type</param>
            <returns>An array of numbers in the range 0.0 to 1.0 specifying the color of the control's border</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormControl_GetBackgroundColor(System.IntPtr,Patagames.Pdf.Enums.ColorTypes@)">
            <summary>
            Get the color of control's background in ARGB format
            </summary>
            <param name="frmControl">Handle to the Control object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetControl(System.IntPtr,System.Int32,System.String)"/> function.</param>
            <param name="iColorType">Color type.</param>
            <returns>Background color of control in ARGB format</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormControl_GetOriginalBackgroundColor(System.IntPtr,System.Int32)">
            <summary>
            Get the color of control's background in original PDF format
            </summary>
            <param name="frmControl">Handle to the Control object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetControl(System.IntPtr,System.Int32,System.String)"/> function.</param>
            <param name="index">Index of a color component, depended on color type.</param>
            <returns>Numbers in the range 0.0 to 1.0 specifying the color of the control's background</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormControl_GetOriginalBackgroundColorEx(System.IntPtr,Patagames.Pdf.Enums.ColorTypes@)">
            <summary>
            Get the color of control's background in original PDF format
            </summary>
            <param name="frmControl">Handle to the Control object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetControl(System.IntPtr,System.Int32,System.String)"/> function.</param>
            <param name="iColorType">Color type</param>
            <returns>An array of numbers in the range 0.0 to 1.0 specifying the color of the control's background</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormControl_GetNormalCaption(System.IntPtr)">
            <summary>
            The controls normal caption, displayed when it is not interacting with the user.
            </summary>
            <param name="frmControl">Handle to the Control object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetControl(System.IntPtr,System.Int32,System.String)"/> function.</param>
            <returns>String that represents controls normal caption</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormControl_GetRolloverCaption(System.IntPtr)">
            <summary>
            The controls rollover caption, displayed when the user rolls the cursor into its active area without pressing the mouse button. 
            </summary>
            <param name="frmControl">Handle to the Control object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetControl(System.IntPtr,System.Int32,System.String)"/> function.</param>
            <returns>String that represents controls rollover caption</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormControl_GetDownCaption(System.IntPtr)">
            <summary>
            The controls alternate (down) caption, displayed when the mouse button is pressed within its active area. 
            </summary>
            <param name="frmControl">Handle to the Control object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetControl(System.IntPtr,System.Int32,System.String)"/> function.</param>
            <returns>String that represents controls down caption</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormControl_GetTextPosition(System.IntPtr)">
            <summary>
            Get a code indicating where to position the text of the widget annotation’s caption relative to its icon
            </summary>
            <param name="frmControl">Handle to the Control object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetControl(System.IntPtr,System.Int32,System.String)"/> function.</param>
            <returns>A code indicating where to position the text ofthe widget annotation’s caption relative to its icon</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormControl_GetAction(System.IntPtr)">
            <summary>
            Get Action for specified control
            </summary>
            <param name="frmControl">Handle to the Control object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetControl(System.IntPtr,System.Int32,System.String)"/> function.</param>
            <returns>Handle to the control's action</returns>
            <remarks>
            Instead of simply jumping to a destination in the document, an annotation or
            outline item can specify an action (PDF 1.1) for the viewer application to perform,
            such as launching an application, playing a sound, or changing an annotation’s
            appearance state. The optional A entry in the annotation or outline item
            dictionary (see Tables 8.15 on page 606 and 8.4 on page 585) specifies an action
            to be performed when the annotation or outline item is activated; in PDF 1.2, a
            variety of other circumstances may trigger an action as well (see Section 8.5.2,
            “Trigger Events”). In addition, the optional OpenAction entry in a document’s
            catalog (Section 3.6.1, “Document Catalog”) may specify an action to be performed
            when the document is opened. PDF includes a wide variety of standard
            action types, described in detail in Section 8.5.3, “Action Types.” 
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormControl_GetAdditionalAction(System.IntPtr)">
            <summary>
            Get the Additional Action for specified control
            </summary>
            <param name="frmControl">Handle to the Control object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetControl(System.IntPtr,System.Int32,System.String)"/> function.</param>
            <returns>Handle to the control's action</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormControl_GetControlAlignment(System.IntPtr)">
            <summary>
            Get a code specifying the form of quadding (justification) to beused in displaying the text.
            </summary>
            <param name="frmControl">Handle to the Control object. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetControl(System.IntPtr,System.Int32,System.String)"/> function.</param>
            <returns>A code specifying the form of quadding (justification) to be used in displaying the text </returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormField_GetFullName(System.IntPtr)">
            <summary>
            Get field full name
            </summary>
            <param name="frmField">Handle to field. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetField(System.IntPtr,System.Int32,System.String)"/> function./</param>
            <returns>Fiekd full name</returns>
            <remarks>
            <para> 
            The fully qualified field name is not explicitly defined but is constructed from the partial field names of the field and all of its
            ancestors. For a field with no parent, the partial and fully qualified names are the same. For a field that is the child of another field, the fully qualified name is
            formed by appending the child field’s partial name to the parent’s fully qualified name, separated by a period (.): parent’s_full_name.child’s_partial_name
            </para>
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormField_GetType(System.IntPtr)">
            <summary>
            Get the type of field
            </summary>
            <param name="frmField">Handle to field. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetField(System.IntPtr,System.Int32,System.String)"/> function./</param>
            <returns>Field type</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormField_ResetField(System.IntPtr,System.Boolean)">
            <summary>
            Resets field to it default values
            </summary>
            <param name="frmField">Handle to interactive forms. Returned by <see cref="M:Patagames.Pdf.Pdfium.FORM_GetInterForm(System.IntPtr)"/> function.</param>
            <param name="bNotify">True for notify application about changes in forms</param>
            <returns>True for success or False otherwise</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormField_CountControls(System.IntPtr)">
            <summary>
            Get total number of controls in a specified field
            </summary>
            <param name="frmField">Handle to interactive forms. Returned by <see cref="M:Patagames.Pdf.Pdfium.FORM_GetInterForm(System.IntPtr)"/> function.</param>
            <returns>Total number of controls in the field.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormField_GetControl(System.IntPtr,System.Int32)">
            <summary>
            Gets control specified by a index for specified field
            </summary>
            <param name="frmField">Handle to interactive forms. Returned by <see cref="M:Patagames.Pdf.Pdfium.FORM_GetInterForm(System.IntPtr)"/> function.</param>
            <param name="index">Index of Control ranging from 0 to <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_CountControls(System.IntPtr,System.String)"/></param>
            <returns>Handle to the Control object.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormField_GetControlIndex(System.IntPtr,System.IntPtr)">
            <summary>
            Gets control's index in specified field
            </summary>
            <param name="frmField">Handle to interactive forms. Returned by <see cref="M:Patagames.Pdf.Pdfium.FORM_GetInterForm(System.IntPtr)"/> function.</param>
            <param name="pControl">Handle to the control object</param>
            <returns>Zero based index of a control in specified field or -1 if no any fields was found.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormField_GetFieldType(System.IntPtr)">
            <summary>
            Get the type of field
            </summary>
            <param name="frmField">Handle to field. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetField(System.IntPtr,System.Int32,System.String)"/> function./</param>
            <returns>Field type</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormField_GetAdditionalAction(System.IntPtr)">
            <summary>
            Get additional-action
            </summary>
            <param name="frmField">Handle to field. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetField(System.IntPtr,System.Int32,System.String)"/> function./</param>
            <returns>Additional-action defining the field’s behavior in response to various trigger events. 
            This entry has exactly the same meaning as the AA entry in an annotation</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormField_GetAlternateName(System.IntPtr)">
            <summary>
            Get alternate field name.
            </summary>
            <param name="frmField">Handle to field. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetField(System.IntPtr,System.Int32,System.String)"/> function./</param>
            <returns>String what contains alternate field name.</returns>
            <remarks> An alternate field name to be used in place of the actual field name wherever the field must be identified in the user 
            interface (such as in error or status messages referring to the field). This text is also useful when
            extracting the document’s contents in support of accessibility to users with
            disabilities or for other purposes.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormField_GetMappingName(System.IntPtr)">
            <summary>
            Get mapping field name.
            </summary>
            <param name="frmField">Handle to field. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetField(System.IntPtr,System.Int32,System.String)"/> function./</param>
            <returns>String what contains mapping field name.</returns>
            <remarks>The mapping name to be used when exporting interactive form field data from the document. </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormField_GetFieldFlags(System.IntPtr)">
            <summary>
            Get field flags
            </summary>
            <param name="frmField">Handle to field. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetField(System.IntPtr,System.Int32,System.String)"/> function./</param>
            <returns>Field's flags specifying various characteristics of the field.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormField_GetDefaultStyle(System.IntPtr)">
            <summary>
            Get a default style string
            </summary>
            <param name="frmField">Handle to field. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetField(System.IntPtr,System.Int32,System.String)"/> function./</param>
            <returns>A default style string</returns>
            <remarks>
            Beginning with PDF 1.5, the text contents of variable text form fields, as well as
            markup annotations, can include formatting (style) information. These rich text
            strings are fully-formed XML documents that conform to the rich text conventions
            specified for the XML Forms Architecture (XFA) specification, which is itself
            a subset of the XHTML 1.0 specification, augmented with a restricted set of
            CSS2 style attributes. 
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormField_GetRichTextString(System.IntPtr)">
            <summary>
            Get a rich text string
            </summary>
            <param name="frmField">Handle to field. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetField(System.IntPtr,System.Int32,System.String)"/> function./</param>
            <returns>A rich text string</returns>
            <remarks>
            Beginning with PDF 1.5, the text contents of variable text form fields, as well as
            markup annotations, can include formatting (style) information. These rich text
            strings are fully-formed XML documents that conform to the rich text conventions
            specified for the XML Forms Architecture (XFA) specification, which is itself
            a subset of the XHTML 1.0 specification, augmented with a restricted set of
            CSS2 style attributes. 
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormField_GetValue(System.IntPtr)">
            <summary>
            Get field's value
            </summary>
            <param name="frmField">Handle to field. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetField(System.IntPtr,System.Int32,System.String)"/> function./</param>
            <returns>Field's value</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormField_GetDefaultValue(System.IntPtr)">
            <summary>
            Get field's default value
            </summary>
            <param name="frmField">Handle to field. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetField(System.IntPtr,System.Int32,System.String)"/> function./</param>
            <returns>Field's default value</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormField_SetValue(System.IntPtr,System.String,System.Boolean)">
            <summary>
            Set field's value
            </summary>
            <param name="frmField">Handle to field. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetField(System.IntPtr,System.Int32,System.String)"/> function./</param>
            <param name="value">New value</param>
            <param name="bNotify">True for notify application about changes in forms</param>
            <returns>True for success or False otherwise</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormField_GetMaxLen(System.IntPtr)">
            <summary>
            Get the maximum length of the field’s text, in characters. 
            </summary>
            <param name="frmField">Handle to field. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetField(System.IntPtr,System.Int32,System.String)"/> function./</param>
            <returns>The maximum length of the field’s text, in characters. </returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormField_CountSelectedItems(System.IntPtr)">
            <summary>
            Get selected items count
            </summary>
            <param name="frmField">Handle to field. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetField(System.IntPtr,System.Int32,System.String)"/> function./</param>
            <returns>Number of selected items</returns>
            <remarks>
            For choice fields that allow multiple
            selection (MultiSelect flag set), an array of integers, sorted in ascending order, representing
            the zero-based indices in the Opt array of the currently selected option items. This
            entry is required when two or more elements in the Opt array have different names but
            the same export value or when the value of the choice field is an array. In other cases, the
            entry is permitted but not required. If the items identified by this entry differ from those
            in the V entry of the field dictionary (see below), the V entry takes precedence. 
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormField_GetSelectedIndex(System.IntPtr,System.Int32)">
            <summary>
            Gets selected index
            </summary>
            <param name="frmField">Handle to field. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetField(System.IntPtr,System.Int32,System.String)"/> function./</param>
            <param name="index">Index of item ranging from 0 to <see cref="M:Patagames.Pdf.Pdfium.FPDFFormField_CountSelectedItems(System.IntPtr)"/></param>
            <returns>Selected index</returns>
            <remarks>
            For choice fields that allow multiple
            selection (MultiSelect flag set), an array of integers, sorted in ascending order, representing
            the zero-based indices in the Opt array of the currently selected option items. This
            entry is required when two or more elements in the Opt array have different names but
            the same export value or when the value of the choice field is an array. In other cases, the
            entry is permitted but not required. If the items identified by this entry differ from those
            in the V entry of the field dictionary (see below), the V entry takes precedence. 
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormField_ClearSelection(System.IntPtr,System.Boolean)">
            <summary>
            Clear field's selection
            </summary>
            <param name="frmField">Handle to field. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetField(System.IntPtr,System.Int32,System.String)"/> function./</param>
            <param name="bNotify">True for notify application about changes in forms</param>
            <returns>True for success or False otherwise</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormField_IsItemSelected(System.IntPtr,System.Int32)">
            <summary>
            Determines that the Combobox's or Listbox's item specified by index is selected
            </summary>
            <param name="frmField">Handle to field. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetField(System.IntPtr,System.Int32,System.String)"/> function./</param>
            <param name="index">Zero based index of item in Combobox or Listbox.</param>
            <returns>True if item selected, False otherwise</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormField_SetItemSelection(System.IntPtr,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Select or deselect Combobox or Listbox item
            </summary>
            <param name="frmField">Handle to field. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetField(System.IntPtr,System.Int32,System.String)"/> function./</param>
            <param name="index">Zero based index of item in Combobox or Listbox.</param>
            <param name="bSelected">True for select, False otherwise</param>
            <param name="bNotify">True for notify application about changes in forms</param>
            <returns>True for success or False otherwise</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormField_IsItemDefaultSelected(System.IntPtr,System.Int32)">
            <summary>
            Determines that the Combobox's or Listbox's item specified by index is selected by Default
            </summary>
            <param name="frmField">Handle to field. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetField(System.IntPtr,System.Int32,System.String)"/> function./</param>
            <param name="index">Zero based index of item in Combobox or Listbox.</param>
            <returns>True if item selected, False otherwise</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormField_GetDefaultSelectedItem(System.IntPtr)">
            <summary>
            Get the Combobox's or Listbox's index of item selected by default.
            </summary>
            <param name="frmField">Handle to field. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetField(System.IntPtr,System.Int32,System.String)"/> function./</param>
            <returns>Zero based index.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormField_CountOptions(System.IntPtr)">
            <summary>
            Get the total number of options to be presented to the user in choise field. 
            </summary>
            <param name="frmField">Handle to field. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetField(System.IntPtr,System.Int32,System.String)"/> function./</param>
            <returns>Number of options to be presented to the user in choice field</returns>
            <remarks>
            Each element of the choice field is either a text string representing one of the available options or an array consisting of two text strings: the option’s export value and the text to be displayed as the name of the option
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormField_GetOptionLabel(System.IntPtr,System.Int32)">
            <summary>
            Get option's label 
            </summary>
            <param name="frmField">Handle to field. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetField(System.IntPtr,System.Int32,System.String)"/> function./</param>
            <param name="index">Index of option's item</param>
            <returns>Option label</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormField_GetOptionValue(System.IntPtr,System.Int32)">
            <summary>
            Get option's value 
            </summary>
            <param name="frmField">Handle to field. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetField(System.IntPtr,System.Int32,System.String)"/> function./</param>
            <param name="index">Index of option's item</param>
            <returns>Option value</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormField_FindOption(System.IntPtr,System.String)">
            <summary>
            Find option by label
            </summary>
            <param name="frmField">Handle to field. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetField(System.IntPtr,System.Int32,System.String)"/> function./</param>
            <param name="csOptLabel">Option label</param>
            <returns>Zero based index of option</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormField_FindOptionValue(System.IntPtr,System.String,System.Int32)">
            <summary>
            Find option by value
            </summary>
            <param name="frmField">Handle to field. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetField(System.IntPtr,System.Int32,System.String)"/> function./</param>
            <param name="csOptValue">Option value</param>
            <param name="iStartIndex">The index of the first element to search for</param>
            <returns>Zero based index of option</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormField_CheckControl(System.IntPtr,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Toggle Checkbox or Radiobutton
            </summary>
            <param name="frmField">Handle to field. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetField(System.IntPtr,System.Int32,System.String)"/> function./</param>
            <param name="iControlIndex">Zerobased index of field's control</param>
            <param name="bChecked">True for check, False otherwise</param>
            <param name="bNotify">True for notify application about changes in forms</param>
            <returns>True for success, False otherwise.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormField_GetTopVisibleIndex(System.IntPtr)">
            <summary>
            Get the first visible index for scrollable list boxes
            </summary>
            <param name="frmField">Handle to field. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetField(System.IntPtr,System.Int32,System.String)"/> function./</param>
            <returns>For scrollable list boxes, the top index (the index that the first option visible in the list)</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormField_CountSelectedOptions(System.IntPtr)">
            <summary>
            Count of selected options
            </summary>
            <param name="frmField">Handle to field. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetField(System.IntPtr,System.Int32,System.String)"/> function./</param>
            <returns>Count of selected options</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormField_GetSelectedOptionIndex(System.IntPtr,System.Int32)">
            <summary>
            Get index of selected option specified by index
            </summary>
            <param name="frmField">Handle to field. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetField(System.IntPtr,System.Int32,System.String)"/> function./</param>
            <param name="index">Index of item in selected list ranging from 0 to <see cref="M:Patagames.Pdf.Pdfium.FPDFFormField_CountSelectedOptions(System.IntPtr)"/></param>
            <returns>Zero based index of item in option</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormField_IsOptionSelected(System.IntPtr,System.Int32)">
            <summary>
            Determines that the option's item specified by index is selected
            </summary>
            <param name="frmField">Handle to field. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetField(System.IntPtr,System.Int32,System.String)"/> function./</param>
            <param name="iOptIndex">Zero based index of item in option</param>
            <returns>True if selected, False otherwise.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormField_SelectOption(System.IntPtr,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Select or deselect option's item specified by index
            </summary>
            <param name="frmField">Handle to field. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetField(System.IntPtr,System.Int32,System.String)"/> function./</param>
            <param name="iOptIndex">Zero based index of item in option</param>
            <param name="bSelected">True for select, False otherwise</param>
            <param name="bNotify">True for notify application about changes in forms</param>
            <returns>True for success, false otherwise.</returns>
        </member>
        <member name="M:Patagames.Pdf.Pdfium.FPDFFormField_ClearSelectedOptions(System.IntPtr,System.Boolean)">
            <summary>
            Deselect specified option
            </summary>
            <param name="frmField">Handle to field. Returned by <see cref="M:Patagames.Pdf.Pdfium.FPDFInterForm_GetField(System.IntPtr,System.Int32,System.String)"/> function./</param>
            <param name="bNotify">True for notify application about changes in forms</param>
            <returns>True for success, False otherwise.</returns>
        </member>
        <member name="T:Patagames.Pdf.Net.PdfPage">
            <summary>
            Represents a PDF page inside document.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPage.#ctor(Patagames.Pdf.Net.PdfDocument,System.Int32)">
            <summary>
            construct PdfPage object. Do not load actualy it.
            </summary>
            <param name="document">Document containing this page</param>
            <param name="page_index">Page index inside document</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPage.Dispose">
            <summary>
            Dispose PDFPage object.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPage.Render(System.Int32,System.Int32,System.Int32,System.Int32,Patagames.Pdf.Enums.PageRotate,Patagames.Pdf.Enums.RenderFlags,System.Drawing.Color)">
            <summary>
            Render contents in a page to a image specified by a coordinate pair, a width, and a height.
            </summary>
            <param name="x">Left pixel position of the display area in the device coordinate</param>
            <param name="y">Top pixel position of the display area in the device coordinate.</param>
            <param name="width">Horizontal size (in pixels) for displaying the page</param>
            <param name="height">Vertical size (in pixels) for displaying the page.</param>
            <param name="rotate">Page orientation. <see cref="T:Patagames.Pdf.Enums.PageRotate"/> for details.</param>
            <param name="flags">RenderFlags.None for normal display, or combination of <see cref="T:Patagames.Pdf.Enums.RenderFlags"/></param>
            <param name="marginColor">Backgrounf color for non-displayable area</param>
            <returns>Image contains rendered page</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPage.Render(System.Drawing.Point,System.Drawing.Size,Patagames.Pdf.Enums.PageRotate,Patagames.Pdf.Enums.RenderFlags,System.Drawing.Color)">
            <summary>
            Render contents in a page to a image specified by a location and size.
            </summary>
            <param name="location">A <see cref="T:System.Drawing.Point"/> structure that represents the Top-Left corner of the display area in the device coordinate.</param>
            <param name="size">A <see cref="T:System.Drawing.Size"/> structure that represents the horizontal and vertical size (in pixels) for displaying the page.</param>
            <param name="rotate">Page orientation. <see cref="T:Patagames.Pdf.Enums.PageRotate"/> for details.</param>
            <param name="flags">RenderFlags.None for normal display, or combination of <see cref="T:Patagames.Pdf.Enums.RenderFlags"/></param>
            <param name="marginColor">Backgrounf color for non-displayable area</param>
            <returns>Image contains rendered page</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPage.Render(System.Drawing.Rectangle,Patagames.Pdf.Enums.PageRotate,Patagames.Pdf.Enums.RenderFlags,System.Drawing.Color)">
            <summary>
            Render contents in a page to a image specified by a <see cref="T:System.Drawing.Rectangle"/> structure.
            </summary>
            <param name="rect">A <see cref="T:System.Drawing.Rectangle"/> structure that represents the rectangle in the device coordinate. </param>
            <param name="rotate">Page orientation. <see cref="T:Patagames.Pdf.Enums.PageRotate"/> for details.</param>
            <param name="flags">RenderFlags.None for normal display, or combination of <see cref="T:Patagames.Pdf.Enums.RenderFlags"/></param>
            <param name="marginColor">Backgrounf color for non-displayable area</param>
            <returns>Image contains rendered page</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPage.Render(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,Patagames.Pdf.Enums.PageRotate,Patagames.Pdf.Enums.RenderFlags)">
            <summary>
            Render contents in a page to a drawing surface specified by a coordinate pair, a width, and a height.
            </summary>
            <param name="graphics">GDI+ drawing surface</param>
            <param name="x">Left pixel position of the display area in the device coordinate</param>
            <param name="y">Top pixel position of the display area in the device coordinate.</param>
            <param name="width">Horizontal size (in pixels) for displaying the page</param>
            <param name="height">Vertical size (in pixels) for displaying the page.</param>
            <param name="rotate">Page orientation. <see cref="T:Patagames.Pdf.Enums.PageRotate"/> for details.</param>
            <param name="flags">RenderFlags.None for normal display, or combination of <see cref="T:Patagames.Pdf.Enums.RenderFlags"/></param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPage.Render(System.Drawing.Graphics,System.Drawing.Point,System.Drawing.Size,Patagames.Pdf.Enums.PageRotate,Patagames.Pdf.Enums.RenderFlags)">
            <summary>
            Render contents in a page to a drawing surface specified by a location and size.
            </summary>
            <param name="graphics">GDI+ drawing surface</param>
            <param name="location">A <see cref="T:System.Drawing.Point"/> structure that represents the Top-Left corner of the display area in the device coordinate.</param>
            <param name="size">A <see cref="T:System.Drawing.Size"/> structure that represents the horizontal and vertical size (in pixels) for displaying the page.</param>
            <param name="rotate">Page orientation. <see cref="T:Patagames.Pdf.Enums.PageRotate"/> for details.</param>
            <param name="flags">RenderFlags.None for normal display, or combination of <see cref="T:Patagames.Pdf.Enums.RenderFlags"/></param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPage.Render(System.Drawing.Graphics,System.Drawing.Rectangle,Patagames.Pdf.Enums.PageRotate,Patagames.Pdf.Enums.RenderFlags)">
            <summary>
            Render contents in a page to a drawing surface specified by a <see cref="T:System.Drawing.Rectangle"/> structure.
            </summary>
            <param name="graphics">GDI+ drawing surface</param>
            <param name="rect">A <see cref="T:System.Drawing.Rectangle"/> structure that represents the rectangle in the device coordinate. </param>
            <param name="rotate">Page orientation. <see cref="T:Patagames.Pdf.Enums.PageRotate"/> for details.</param>
            <param name="flags">RenderFlags.None for normal display, or combination of <see cref="T:Patagames.Pdf.Enums.RenderFlags"/></param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPage.Render(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,Patagames.Pdf.Enums.PageRotate,Patagames.Pdf.Enums.RenderFlags)">
            <summary>
            Render contents in a page to the device context specified by a coordinate pair, a width, and a height.
            </summary>
            <param name="hdc">Device context</param>
            <param name="x">Left pixel position of the display area in the device coordinate</param>
            <param name="y">Top pixel position of the display area in the device coordinate.</param>
            <param name="width">Horizontal size (in pixels) for displaying the page</param>
            <param name="height">Vertical size (in pixels) for displaying the page.</param>
            <param name="rotate">Page orientation. <see cref="T:Patagames.Pdf.Enums.PageRotate"/> for details.</param>
            <param name="flags">RenderFlags.None for normal display, or combination of <see cref="T:Patagames.Pdf.Enums.RenderFlags"/></param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPage.Render(System.IntPtr,System.Drawing.Point,System.Drawing.Size,Patagames.Pdf.Enums.PageRotate,Patagames.Pdf.Enums.RenderFlags)">
            <summary>
            Render contents in a page to the device context specified by a location and size.
            </summary>
            <param name="hdc">Device context</param>
            <param name="location">A <see cref="T:System.Drawing.Point"/> structure that represents the Top-Left corner of the display area in the device coordinate.</param>
            <param name="size">A <see cref="T:System.Drawing.Size"/> structure that represents the horizontal and vertical size (in pixels) for displaying the page.</param>
            <param name="rotate">Page orientation. <see cref="T:Patagames.Pdf.Enums.PageRotate"/> for details.</param>
            <param name="flags">RenderFlags.None for normal display, or combination of <see cref="T:Patagames.Pdf.Enums.RenderFlags"/></param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPage.Render(System.IntPtr,System.Drawing.Rectangle,Patagames.Pdf.Enums.PageRotate,Patagames.Pdf.Enums.RenderFlags)">
            <summary>
            Render contents in a page to the device context specified by a <see cref="T:System.Drawing.Rectangle"/> structure.
            </summary>
            <param name="hdc">Device context</param>
            <param name="rect">A <see cref="T:System.Drawing.Rectangle"/> structure that represents the rectangle in the device coordinate. </param>
            <param name="rotate">Page orientation. <see cref="T:Patagames.Pdf.Enums.PageRotate"/> for details.</param>
            <param name="flags">RenderFlags.None for normal display, or combination of <see cref="T:Patagames.Pdf.Enums.RenderFlags"/></param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPage.StartProgressiveRender(Patagames.Pdf.Net.PdfBitmap,System.Int32,System.Int32,System.Int32,System.Int32,Patagames.Pdf.Enums.PageRotate,Patagames.Pdf.Enums.RenderFlags,System.Byte[])">
            <summary>
            Start to render page contents to a device independent bitmap progressively specified by a coordinate pair, a width, and a height.
            </summary>
            <param name="bitmap">Instance of <see cref="T:Patagames.Pdf.Net.PdfBitmap"/> class.</param>
            <param name="x">Left pixel position of the display area in the bitmap coordinate.</param>
            <param name="y">Top pixel position of the display area in the bitmap coordinate.</param>
            <param name="width">Horizontal size (in pixels) for displaying the page.</param>
            <param name="height">Vertical size (in pixels) for displaying the page.</param>
            <param name="rotate">Page orientation: 0 (normal), 1 (rotated 90 degrees clockwise), 2 (rotated 180 degrees), 3 (rotated 90 degrees counter-clockwise).</param>
            <param name="flags">0 for normal display, or combination of flags defined above.</param>
            <param name="userData">A user defined data pointer, used by user's application. Can be NULL.</param>
            <returns>Rendering Status. See <see cref="T:Patagames.Pdf.Enums.ProgressiveRenderingStatuses"/> for the details.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPage.StartProgressiveRender(Patagames.Pdf.Net.PdfBitmap,System.Drawing.Point,System.Drawing.Size,Patagames.Pdf.Enums.PageRotate,Patagames.Pdf.Enums.RenderFlags,System.Byte[])">
            <summary>
            Start to render page contents to a device independent bitmap progressively specified by a location and size.
            </summary>
            <param name="bitmap">Instance of <see cref="T:Patagames.Pdf.Net.PdfBitmap"/> class.</param>
            <param name="location">A <see cref="T:System.Drawing.Point"/> structure that represents the Top-Left corner of the display area in the bitmap coordinate.</param>
            <param name="size">A <see cref="T:System.Drawing.Size"/> structure that represents the horizontal and vertical size (in pixels) for displaying the page.</param>
            <param name="rotate">Page orientation: 0 (normal), 1 (rotated 90 degrees clockwise), 2 (rotated 180 degrees), 3 (rotated 90 degrees counter-clockwise).</param>
            <param name="flags">0 for normal display, or combination of flags defined above.</param>
            <param name="userData">A user defined data pointer, used by user's application. Can be NULL.</param>
            <returns>Rendering Status. See <see cref="T:Patagames.Pdf.Enums.ProgressiveRenderingStatuses"/> for the details.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPage.StartProgressiveRender(Patagames.Pdf.Net.PdfBitmap,System.Drawing.Rectangle,Patagames.Pdf.Enums.PageRotate,Patagames.Pdf.Enums.RenderFlags,System.Byte[])">
            <summary>
            Start to render page contents to a device independent bitmap progressively specified by a <see cref="T:System.Drawing.Rectangle"/> structure.
            </summary>
            <param name="bitmap">Instance of <see cref="T:Patagames.Pdf.Net.PdfBitmap"/> class.</param>
            <param name="rect">A <see cref="T:System.Drawing.Rectangle"/> structure that represents the rectangle in the device coordinate. </param>
            <param name="rotate">Page orientation: 0 (normal), 1 (rotated 90 degrees clockwise), 2 (rotated 180 degrees), 3 (rotated 90 degrees counter-clockwise).</param>
            <param name="flags">0 for normal display, or combination of flags defined above.</param>
            <param name="userData">A user defined data pointer, used by user's application. Can be NULL.</param>
            <returns>Rendering Status. See <see cref="T:Patagames.Pdf.Enums.ProgressiveRenderingStatuses"/> for the details.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPage.ContinueProgressiveRender">
            <summary>
            Continue rendering a PDF page.
            </summary>
            <returns>The rendering status. See <see cref="T:Patagames.Pdf.Enums.ProgressiveRenderingStatuses"/> for the details.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPage.CancelProgressiveRender">
            <summary>
            Release the resource allocate during page rendering. Need to be called after finishing rendering or cancel the rendering.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPage.Render(Patagames.Pdf.Net.PdfBitmap,System.Int32,System.Int32,System.Int32,System.Int32,Patagames.Pdf.Enums.PageRotate,Patagames.Pdf.Enums.RenderFlags)">
            <summary>
            Render contents in a page to a device-independent bitmap specified by a coordinate pair, a width, and a height.
            </summary>
            <param name="bitmap">Instance of <see cref="T:Patagames.Pdf.Net.PdfBitmap"/> class.</param>
            <param name="x">Left pixel position of the display area in the device coordinate</param>
            <param name="y">Top pixel position of the display area in the device coordinate</param>
            <param name="width">Horizontal size (in pixels) for displaying the page.</param>
            <param name="height">Vertical size (in pixels) for displaying the page.</param>
            <param name="rotate">Page orientation. See <see cref="T:Patagames.Pdf.Enums.PageRotate"/> for details.</param>
            <param name="flags">RenderFlags.None for normal display, or combination of <see cref="T:Patagames.Pdf.Enums.RenderFlags"/></param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPage.Render(Patagames.Pdf.Net.PdfBitmap,System.Drawing.Point,System.Drawing.Size,Patagames.Pdf.Enums.PageRotate,Patagames.Pdf.Enums.RenderFlags)">
            <summary>
            Render contents in a page to a device-independent bitmap specified by a location and size.
            </summary>
            <param name="bitmap">Instance of <see cref="T:Patagames.Pdf.Net.PdfBitmap"/> class.</param>
            <param name="location">A <see cref="T:System.Drawing.Point"/> structure that represents the Top-Left corner of the display area in the bitmap coordinate.</param>
            <param name="size">A <see cref="T:System.Drawing.Size"/> structure that represents the horizontal and vertical size (in pixels) for displaying the page.</param>
            <param name="rotate">Page orientation. See <see cref="T:Patagames.Pdf.Enums.PageRotate"/> for details.</param>
            <param name="flags">RenderFlags.None for normal display, or combination of <see cref="T:Patagames.Pdf.Enums.RenderFlags"/></param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPage.Render(Patagames.Pdf.Net.PdfBitmap,System.Drawing.Rectangle,Patagames.Pdf.Enums.PageRotate,Patagames.Pdf.Enums.RenderFlags)">
            <summary>
            Render contents in a page to a device-independent bitmap specified by a <see cref="T:System.Drawing.Rectangle"/> structure.
            </summary>
            <param name="bitmap">Instance of <see cref="T:Patagames.Pdf.Net.PdfBitmap"/> class.</param>
            <param name="rect">A <see cref="T:System.Drawing.Rectangle"/> structure that represents the rectangle in the device coordinate. </param>
            <param name="rotate">Page orientation. See <see cref="T:Patagames.Pdf.Enums.PageRotate"/> for details.</param>
            <param name="flags">RenderFlags.None for normal display, or combination of <see cref="T:Patagames.Pdf.Enums.RenderFlags"/></param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPage.RenderForms(Patagames.Pdf.Net.PdfBitmap,System.Int32,System.Int32,System.Int32,System.Int32,Patagames.Pdf.Enums.PageRotate,Patagames.Pdf.Enums.RenderFlags)">
            <summary>
            Render FormFeilds on a page to a device independent bitmap. 
            </summary>
            <param name="bitmap">Instance of <see cref="T:Patagames.Pdf.Net.PdfBitmap"/> class (as the output buffer).</param>
            <param name="x">Left pixel position of the display area in the device coordinate.</param>
            <param name="y">Top pixel position of the display area in the device coordinate.</param>
            <param name="width">Horizontal size (in pixels) for displaying the page.</param>
            <param name="height">Vertical size (in pixels) for displaying the page.</param>
            <param name="rotate">Page orientation: 0 (normal), 1 (rotated 90 degrees clockwise), 2 (rotated 180 degrees), 3 (rotated 90 degrees counter-clockwise).</param>
            <param name="flags">0 for normal display, or combination of flags defined above.</param>
            <remarks>
            This method is designed to only render annotations and FormFields on the page. 
            Without FPDF_ANNOT specified for flags, Rendering functions such as <see cref="M:Patagames.Pdf.Net.PdfPage.Render(Patagames.Pdf.Net.PdfBitmap,System.Int32,System.Int32,System.Int32,System.Int32,Patagames.Pdf.Enums.PageRotate,Patagames.Pdf.Enums.RenderFlags)"/> or <see cref="M:Patagames.Pdf.Net.PdfPage.StartProgressiveRender(Patagames.Pdf.Net.PdfBitmap,System.Int32,System.Int32,System.Int32,System.Int32,Patagames.Pdf.Enums.PageRotate,Patagames.Pdf.Enums.RenderFlags,System.Byte[])"/> will only render page contents(without annotations) to a bitmap.
            In order to implement the FormFill functions,Implementation should call this method after rendering functions finish rendering the page contents.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPage.FlattenPage(Patagames.Pdf.Enums.FlattenFlags)">
            <summary>
            Flat a pdf page, annotations or form fields will become part of the page contents.
            </summary>
            <param name="flag">the flag for the use of flatten result. FlattenFlags.NormalDisplay for normal display, FlattenFlags.FlatPrint for print.</param>
            <returns>The result flag of the function, See flags <see cref="T:Patagames.Pdf.Enums.FlattenResults"/>.</returns>
            <remarks>Current Version on all fails return zero.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPage.TransformWithClip(Patagames.Pdf.FS_MATRIX,Patagames.Pdf.FS_RECTF)">
            <summary>
            Transform the whole page with a specified matrix, then clip the page content region.
            </summary>
            <param name="matrix">The transform matrix.</param>
            <param name="clipRect">A rectangle page area to be clipped.</param>
            <returns>True if success,else false.</returns>
            <remarks>This function will transform the whole page, and would take effect to all the objects in the page.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPage.InsertClipPath(Patagames.Pdf.Net.PdfClipPath)">
            <summary>
            Clip the page content, the page content that outside the clipping region become invisible.
            </summary>
            <param name="clipPath">A instance of <see cref="T:Patagames.Pdf.Net.PdfClipPath"/> class.</param>
            <remarks>A clip path will be inserted before the page content stream or content array. 
            In this way, the page content will be clipped by this clip path.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPage.GenerateContent">
            <summary>
            Generate PDF Page content. 
            </summary>
            <returns>True if successful, false otherwise.</returns>
            <remarks>Before you save the page to a file, or reload the page, you must call the GenerateContent function. Or the changed information will be lost.</remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPage.TransformAnnots(Patagames.Pdf.FS_MATRIX)">
            <summary>
            Transform (scale, rotate, shear, move) all annots in a page.
            </summary>
            <param name="matrix">The transform matrix</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPage.DeviceToPage(System.Int32,System.Int32,System.Int32,System.Int32,Patagames.Pdf.Enums.PageRotate,System.Int32,System.Int32)">
            <summary>
            Convert the screen coordinate of a point to page coordinate.
            </summary>
            <param name="x">Left pixel position of the display area in the device coordinate</param>
            <param name="y">Top pixel position of the display area in the device coordinate</param>
            <param name="width">Horizontal size (in pixels) for displaying the page</param>
            <param name="height">Vertical size (in pixels) for displaying the page</param>
            <param name="rotate">Page orientation: 0 (normal), 1 (rotated 90 degrees clockwise),2 (rotated 180 degrees), 3 (rotated 90 degrees counter-clockwise).</param>
            <param name="deviceX">X value in device coordinate, for the point to be converted</param>
            <param name="deviceY">Y value in device coordinate, for the point to be converted</param>
            <returns><see cref="T:System.Drawing.PointF"/> structure that represents the point in page coordinate</returns>
            <remarks>The page coordinate system has its origin at left-bottom corner of the page, with X axis goes
            along the bottom side to the right, and Y axis goes along the left side upward. NOTE: this
            coordinate system can be altered when you zoom, scroll, or rotate a page, however, a point on
            the page should always have the same coordinate values in the page coordinate system.
            The device coordinate system is device dependant. For screen device, its origin is at left-top
            corner of the window. However this origin can be altered by Windows coordinate
            transformation utilities. You must make sure the x, y, width, height and rotate
            parameters have exactlysame values as you used in <see cref="O:Render"/> methods call.
            </remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPage.PageToDevice(System.Int32,System.Int32,System.Int32,System.Int32,Patagames.Pdf.Enums.PageRotate,System.Single,System.Single)">
            <summary>
            Convert the page coordinate of a point to screen coordinate
            </summary>
            <param name="x">Left pixel position of the display area in the device coordinate</param>
            <param name="y">Top pixel position of the display area in the device coordinate</param>
            <param name="width">Horizontal size (in pixels) for displaying the page</param>
            <param name="height">Vertical size (in pixels) for displaying the page</param>
            <param name="rotate">Page orientation: 0 (normal), 1 (rotated 90 degrees clockwise),2 (rotated 180 degrees), 3 (rotated 90 degrees counter-clockwise).</param>
            <param name="pageX">X value in page coordinate, for the point to be converted</param>
            <param name="pageY">Y value in page coordinate, for the point to be converted</param>
            <returns><see cref="T:System.Drawing.Point"/> structure that represents the point in device coordinate</returns>
            <remarks>See remarks of <see cref="M:Patagames.Pdf.Net.PdfPage.DeviceToPage(System.Int32,System.Int32,System.Int32,System.Int32,Patagames.Pdf.Enums.PageRotate,System.Int32,System.Int32)"/> function</remarks>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPage.DoPageAAction(Patagames.Pdf.Enums.PageActionTypes)">
            <summary>
            This method is required for performing the page object's additional-action when opened or closed.
            </summary>
            <param name="aaType">The type of the page object's additional-actions. See <see cref="T:Patagames.Pdf.Enums.PageActionTypes"/> for details.</param>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPage.OnMouseMove(System.Int32,System.Single,System.Single)">
            <summary>
            You can call this member function when the mouse cursor moves.
            </summary>
            <param name="modifier">Indicates whether various virtual keys are down. </param>
            <param name="x">Specifies the x-coordinate of the cursor in PDF user space.</param>
            <param name="y">Specifies the y-coordinate of the cursor in PDF user space.</param>
            <returns>TRUE indicates success; otherwise false.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPage.OnLButtonDown(System.Int32,System.Single,System.Single)">
            <summary>
            You can call this member function when the user presses the left mouse button.
            </summary>
            <param name="modifier">Indicates whether various virtual keys are down. </param>
            <param name="x">Specifies the x-coordinate of the cursor in PDF user space.</param>
            <param name="y">Specifies the y-coordinate of the cursor in PDF user space.</param>
            <returns>TRUE indicates success; otherwise false.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPage.OnLButtonUp(System.Int32,System.Single,System.Single)">
            <summary>
            You can call this member function when the user releases the left mouse button.
            </summary>
            <param name="modifier">Indicates whether various virtual keys are down. </param>
            <param name="x">Specifies the x-coordinate of the cursor in PDF user space.</param>
            <param name="y">Specifies the y-coordinate of the cursor in PDF user space.</param>
            <returns>TRUE indicates success; otherwise false.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPage.OnKeyDown(Patagames.Pdf.Enums.FWL_VKEYCODE,Patagames.Pdf.Enums.KeyboardModifiers)">
            <summary>
            You can call this member function when a key is pressed. 
            </summary>
            <param name="keyCode">Indicates whether various virtual keys are down. </param>
            <param name="modifier">Contains the scan code, key-transition code, previous key state, and context code.</param>
            <returns>TRUE indicates success; otherwise false.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPage.OnKeyUp(Patagames.Pdf.Enums.FWL_VKEYCODE,Patagames.Pdf.Enums.KeyboardModifiers)">
            <summary>
            You can call this member function when a key is released. 
            </summary>
            <param name="keyCode">Indicates whether various virtual keys are up. </param>
            <param name="modifier">Contains the scan code, key-transition code, previous key state, and context code.</param>
            <returns>TRUE indicates success; otherwise false.</returns>
        </member>
        <member name="M:Patagames.Pdf.Net.PdfPage.GetFormFieldAtPoint(System.Single,System.Single)">
            <summary>
            Check the form field position by point.
            </summary>
            <param name="x">X position in PDF "user space".</param>
            <param name="y">Y position in PDF "user space".</param>
            <returns>Return the type of the formfiled; -1 indicates no fields.</returns>
        </member>
        <member name="E:Patagames.Pdf.Net.PdfPage.ProgressiveRender">
            <summary>
            SDK fire this event during rendering process initiated by <see cref="O:BeginProgressiveRender"/> method. 
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfPage.IsLoaded">
            <summary>
            Gets a value that represents that whether the page was loaded.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfPage.PageNum">
            <summary>
            Gets or Sets internal page nunber
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfPage.Document">
            <summary>
            Gets the PDF document associated with the current page.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfPage.Text">
            <summary>
            Getscurrent instance of <see cref="T:Patagames.Pdf.Net.PdfText"/> class that represents information about all characters in a page.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfPage.PageObjects">
            <summary>
            Gets the collection of PDF page objects found in the current page.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfPage.Links">
            <summary>
            Gets the collection of PDF links found in the current page.
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfPage.Handle">
            <summary>
            Gets the Pdfium SDK handle that the page is bound to
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfPage.Width">
            <summary>
            Gets page width (excluding non-displayable area) measured in points.One point is 1/72 inch (around 0.3528 mm)
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfPage.Height">
            <summary>
            Gets page height (excluding non-displayable area) measured in points.One point is 1/72 inch (around 0.3528 mm)
            </summary>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfPage.MediaBox">
            <summary>
             Gets or sets MediaBox from the page.
            </summary>
            <remarks>The media box defines the boundaries of the physical medium on which the
            page is to be printed. It may include any extended area surrounding the
            finished page for bleed, printing marks, or other such purposes. It may also 
            include areas close to the edges of the medium that cannot be marked because
            of physical limitations of the output device. Content falling outside this boundary
            can safely be discarded without affecting the meaning of the PDF file.</remarks>
            <seealso><a href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF Reference 1.7 SECTION 10.10 Prepress Support 963</a></seealso>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfPage.CropBox">
            <summary>
            Gets or sets CropBox from the page.
            </summary>
            <remarks>The crop box defines the region to which the contents of the page are to be
            clipped (cropped) when displayed or printed. Unlike the other boxes, the crop
            box has no defined meaning in terms of physical page geometry or intended
            use; it merely imposes clipping on the page contents. However, in the absence
            of additional information (such as imposition instructions specified in a JDF or
            PJTF job ticket), the crop box determines how the page’s contents are to be positioned
            on the output medium. The default value is the page’s media box. 
            See <a href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF reference 1.7.pdf</a> for more details
            </remarks>
            <seealso><a href="http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf">PDF Reference 1.7</a></seealso>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfPage.Rotation">
            <summary>
            Gets or sets the page rotation.
            </summary>
            <remarks>The PDF page rotates clockwise. See <see cref="T:Patagames.Pdf.Enums.PageRotate"/> for details.</remarks>
        </member>
        <member name="P:Patagames.Pdf.Net.PdfPage.IsTransparency">
            <summary>
            Gets a value that represents that whether the content of the current PDF page contains transparency.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.SplashScreen.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Patagames.Pdf.SplashScreen.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Patagames.Pdf.SplashScreen.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Patagames.Pdf.FSDKUnsupportHandlerCallback">
            <summary>
            UnSupport Object process handling function.
            </summary>
            <param name="pThis">Pointer to the interface structure itself.</param>
            <param name="nType">The type of unsupportObject.</param>
        </member>
        <member name="T:Patagames.Pdf.UNSUPPORT_INFO">
            <summary>
            Represents UNSUPPORT_INFO structure.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.UNSUPPORT_INFO.Version">
            <summary>
            Version number of the interface. Currently must be 1.
            </summary>
        </member>
        <member name="F:Patagames.Pdf.UNSUPPORT_INFO.FSDKUnsupportHandler">
            <summary>
            User callback function. See <see cref="T:Patagames.Pdf.FSDKUnsupportHandlerCallback"/> delegate for detail
            </summary>
        </member>
    </members>
</doc>
